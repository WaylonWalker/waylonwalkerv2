{"version":3,"sources":["webpack:///./node_modules/node-fetch/browser.js","webpack:///./src/components/WebMention.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCards.js","webpack:///./src/components/onelinelink.js","webpack:///./src/components/PostStatus.js","webpack:///./src/templates/blog-post.js"],"names":["global","self","window","Error","getGlobal","module","exports","fetch","default","bind","Headers","Request","Response","WebMentionStyle","styled","div","WebMentionList","ol","WebMention","props","getWebmention","url","a","then","response","json","r","getWebmentions","cleanedUrl","replace","data_no_slash","data_slash","data","map","m","activity","sentence_html","state","componentDidMount","setState","length","loading","render","className","this","i","key","mentionData","React","Component","Mention","href","author","alt","src","photo","dangerouslySetInnerHTML","__html","split","join","PostCardStyle","PostCard","slug","cover","description","title","to","style","textDecoration","fixed","undefined","slice","PostCardsStyle","PostCards","post","index","oneLineLinkCard","text","html","meta","DOMParser","parseFromString","querySelectorAll","filter","name","content","image","sm_image","getDescription","oneLineLinks","linkText","document","p","innerText","paragraphs","regex","includes","childElementCount","firstElementChild","test","outerHTML","PostStatusStyle","PostStatus","statusMessage","status","tags","bright","linkify","el","toLowerCase","trim","BlogPostWrapper","BlogFlex","BlogPostStyles","article","Toc","headings","h","nodeName","color","margin","BlogPostTemplate","id","innerHTML","e","querySelector","classList","add","location","history","pushState","sm_img","fluidCover","date","similarPosts","shortTitle","encodeURIComponent","tweetLink","hnLink","redditLink","facebookLink","Helmet","property","rel","fluid","display","justifyContent","alignItems","textAlign","zIndex","paddingRight","marginBottom","paddingLeft","role","aria-label","dateTime","calss","ref","markdownContainer","justify","class-name","target","height","width","BlogPost","pageContext","markdownRemark","covers","frontmatter","full","keywords","time","fields","allPosts"],"mappings":"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","file":"component---src-templates-blog-post-js-350bdb6311fc559ea2bd.js","sourcesContent":["\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar global = getGlobal();\nmodule.exports = exports = global.fetch; // Needed for TypeScript and Webpack.\n\nif (global.fetch) {\n  exports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import React from 'react'\nimport styled from 'styled-components'\nimport fetch from 'node-fetch'\nimport { FiHeart } from 'react-icons/fi'\n\nconst WebMentionStyle = styled.div`\n  margin-top: 4rem;\n  margin-bottom: 4rem;\n  h2 {\n    text-align: center;\n  }\n\n  .likes {\n    font-size: 1.2rem;\n    color: hsla(323, 47%, 70%, 1);\n  }\n`\n\nconst WebMentionList = styled.ol`\n  list-style-type: none;\n  margin: 1rem auto;\n  padding: 0;\n  color: rgba(255, 255, 255, 0.85);\n  max-width: 500px;\n  min-height: 4rem;\n\n  a.mention-link {\n    color: rgba(255, 255, 255, 0.85);\n    display: block;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    min-height: 60px;\n    align-items: center;\n    img {\n      align-self: flex-start;\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n      margin: 0.4rem 0.8rem 0.4rem 0.4rem;\n      padding: 0;\n    }\n\n    a {\n      color: rgba(255, 255, 255, 0.85);\n    }\n    border: 1px solid #d68fbb;\n    background-color: rgba(214, 143, 187, 0.1);\n    border-radius: 5px;\n    margin: 1rem;\n    padding: 0.2rem;\n    .content {\n      padding-top: 0.2rem;\n      flex-grow: 1;\n      display: flex;\n      flex-direction: column;\n    }\n    a.mention-link {\n      padding: 1rem 1rem 0.2rem;\n      display: block;\n      justify-self: flex-end;\n      align-self: flex-end;\n    }\n  }\n`\n\nexport default class WebMention extends React.Component {\n  constructor(props) {\n    super(props)\n    // url: 'https://waylonwalker.com/reusable-bash',\n    this.state = {\n      url: props.url,\n      loading: true,\n      data: null,\n      length: 0,\n    }\n  }\n  getWebmention = async (url) =>\n    await fetch('https://webmention.io/api/mentions?target=' + url)\n      .then((response) => response.json())\n      .then((r) => r['links'])\n\n  getWebmentions = async (url) => {\n    const cleanedUrl = url.replace(/\\/$/, '')\n    const data_no_slash = await this.getWebmention(cleanedUrl)\n    const data_slash = await this.getWebmention(cleanedUrl + '/')\n    let data = [...data_no_slash, ...data_slash]\n    // console.log('webmentions')\n    // console.log(data)\n    // console.log(data.length)\n\n    data.map((m) => m.activity.sentence_html.replace(this.state.url, ''))\n    // if desired to split likes and replies later use activity.type\n    // data['likes'] = data['all'].filter(r => r.activity.type === 'like')\n    // data['replies'] = [...data['all']].filter(r => r.activity.type !== 'like')\n    return data\n  }\n\n  componentDidMount = async () => {\n    const data = await this.getWebmentions(this.state.url)\n    this.setState({ data: data, length: data.length, loading: false })\n  }\n\n  render() {\n    // const { url, loading, data } = this.state\n    return (\n      <WebMentionStyle>\n        <h2 className=\"no-link\">\n          WebMentions\n          <span className=\"likes\">\n            &nbsp;\n            <FiHeart />\n            {this.state.length}\n          </span>\n        </h2>\n        <p>tweet about this post and it will show up here.</p>\n\n        <WebMentionList>\n          {this.state.loading\n            ? 'loading'\n            : this.state.data.map((m, i) => (\n                <Mention key={i} mentionData={m} url={this.state.url} />\n              ))}\n        </WebMentionList>\n      </WebMentionStyle>\n    )\n  }\n}\n\nconst Mention = ({ mentionData, url }) => (\n  <li>\n    <a className=\"mention-link no-decoration\" href={mentionData.data.url}>\n      {mentionData.data.author ? (\n        <img alt=\"authors profile\" src={mentionData.data.author.photo} />\n      ) : (\n        ''\n      )}\n      <div className=\"content\">\n        <div\n          dangerouslySetInnerHTML={{\n            __html: mentionData.activity.sentence_html\n              .split(`<a href=\"${url}\">${url}</a>`)\n              .join('')\n              .split(`<a href=\"${url}/\">${url}/</a>`)\n              .join('')\n              .split(\" replied '\")\n              .join(\"<br><br> '\")\n              .split('to a tweet')\n              .join('')\n              .split('favorited a tweet')\n              .join('<br><br>&nbsp&nbsp&nbsp&nbspfavorited a tweet'),\n          }}\n        />\n      </div>\n    </a>\n  </li>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n// import { useSpring, animated } from 'react-spring'\n\nconst PostCardStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n  max-width: 500px;\n  background: rgba(0, 0, 0, 0.1);\n  padding: 0.2rem;\n  border-radius: 5px;\n  margin: 1rem;\n  h2 {\n    display: block;\n    font-size: 1.2rem;\n    margin: auto 0.2rem;\n    width: 100%;\n  }\n  p {\n    font-size: 1rem;\n  }\n  .post-cover-image {\n    width: 200px;\n    min-width: 200px;\n    height: 85px;\n    min-height: 85px;\n    max-height: 85px;\n  }\n  .description {\n  }\n\n  transition: width 1500ms;\n  transition: max-width 1500ms;\n\n  .postcard-content {\n    perspective: 600px;\n    width: 500px;\n    height: 85px;\n  }\n\n  .description {\n    overflow: hidden;\n    height: 85px;\n    max-height: 85px;\n  }\n  .flip {\n    position: relative;\n    height: 100%;\n    width: 100%;\n    transition: transform 300ms;\n    transition-delay: 500ms;\n    transform-style: preserve-3d;\n    transform-origin: top center;\n  }\n\n  .flip-front,\n  .flip-back {\n    position: absolute;\n    height: 85px;\n    width: 500px;\n    backface-visibility: hidden;\n    z-index: 5;\n  }\n\n  .postcard-content:hover {\n    .flip {\n      transform: rotateX(180deg) translateY(-85px);\n    }\n  }\n  .flip-front {\n    display: flex;\n  }\n\n  .flip-back {\n    transform: rotateX(180deg);\n    background: #2a2832;\n  }\n  .kedro {\n    color: black;\n    padding: 0 0.2rem;\n    border: 1px dotted goldenrod;\n    border-radius: 5px;\n  }\n\n  .python {\n    color: #fcd242;\n    border-bottom: 1px solid #3772a4;\n  }\n  .pandas {\n    color: #fcd242;\n  }\n`\n\nconst PostCard = ({ slug, cover, description, title }) => (\n  <Link to={slug} style={{ textDecoration: 'none' }}>\n    <PostCardStyle className=\"postcard\">\n      <div className=\"postcard-content\">\n        <div className=\"flip\">\n          <div className=\"flip-front\">\n            {cover === null ? (\n              ''\n            ) : (\n              <Img fixed={cover} className=\"post-cover-image\" />\n            )}\n            {title === undefined ? (\n              ''\n            ) : (\n              <h2\n                className=\"no-link\"\n                dangerouslySetInnerHTML={{\n                  __html: title\n                    .replace('kedro', 'Kedro')\n                    .replace('Kedro', '<span class=\"kedro\">Kedro</span>')\n                    .replace('python', 'Python')\n                    .replace('Python', '<span class=\"python\">Python</span>')\n                    .replace('pandas', 'Pandas')\n                    .replace('Pandas', '<span class=\"pandas\">Pandas</span>'),\n                }}\n              />\n            )}\n          </div>\n          <div className=\"flip-back\">\n            <p className=\"description\">\n              {description === null\n                ? ''\n                : description === undefined\n                ? ''\n                : description.slice(0, 150)}\n            </p>\n          </div>\n        </div>\n      </div>\n    </PostCardStyle>\n  </Link>\n)\n\nexport default PostCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport PostCard from './PostCard'\n\nconst PostCardsStyle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  background-color: rbga(255, 0, 0, 0.5);\n`\nconst PostCards = ({ data }) => (\n  <PostCardsStyle className=\"postcard\">\n    {data.slice(0, 6).map((post, index) => (\n      <PostCard to={post} key={index} />\n    ))}\n  </PostCardsStyle>\n)\n\nexport default PostCards\n","const oneLineLinkCardStyle = `\n\n.onelinelink + blockquote {\n  position: relative;\n  left: 2rem;\n  background: rgba(0, 0, 0, .2);\n  margin: -6rem auto 1rem;\n  padding-top: 3rem;\n  border: 1px solid goldenrod;\n  border-top: 2px solid goldenrod;\n\n  max-width: 300px;\n  @media (max-width: 350px) {\n  left: 0rem;\n  margin-left: .4rem;\n  margin-right: .4rem;\n  }\n  @media (min-width: 800px) {\n    max-width: 600px;\n  }\n  @media (min-width: 900px) {\n    max-width: 700px;\n  }\n  @media (min-width: 1000px) {\n    max-width: 800px;\n  }\n  border-radius: 15px/45px;\n  display: block;\n  }\n\n}\n\n.onelinelink {\n  position: relative;\n  z-index: 2;\n  margin: 4rem;\n  overflow: hidden;\n  display: flex;\n  border: 2px solid rgba(255, 50, 50, .1);\n  background: rgba(255, 50, 50, .015);\n  background: #262236;\n  text-decoration: none;\n  border-radius: 8px;\n  max-height: 126px;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n    max-height: 800px;\n    max-width: 300px;\n    margin: 4rem auto;\n\n  }\n\n  h2 {\n    top: -1.2rem;\n    postition: relative;\n    margin: 0;\n    padding: 0;\n    font-size: .8rem;\n    font-weight: 400;\n\n  }\n\n  .right {\n  width: 100%;\n    padding: 5px 15px;\n  }\n  .description {\n    font-size: 1rem;\n    line-height: 1.2rem;\n    height: calc(100% - 31px - 1rem);\n    padding: 0;\n    padding-bottom: 1rem;\n    padding-top: .1rem;\n    margin: 0;\n  }\n  .url {\n    padding-right: 30px;\n    color: rgba(255, 255, 255, .1);\n    text-align: right;\n    position: relative;\n    z-index: 2;\n    background: #262236;\n  }\n  \n  img {\n    max-width: 300px;\n    max-height: 126px;\n    padding: 0;\n    margin: 0;\n    border-radius: 8px 0 0 8px;\n  }\n  .read-more {\n    font-size: .6rem;\n    color: rgba(255, 255, 255, .08);\n  }\n}\n`\nconst getDescription = (url) =>\n  fetch(url)\n    .then((r) => r.text())\n    .then((html) => {\n      let parser = new DOMParser()\n      let doc = parser.parseFromString(html, 'text/html')\n      let meta = doc.querySelectorAll('meta')\n      const description = [...meta].filter(\n        (m) => m.name === 'og:description'\n      )[0].content\n      const image = [...meta].filter((m) => m.name === 'og:image')[0]?.content\n      const sm_image = [...meta].filter((m) => m.name === 'og:sm_image')[0]\n        ?.content\n      const url = [...meta].filter((m) => m.name === 'og:url')[0]?.content\n      const title = [...meta].filter((m) => m.name === 'title')[0]?.content\n      return { description, image, url, title, sm_image }\n    })\n\nconst oneLineLinkCard = (url) => {\n  return getDescription(url).then(\n    (meta) =>\n      `<a class=\"onelinelink\" href=${meta.url}>\n  <img src='${meta.sm_image ? meta.sm_image : meta.image ? meta.image : ''}' alt='cover image for ${meta.title ? meta.title : ''}>\n  <div class=\"right\">\n    <h2>${meta.title ? meta.title : ''}</h2>\n    <p class='description'>\n      ${meta.description ? meta.description : ''}\n    </p>\n    <p class=\"url\">\n       <span class='read-more'>read more</span>  waylonwalker.com\n    </p>\n  </div>\n\n</a>\n  `\n  )\n}\n\nconst oneLineLinks = () => {\n  const linkText = [...document.querySelectorAll('.post-body p a')].map(\n    (p) => p.innerText\n  )\n  const paragraphs = document.querySelectorAll('.post-body p') //\n\n  const regex = /^https?:\\/\\/waylonwalker\\.com\\//\n  const shouldTransform = (url) => regex.test(url)\n\n  const anchorOnly = [...paragraphs].filter(\n    (p) => linkText.includes(p.innerText) && p.childElementCount === 1\n  ) //.map(p => p.firstElementChild)\n\n  anchorOnly\n    .filter((p) => shouldTransform(p.firstElementChild.href))\n    .map(\n      async (p) =>\n        (p.outerHTML = await oneLineLinkCard(p.firstElementChild.href))\n    )\n}\n\nexport { oneLineLinks, oneLineLinkCardStyle }\n","import React from 'react'\n// import { Link } from 'gatsby'\nimport styled from 'styled-components'\n// import { useSpring, animated } from 'react-spring'\n\nconst PostStatusStyle = styled.div`\n  border-radius: 5px;\n  display: flex;\n  justify-content: flex-end;\n  span.emoji {\n    font-size: 1rem;\n  }\n  span.message {\n    display: none !important;\n  }\n  p.status-message {\n    background: none;\n    color: #ff66c4;\n    font-size: 0.6rem;\n    padding: 0;\n    margin: 0;\n    margin-right: 0.5rem;\n    border-radius: 5px;\n    display: inline-block;\n    span.message {\n      display: none;\n    }\n  }\n\n  p.status-message:hover {\n    span.message {\n      display: block;\n    }\n  }\n\n  p.status-message.bright {\n    background: #ff66c4;\n    color: #232136;\n  }\n`\n\nconst PostStatus = ({ status, tags = [], bright = true }) => {\n  // console.log(tags)\n  let statusMessage\n  status === undefined\n    ? (statusMessage = 'undefined')\n    : status === null\n    ? (statusMessage = 'null')\n    : tags.join().includes('tip')\n    ? (statusMessage = '🔥 Hot Tip')\n    : status.includes('published')\n    ? (statusMessage =\n        '<span class=\"emoji\">🎄</span><span class=\"message\">This post has fully grown</span>')\n    : status.includes('draft')\n    ? (statusMessage = '🌱 This post is still growing')\n    : (statusMessage = 'none')\n  return (\n    <PostStatusStyle className={`post-status ${bright ? 'bright' : ''}`}>\n      <p\n        className=\"status-message\"\n        dangerouslySetInnerHTML={{ __html: statusMessage }}\n      />\n    </PostStatusStyle>\n  )\n}\n\nexport default PostStatus\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport WebMention from '../components/WebMention'\nimport PostCards from '../components/PostCards'\nimport { oneLineLinks, oneLineLinkCardStyle } from '../components/onelinelink'\nimport PostStatus from '../components/PostStatus'\nimport Img from 'gatsby-image'\nimport { FiTwitter, FiGithub, FiFacebook } from 'react-icons/fi'\nimport { DiHackernews } from 'react-icons/di'\nimport { IoLogoReddit } from 'react-icons/io'\n\nconst linkify = (el) => el.innerText.toLowerCase().trim().replace(/\\s/g, '-')\n\nconst AddFiLink = (el) =>\n  (el.innerHTML = `\n  ${el.innerHTML}\n  <a href='#${linkify(el)}'>\n  <svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"1\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" height=\".5em\" width=\".5em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg>\n  </a>\n  `)\n\n// `\n//\nconst BlogPostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 1500px) {\n    overflow: hidden;\n  }\n\n  .right {\n    position: relative;\n  }\n  .toc {\n    align-self: flex-start;\n    justify-self: flex-start;\n    top: 100px;\n    position: sticky;\n\n    ol {\n      padding-top: 0px;\n      margin-top: 0px;\n    }\n  }\n  .toc h2 {\n    font-size: 1rem;\n    color: rgba(255, 255, 255, 0.2) !important;\n    font-weight: 100;\n    margin: 0;\n    padding: 0;\n    text-align: center;\n  }\n  .toc ol {\n    list-style-type: none;\n  }\n  .toc a {\n    text-decoration: none;\n  }\n`\n\nconst BlogFlex = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\n// flex-direction: row-reverse;\n.right .toc {\n  @media (max-width: 1500px) {\n    display: none\n    }\n\n`\n\nconst BlogPostStyles = styled.article`\n  overflow: hidden;\n  background: rgba(51, 0, 38, 0.13);\n  background: hsla(234, 33%, 15%, 0.66);\n  display: block;\n  margin: 0.2rem;\n  width: min(95vw, 1000px);\n  @media (max-width: 650px) {\n    width: 100vw;\n    width: min(100vw, 1000px);\n  }\n  position: relative;\n  margin: 2rem 0;\n  padding: 1rem;\n  padding-bottom: 5rem !important;\n  border-radius: 2px;\n  box-shadow: 0.2rem 0.2rem 1rem rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  color: whitesmoke;\n  .u-url {\n    color: rgba(255, 255, 255, 0.8);\n    text-decoration: none;\n    text-align: right;\n    margin-bottom: 2rem;\n  }\n\n  @media (max-width: 1200px) {\n    h1 {\n      font-size: 2.5rem;\n    }\n    margin: 0rem;\n    padding: 0rem;\n    margin: 0rem;\n\n    /* p, pre, ul, li {\n    font-size: .7rem;\n    font-size: .83rem;\n    line-height: 1rem;\n  } */\n\n    p {\n      padding: 0 0.8rem;\n    }\n    h1 {\n      padding: 1rem;\n    }\n    h2 {\n      padding-left: 1rem;\n    }\n    h3 {\n      padding-left: 1.4rem;\n    }\n\n    h4,\n    h5,\n    h6 {\n      padding-left: 1.6rem;\n    }\n\n    ul,\n    ol {\n      padding: 1.2rem;\n    }\n  }\n\n  pre {\n    margin-bottom: 1rem;\n  }\n\n  a {\n    color: #6f6bae;\n    text-decoration-color: #330026;\n    text-decoration-color: goldenrod; /* Wyatt chose goldenrod */\n  }\n  p > img {\n    /* opacity: .8; */\n    box-shadow: 0.2rem 0.2rem 1rem rgba(51, 0, 38, 0.4);\n    max-width: 1000px;\n    width: 95vw;\n    align-self: center;\n    justify-self: center;\n    align-items: center;\n    justify-items: center;\n    margin: auto;\n  }\n\n  strong {\n    color: #d68fbb;\n    display: inline-block;\n    transform: rotate(-2deg);\n  }\n\n  em {\n    color: #6f6bae;\n    display: inline-block;\n    transform: rotate(0.2deg);\n    background: rgba(255, 255, 255, 0.04);\n    padding: 0.1rem 0.8rem;\n  }\n\n  p:has(> img) {\n    margin: 8rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  p {\n    // display: flex;\n    /* font-family: 'Amiko'; */\n  }\n\n  h2 {\n    margin-top: 5rem;\n  }\n\n  ul {\n    border-left: 1px solid #ff66c4;\n    padding: 0.5rem 0 0.025rem 3rem;\n    margin: 2rem;\n  }\n\n  blockquote {\n    color: #777;\n    border-left: 2px solid goldenrod;\n    font-size: 1rem;\n    padding: 1rem 0 1rem 0.5rem;\n    margin: 1.5rem 0;\n  }\n\n  hr {\n    border-top: 1px solid goldenrod;\n    background: none;\n    margin: 1rem 2rem;\n  }\n\n  h1 {\n    margin-top: 5rem;\n  }\n\n  .tweet {\n    display: flex;\n    justify-content: flex-end;\n    margin: 1rem 0;\n  }\n\n  .tweet a {\n    display: inline-block;\n    border-radius: 5px;\n    padding: 0.5rem 1rem;\n    background: #645fc4;\n    color: #fedd58;\n    text-decoration: none;\n    vertical-align: center;\n  }\n\n  .share {\n    max-width: 800px;\n    margin: 0.8rem auto;\n    padding: 1rem 2rem;\n    display: flex;\n    align-items: center;\n\n    border: 1px solid #d68fbb;\n    background-color: rgba(214, 143, 187, 0.1);\n    border-radius: 5px;\n    a {\n      padding: 0.2rem 0.5rem;\n    }\n    p {\n      margin: 0;\n      padding: 0;\n      padding-right: 0.2rem;\n    }\n    ul {\n      li {\n        margin: 0;\n        padding: 0;\n      }\n      display: flex;\n      list-style-type: none;\n      margin: 0;\n      padding: 0;\n      border: none;\n      font-size: 1.3rem;\n    }\n  }\n\n  .post-body hr {\n    border-top: 2px solid rgba(218, 165, 32, 0.2);\n    margin: 3rem 40% !important;\n  }\n\n  .h-card {\n    /* background-color: rgba(255, 255, 255, .2); */\n    /* padding: 1rem; */\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    img {\n      width: 50px;\n      border-radius: 50%;\n      margin: 0.2rem;\n      display: none;\n    }\n    ul.social {\n      list-style-type: none;\n      border: none;\n      margin: 0;\n      padding: 0;\n      li: {\n        margin: 0;\n        padding: 0;\n      }\n    }\n  }\n\n  .toc {\n    width: min(90vw, 600px);\n    margin: auto;\n    position: initial;\n\n    li {\n      padding: 0;\n      margin: 0;\n    }\n\n    li.H1,\n    li.H2 {\n      padding-top: 0.8rem;\n    }\n\n    li.H3 {\n      padding-left: 0.5rem;\n    }\n\n    li.H4 {\n      padding-left: 1rem;\n    }\n\n    li.H5 {\n      padding-left: 1.25rem;\n    }\n\n    li.H6 {\n      padding-left: 1.5rem;\n    }\n\n    font-size: 0.8rem;\n    line-height: 1.1rem;\n    @media (min-width: 1500px) {\n      display: none;\n    }\n  }\n\n  .twitter-tweet {\n    margin: 10px auto;\n  }\n\n  ${oneLineLinkCardStyle}\n`\n// ` fix weird syntax highlighting\n\nclass Toc extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { headings: undefined }\n  }\n  componentDidMount() {\n    // console.log({headings: [...document.querySelectorAll('h1, h2, h3, h4')]})\n    this.setState({\n      headings: [\n        ...document.querySelectorAll(\n          'h1:not(.no-link),h2:not(.no-link),h3:not(.no-link),h4:not(.no-link),h5:not(.no-link),h6:not(.no-link)'\n        ),\n      ],\n    })\n  }\n  render() {\n    return (\n      <div className=\"toc\">\n        <a href=\"#title\">\n          <h2 className=\"no-link\">toc</h2>\n        </a>\n        <ol>\n          {this.state.headings === undefined\n            ? ''\n            : // : this.state.headings.map( h => <li> <a href={`#${linkify(h)}`} style={{color: `rgba(255, 255, 255, ${(8 - h.nodeName.slice(1)*2)/10 }` }}>{'..'.repeat(h.nodeName.slice(1) - 2)} {h.innerText}</a> </li> )\n              this.state.headings.map((h, index) => (\n                <li key={index} className={h.nodeName}>\n                  <a\n                    href={`#${linkify(h)}`}\n                    style={{\n                      color: `rgba(255, 255, 255, ${\n                        (8 - h.nodeName.slice(1) * 2) / 10\n                      })`,\n                    }}\n                  >\n                    {h.innerText}\n                  </a>\n                </li>\n              ))}\n        </ol>\n        <hr style={{ margin: '1rem 25% ' }} />\n      </div>\n    )\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  // constructor(props) {\n  //   super(props)\n  // }\n  componentDidMount() {\n    ;[\n      ...document.querySelectorAll(\n        'h1:not(.no-link),h2:not(.no-link),h3:not(.no-link),h4:not(.no-link),h5:not(.no-link),h6:not(.no-link)'\n      ),\n    ].map((h) => (h.id = linkify(h)))\n    ;[\n      ...document.querySelectorAll(\n        'h1:not(.no-link),h2:not(.no-link),h3:not(.no-link),h4:not(.no-link),h5:not(.no-link),h6:not(.no-link)'\n      ),\n    ].map((h) => (h.innerHTML = AddFiLink(h)))\n    ;[...document.querySelectorAll('em')]\n      .filter((e) => e.querySelector('mark') !== null)\n      .map((e) => e.classList.add('no-highlight'))\n    ;[...document.querySelectorAll('p')]\n      .filter((e) => e.querySelector('.no-highlight') !== null)\n      .map((e) => e.classList.add('no-padding'))\n    if (window.location.href.slice(-1) === '/') {\n      window.history.pushState({}, null, window.location.href.slice(0, -1))\n    }\n    oneLineLinks()\n  }\n\n  render() {\n    const {\n      content,\n      url,\n      slug,\n      description,\n      status,\n      title,\n      cover,\n      sm_img,\n      fluidCover,\n      date,\n      similarPosts,\n    } = this.props\n    // const PostContent = contentComponent || Content\n\n    const shortTitle =\n      title === null ? '' : encodeURIComponent(title.slice(0, 150))\n    const tweetLink = `https://twitter.com/intent/tweet?text=${\n      shortTitle + '%0A%0A@waylonwalker%0A%0A' + url\n    }`\n    const hnLink = `https://news.ycombinator.com/submitlink?u=${url}&t=${shortTitle}`\n    // const linkedinLink = `https://www.linkedin.com/sharing/share-offsite/?url=${url.split(':').join('%3A').split('/').join('%2F')}`\n    // https://www.linkedin.com/shareArticle?mini=true&url=https://dev.to/waylonwalker/what-is-kedro-lob&title=%F0%9F%A4%B7%E2%80%8D%E2%99%80%EF%B8%8F%20What%20is%20Kedro%20(The%20Parts)&summary=kedro%20is%20an%20open-source%20data%20pipeline%20framework.%20%20It%20provides%20guardrails%20to%20set%20your%20project%20up%20right...&source=DEV\n\n    const redditLink = `https://www.reddit.com/submit?url=${url}&title=${shortTitle}`\n    const facebookLink = `https://www.facebook.com/sharer.php?u=${url}`\n    // const day = new Date(date.replace(/-/g, \"/\"))\n\n    return (\n      <>\n        <Helmet\n          meta={[\n            {\n              property: 'title',\n              name: 'title',\n              content: title + ' | Waylon Walker',\n            },\n            {\n              property: 'description',\n              name: 'description',\n              content: description,\n            },\n            { property: 'status', name: 'status', content: status },\n            {\n              property: 'og:title',\n              name: 'og:title',\n              content: title + ' | Waylon Walker',\n            },\n            { property: 'og:url', name: 'og:url', content: url },\n            {\n              property: 'og:article:published_time',\n              name: 'og:article:published_time',\n              content: date,\n            },\n            {\n              property: 'og:article:modified_time',\n              name: 'og:article:modified_time',\n              content: date,\n            },\n            {\n              property: 'og:description',\n              name: 'og:description',\n              content: description,\n            },\n            {\n              property: 'og:image',\n              name: 'og:image',\n              content: 'https://waylonwalker.com' + cover,\n            },\n            {\n              property: 'og:sm_image',\n              name: 'og:sm_image',\n              content: 'https://waylonwalker.com' + sm_img,\n            },\n\n            {\n              property: 'twitter:title',\n              name: 'twitter:title',\n              content: title + ' | Waylon Walker',\n            },\n            {\n              property: 'twitter:card',\n              name: 'twitter:card',\n              content: 'summary_large_image',\n            },\n            {\n              property: 'twitter:image',\n              name: 'twitter:image',\n              content: 'https://waylonwalker.com' + cover,\n            },\n            {\n              property: 'twitter:description',\n              name: 'twitter:description',\n              content: description,\n            },\n          ]}\n        >\n          <title>{title}</title>\n          <link rel=\"canonical\" href={url} />\n        </Helmet>\n        <BlogPostWrapper className=\"blog-post\">\n          <BlogFlex>\n            <div className=\"left\"></div>\n            <BlogPostStyles className=\"h-entry\">\n              {fluidCover !== null ? (\n                <Img fluid={fluidCover} className=\"post-cover-image\" />\n              ) : (\n                ''\n              )}\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <h1\n                  id=\"title\"\n                  style={{\n                    textAlign: 'right',\n                    zIndex: 2,\n                    paddingRight: '.2rem',\n                  }}\n                  className=\"blog title no-link\"\n                >\n                  {title}\n                </h1>\n                <p\n                  style={{\n                    textAlign: 'right',\n                    marginBottom: '2.2rem',\n                    paddingLeft: 0,\n                  }}\n                >\n                  <a\n                    style={{ color: 'goldenrod', textDecoration: 'none' }}\n                    href={`https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/blog${slug.slice(\n                      0,\n                      -1\n                    )}.md`}\n                    alt=\"edit post url\"\n                    title=\"edit this post\"\n                  >\n                    edit\n                    <span role=\"img\" aria-label=\"\">\n                      ✏️\n                    </span>\n                  </a>\n                </p>\n              </div>\n              <PostStatus status={status} />\n              <a className=\"u-url\" href={url}>\n                <p>\n                  <time\n                    className=\"dt-published post-date\"\n                    dateTime={date}\n                    style={{ textAlign: 'right', zIndex: 2 }}\n                  >\n                    {date}\n                  </time>\n                </p>\n              </a>\n              <div className=\"h-card p-author\" rel=\"author\">\n                <div className=\"content\">\n                  <a className=\"p-name u-url\" href=\"https://waylonwalker.com/\">\n                    <span className=\"p-given-name\">Waylon</span>\n                    <span className=\"p-family-name\">Walker</span>\n                  </a>\n                  <p calss=\"p-note\">Learning in Public</p>\n                  {/* <Social /> */}\n                </div>\n                {/* <img */}\n                {/*   className=\"u-photo\" */}\n                {/*   alt=\"author profile\" */}\n                {/*   src=\"https://waylonwalker.com/8bitc.png\" */}\n                {/* /> */}\n              </div>\n\n              <div className=\"share\">\n                <p>\n                  <span role=\"img\" aria-label=\"sharing hands\">\n                    🙌\n                  </span>{' '}\n                  Share this post\n                </p>\n                <ul>\n                  <li>\n                    <a\n                      aria-label=\"tweet\"\n                      href={tweetLink}\n                      className=\"post-tweet-link\"\n                    >\n                      <FiTwitter />\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      aria-label=\"post on hacker news\"\n                      href={hnLink}\n                      className=\"post-hn-link\"\n                    >\n                      <DiHackernews />\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      aria-label=\"post on reddit\"\n                      href={redditLink}\n                      className=\"post-reddit-link\"\n                    >\n                      <IoLogoReddit />\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      aria-label=\"post on facebook\"\n                      href={facebookLink}\n                      className=\"post-facebook-link\"\n                    >\n                      <FiFacebook />\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <hr style={{ margin: '1rem 25% ' }} />\n              <Toc />\n              <div\n                className=\"post-body\"\n                ref={(el) => {\n                  this.markdownContainer = el\n                }}\n                dangerouslySetInnerHTML={{ __html: content }}\n              />\n              <hr style={{ margin: '3rem 25% 0' }} />\n              <br />\n              <p\n                className=\"post-edit\"\n                style={{\n                  display: 'flex',\n                  justify: 'center',\n                  textAlign: 'center',\n                  margin: '3rem auto',\n                }}\n              >\n                <span role=\"img\" aria-label=\"\">\n                  👀\n                </span>{' '}\n                see an issue, edit this post on{' '}\n                <a\n                  href={`https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages${slug.slice(\n                    0,\n                    -1\n                  )}.md`}\n                  alt=\"edit post url\"\n                  title=\"edit this post\"\n                >\n                  {' '}\n                  <FiGithub /> GitHub\n                </a>\n              </p>\n              <p\n                className=\"post-tip-message\"\n                style={{\n                  display: 'flex',\n                  justify: 'center',\n                  margin: 'auto',\n                  textAlign: 'center',\n                  marginBottom: '.5rem',\n                }}\n              >\n                If you found value in this post <br />\n                and want to send a tip.\n              </p>\n              <p\n                class-name=\"post-tip-link\"\n                style={{\n                  display: 'flex',\n                  justify: 'center',\n                  marginBottom: '4rem',\n                }}\n              >\n                <a\n                  href=\"https://www.buymeacoffee.com/bBdtMQO\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ display: 'inline-block', margin: 'auto' }}\n                >\n                  <img\n                    src=\"https://cdn.buymeacoffee.com/buttons/lato-violet.png\"\n                    alt=\"Buy Me A Coffee\"\n                    style={{ height: '51px', width: '217px', margin: 'auto' }}\n                  />\n                </a>\n              </p>\n\n              <div className=\"share\">\n                <p>\n                  <span role=\"img\" aria-label=\"sharing hands\">\n                    🙌\n                  </span>{' '}\n                  Share this post\n                </p>\n                <ul>\n                  <li>\n                    <a\n                      aria-label=\"tweet\"\n                      href={tweetLink}\n                      className=\"post-tweet-link\"\n                    >\n                      <FiTwitter />\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      aria-label=\"post on hacker news\"\n                      href={hnLink}\n                      className=\"post-hn-link\"\n                    >\n                      <DiHackernews />\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      aria-label=\"post on reddit\"\n                      href={redditLink}\n                      className=\"post-reddit-link\"\n                    >\n                      <IoLogoReddit />\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      aria-label=\"post on facebook\"\n                      href={facebookLink}\n                      className=\"post-facebook-link\"\n                    >\n                      <FiFacebook />\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </BlogPostStyles>\n            <div className=\"right\">\n              <Toc />\n            </div>\n          </BlogFlex>\n          {/* <p className='post-cta-all-posts'> */}\n          {/*   Check out my other */}\n          {/* <Link to='/blog' style={{ margin: '.2rem' }} >blogs</Link> */}\n          {/* </p> */}\n          <hr />\n          <PostCards data={similarPosts} />\n          <hr />\n\n          <WebMention url={url} />\n        </BlogPostWrapper>\n      </>\n    )\n  }\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  slug: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  // status: PropTypes.string,\n  title: PropTypes.string,\n  // helmet: PropTypes.instanceOf(Helmet),\n}\n\nconst BlogPost = ({ data, pageContext }) => {\n  const { markdownRemark: post } = data\n\n  let covers = post.frontmatter.cover\n  const cover = covers?.full?.fixed?.src\n  const fluidCover = covers?.full.fluid\n  const sm_img = covers?.sm_img?.fixed?.src\n  // console.log({fluidCover})\n\n  return (\n    <Layout\n      description={post.frontmatter.description}\n      status={post.frontmatter.status}\n      title={post.frontmatter.title}\n      keywords={post.frontmatter.tags}\n      time={post.frontmatter.date}\n      url={`https://waylonwalker.com/${post.fields.slug.replace(/^\\/+/, '')}`}\n    >\n      <BlogPostTemplate\n        content={post.html}\n        url={`https://waylonwalker.com/${post.fields.slug.replace(/^\\/+/, '')}`}\n        slug={post.fields.slug}\n        description={post.frontmatter.description}\n        status={post.frontmatter.status}\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n        cover={cover}\n        sm_img={sm_img}\n        fluidCover={fluidCover}\n        date={post.frontmatter.date}\n        similarPosts={pageContext.similarPosts}\n        allPosts={pageContext.allPosts}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport { BlogPost, BlogPostTemplate }\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query NoteByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date\n        title\n        description\n        status\n        cover {\n          absolutePath\n          xsm_img: childImageSharp {\n            fixed(width: 50) {\n              src\n              srcWebp\n            }\n          }\n          sm_img: childImageSharp {\n            fixed(width: 300) {\n              src\n              srcWebp\n            }\n          }\n          med_img: childImageSharp {\n            fixed(width: 500) {\n              src\n              srcWebp\n            }\n          }\n          full: childImageSharp {\n            fixed(width: 1000, height: 420) {\n              ...GatsbyImageSharpFixed\n            }\n            fluid(maxWidth: 1000, maxHeight: 420) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}