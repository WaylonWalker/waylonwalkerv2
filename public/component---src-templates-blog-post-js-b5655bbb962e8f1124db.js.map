{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostWrapper","styled","div","BlogPostStyles","DevToComments","props","j","state","comments","undefined","componentDidMount","fetch","this","devto_id","then","response","json","setState","console","log","body_html","render","className","dangerouslySetInnerHTML","__html","React","Component","BlogPostTemplate","content","description","title","cover","fluidCover","date","twitter_cover","devto_url","twitterImage","src","meta","name","style","fluid","textAlign","zIndex","href","minHeight","margin","padding","ref","el","markdownContainer","to","BlogPost","post","data","markdownRemark","frontmatter","childImageSharp","fixed","keywords","tags","time","url","path","html","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-b5655bbb962e8f1124db.js","sourcesContent":["import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n// import BlogPostCard from '../components/blogPostCard'\r\n// import { kebabCase } from 'lodash'\r\n// import Helmet from 'react-helmet'\r\nimport { graphql, Link } from 'gatsby'\r\nimport Layout from '../components/layout'\r\n// import Content, { HTMLContent } from '../components/Content'\r\nimport Img from 'gatsby-image'\r\n// import Blazy from 'blazy'\r\n\r\n\r\nconst BlogPostWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`\r\n\r\nconst BlogPostStyles = styled.div`\r\nbackground: rgba(51, 0, 38, .13);\r\noverflow: hidden;\r\n/* background: #330026; */\r\ndisplay: block;\r\nmargin: .2rem;\r\nmax-width: 1000px;\r\nwidth: 95%;\r\nposition: relative;\r\nmargin: 2rem 0;\r\npadding: 1rem;\r\nborder-radius: 2px;\r\nbox-shadow: .2rem .2rem 1rem rgba(0, 0, 0, .2);\r\ndisplay: flex;\r\nflex-direction: column;\r\ncolor: whitesmoke;\r\n\r\na {\r\n  color: #6F6BAE;\r\n  text-decoration-color: #330026;\r\n  text-decoration-color: goldenrod; /* Wyatt chose goldenrod */\r\n}\r\np>img {\r\n  /* opacity: .8; */\r\n  box-shadow: .2rem .2rem 1rem rgba(51, 0, 38, .4);\r\n  max-width: 1000px;\r\n  width: 95vw;\r\n  align-self: center;\r\n  justify-self: center;\r\n  align-items: center;\r\n  justify-items: center;\r\n  margin: auto;\r\n}\r\n\r\np:has(>img) {\r\n  margin: 8rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\np {\r\n  // display: flex;\r\n  /* margin: auto; */\r\n  font-family: 'Amiko';\r\n}\r\n\r\n\r\nblockquote {\r\n  color: #777;\r\n  border-left: 2px solid goldenrod;\r\n  font-size: 1rem;\r\n  padding: 1rem 0 1rem .5rem;\r\n  margin: 1.5rem 0;\r\n  \r\n}\r\n\r\nhr {\r\n  border-top: 1px solid goldenrod;\r\n  background: none;\r\n  margin: 1rem 2rem\r\n\r\n}\r\n\r\nh1 {\r\n  margin-top: 5rem;\r\n  font-family: sans-serif;\r\n  color: #6A65CA;\r\n}\r\n\r\n`\r\n\r\nclass DevToComments extends React.Component {\r\n  j\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { ...props, comments: undefined }\r\n  }\r\n  componentDidMount() {\r\n    fetch(`https://dev.to/api/comments?a_id=${this.state.devto_id}`)\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((comments) => {\r\n        this.setState({ comments: comments })\r\n        console.log(comments[0].body_html)\r\n      })\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <p>\r\n          devto article id is {this.state.devto_id}\r\n        </p>\r\n        {this.state.comments === undefined\r\n          ? ''\r\n          : <div className=\"comment\" dangerouslySetInnerHTML={{ __html: this.state.comments[0].body_html }} />\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      content,\r\n      // contentComponent,\r\n      description,\r\n      // tags,\r\n      title,\r\n      cover,\r\n      fluidCover,\r\n      date,\r\n      // helmet,\r\n      twitter_cover,\r\n      devto_url,\r\n      devto_id,\r\n    } = this.props\r\n    // const PostContent = contentComponent || Content\r\n\r\n    const twitterImage = twitter_cover !== undefined ? twitter_cover.src : cover.src\r\n\r\n    return (\r\n      <>\r\n        <Helmet\r\n          meta={[\r\n            { name: 'og:title', content: title },\r\n            { name: 'og:article:published_time', content: date },\r\n            { name: 'og:article:modified_time', content: date },\r\n            { name: 'twitter:title', content: title },\r\n            { name: 'description', content: description },\r\n            { name: 'twitter:image', content: 'https://www.waylonwalker.com' + twitterImage },\r\n            { name: 'twitter:description', content: description },\r\n            { name: 'og:image', content: 'https://www.waylonwalker.com' + cover.src },\r\n          ]}\r\n\r\n        />\r\n        <BlogPostWrapper>\r\n          <BlogPostStyles>\r\n            <Img\r\n              style={{\r\n                // position: 'absolute',\r\n                // top: '0px',\r\n                // left: '-0rem',\r\n                // zIndex: '-1',\r\n                // opacity: '.6',\r\n              }}\r\n              fluid={fluidCover}\r\n            />\r\n            <h1\r\n              style={{ textAlign: 'right', zIndex: 2 }}\r\n              className=\"blog title\">\r\n              {title}\r\n            </h1>\r\n            <p\r\n              style={{ textAlign: 'right', zIndex: 2 }}>\r\n              {date}\r\n            </p>\r\n            <p\r\n              style={{ textAlign: 'right', zIndex: 2 }}\r\n            >\r\n              This article was also cross posted to\r\n            {\r\n                devto_url === undefined\r\n                  ?\r\n                  console.log('devto_url', devto_url, 'devto_id', devto_id)\r\n                  : <a href={devto_url} > dev.to </a>\r\n              }\r\n              feel free to drop in to give it a â™¥ and leave comment.\r\n\r\n            </p>\r\n            <p style={{ minHeight: '30px', margin: '0', padding: '0' }}>{description}</p>\r\n            <div ref={(el) => { this.markdownContainer = el }}\r\n              dangerouslySetInnerHTML={{ __html: content }} />\r\n\r\n          </BlogPostStyles>\r\n          <DevToComments devto_id={devto_id} />\r\n          <p>devtoid = {devto_id}</p>\r\n          <p>\r\n            Check out my other\r\n          <Link to='/blog' style={{ margin: '.2rem' }} >blogs</Link>\r\n          </p>\r\n        </BlogPostWrapper>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nBlogPostTemplate.propTypes = {\r\n  content: PropTypes.node.isRequired,\r\n  contentComponent: PropTypes.func,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n  devto_url: PropTypes.string,\r\n  devto_id: PropTypes.string\r\n  // helmet: PropTypes.instanceOf(Helmet),\r\n}\r\n\r\nconst BlogPost = ({ data }) => {\r\n  const { markdownRemark: post } = data\r\n  const twitter_cover = post.frontmatter.twitter_cover !== null ? post.frontmatter.twitter_cover.childImageSharp.fixed : post.frontmatter.cover !== null ? post.frontmatter.cover.childImageSharp.fixed : ''\r\n\r\n  return (\r\n    <Layout description={post.frontmatter.description} title={post.frontmatter.title} keywords={post.frontmatter.tags} time={post.frontmatter.date} url={`https://cuttinscrap.com${post.frontmatter.path}`}>\r\n      <BlogPostTemplate\r\n        content={post.html}\r\n        // contentComponent={HTMLContent}\r\n        // description={post.frontmatter.description}\r\n        // helmet={<Helmet title={`${post.frontmatter.title} | Blog`} />}\r\n        tags={post.frontmatter.tags}\r\n        title={post.frontmatter.title}\r\n        cover={\r\n          post.frontmatter.cover !== null\r\n            ? post.frontmatter.cover.childImageSharp.fixed\r\n            : ''\r\n        }\r\n        fluidCover={\r\n          post.frontmatter.cover !== null\r\n            ? post.frontmatter.cover.childImageSharp.fluid\r\n            : ''\r\n        }\r\n        twitter_cover={twitter_cover}\r\n        date={post.frontmatter.date}\r\n        devto_url={post.frontmatter.devto_url}\r\n        devto_id={post.frontmatter.devto_id}\r\n\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nBlogPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport {\r\n  BlogPost,\r\n  BlogPostTemplate\r\n}\r\nexport default BlogPost\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query NoteByID($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        date\r\n        devto_url\r\n        devto_id\r\n        title\r\n        description\r\n        # tags\r\n        path\r\n        twitter_cover {\r\n          absolutePath\r\n          childImageSharp {\r\n            fixed(width: 800, height: 418) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n         }\r\n        cover {\r\n          absolutePath\r\n          childImageSharp {\r\n            fixed(width: 1000, height: 420) {\r\n              ...GatsbyImageSharpFixed\r\n            },\r\n            fluid(maxWidth: 1000, maxHeight: 420) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n         }\r\n \r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}