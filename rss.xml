<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Waylon Walker's Blog Feed]]></title><description><![CDATA[Practicing my craft in public, sharing my experience along the way.  Python, Kedro, JamStack, Gatsby, Data, Automation]]></description><link>https://waylonwalker.com</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 23 Jan 2021 15:40:04 GMT</lastBuildDate><item><title><![CDATA[Stand With Your Team]]></title><description><![CDATA[People who are quick to toss team members under a bus are not well trusted or
highly thought of and it will lead to some toxic team dynamics…]]></description><link>https://waylonwalker.com/stand-with-your-team/</link><guid isPermaLink="false">https://waylonwalker.com/stand-with-your-team/</guid><pubDate>Fri, 22 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;People who are quick to toss team members under a bus are not well trusted or
highly thought of and it will lead to some toxic team dynamics.&lt;/p&gt;
&lt;h2&gt;Building Steam&lt;/h2&gt;
&lt;p&gt;While collaborating on any project there are going to be decisions made that
aren&apos;t necessarily your favorite, during a summer internship my mentor made
some decisions for it that I was not on board with, but I accepted his wisdom
and moved forward with little push back.&lt;/p&gt;
&lt;h2&gt;Full Spead Ahead&lt;/h2&gt;
&lt;p&gt;During a review leadership showed interest in the option that I wanted to go
towards.  I was quick to jump up and say I  told you so right then and there
and pitch reasons why my idea was so much better.&lt;/p&gt;
&lt;h2&gt;The Aftermath&lt;/h2&gt;
&lt;p&gt;I walked out so &lt;strong&gt;proud&lt;/strong&gt; that leadership wanted my recognized the my idea, but I will
never forget the look on my teammates face and what he told me after the
meeting.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Wow quick to throw me under the bus in front of everyone&quot;.   I&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;~ my teammate&lt;/p&gt;
&lt;h2&gt;Realizing what Happened&lt;/h2&gt;
&lt;p&gt;It was at this moment that I threw my mentor, a good &lt;strong&gt;friend&lt;/strong&gt; in front of a
bus that was at full speed.  I will never forget this moment and the importance
of being a good trustworthy team player.&lt;/p&gt;
&lt;h2&gt;Speak your Mind, be heard, shut up&lt;/h2&gt;
&lt;p&gt;This day I learned that there is a time to speak your mind.  While that bus is
sitting idle it would have hurt no one.&lt;/p&gt;
&lt;p&gt;There were times to hear out ideas, and there were times that we need to accept
the decisions the team made.  The team that you were a part of and had a chance
to steer.&lt;/p&gt;
&lt;p&gt;There are times where its appropriate to sit down and shut up.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/stand-with-your-team.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/stand-with-your-team/.png</cover_image></item><item><title><![CDATA[Blogging For Me]]></title><description><![CDATA[I create this blog with one person in mind, me. There are others like me This is not completely selfish, as there are likely many others out…]]></description><link>https://waylonwalker.com/blogging-for-me/</link><guid isPermaLink="false">https://waylonwalker.com/blogging-for-me/</guid><pubDate>Thu, 21 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I create this blog with one person in mind, me.&lt;/p&gt;
&lt;h2&gt;There are others like me&lt;/h2&gt;
&lt;p&gt;This is not completely selfish, as there are likely many others out there that
think similarly to me.  Everyone comes from different backgrounds and varying
levels of experience.  In no way do you need to be an expert to create content
others will benefit from.&lt;/p&gt;
&lt;h2&gt;Accurate&lt;/h2&gt;
&lt;p&gt;I am as accurate as possible.  I don&apos;t know everything, and If I waited for
that to happen I would never post, or write at such a high level no one else
(including me) would ever want to read.&lt;/p&gt;
&lt;p&gt;Generally I know that I am directionally accurate for most of the article.  In
fact there is often a part of the article that I don&apos;t feel the best about.  It
may have been some code that could have been better.  I try to point these
things out.  Often when I am honest and point out where I know there is
improvement to be had I get the most welcoming comments, &quot;that was just fine
how you did that&quot;, or &quot;I tried that myself and saw a better abstraction.&lt;/p&gt;
&lt;h2&gt;Create the articles I want to read&lt;/h2&gt;
&lt;p&gt;Generally the articles I want to read are directly relatable to things I am
currently working on and vary over time.  Over the last year its been leaning a
bit more towards automation with
&lt;a href=&quot;https://waylonwalker.com/archive/linux&quot;&gt;bash&lt;/a&gt;,
&lt;a href=&quot;https://waylonwalker.com/archive/python&quot;&gt;python&lt;/a&gt;,
&lt;a href=&quot;https://waylonwalker.com/archive/kedro&quot;&gt;kedro&lt;/a&gt; tools.&lt;/p&gt;
&lt;h2&gt;On Brand&lt;/h2&gt;
&lt;p&gt;I try to stay on brand to who I am.  I remember writing my first articles.  I
was trying to be whitty, and include funny memes.  Thats not me.  I am not a
commedian, and generally memes go right over my head.  I can remember back in
High School, I was the one that didn&apos;t understand a lot of pop culture and was
kinda treated as if I was always living under a rock.  I knew it was true and I
owned it, so no one ever got too mean about it.&lt;/p&gt;
&lt;h1&gt;Honest, never fake&lt;/h1&gt;
&lt;p&gt;I will not try to pretend that I know everything.  You may read my blog on
occasion and think I know a lot, also possible that you think &quot;wow what an
idiot&quot;.  I welcome you to share your thoughts and techniques in a positive way.
I often cringe at some of my old posts and think about how differently I would
approach something not that long after posting.  I honest, never fake know what
I need to know and don&apos;t pretend to know anything outside of my wheelhouse.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/blogging-for-me.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>ging-for-me/.png</cover_image></item><item><title><![CDATA[Markdown Cli]]></title><description><![CDATA[This is a post that may be a work in progress for awhile, Its a collections of
thoughts on managing my blog, but could be translated into…]]></description><link>https://waylonwalker.com/markdown-cli/</link><guid isPermaLink="false">https://waylonwalker.com/markdown-cli/</guid><pubDate>Wed, 20 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This is a post that may be a work in progress for awhile, Its a collections of
thoughts on managing my blog, but could be translated into anythiung that is
just a collection of markdown.&lt;/p&gt;
&lt;h2&gt;Listing things&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;posts&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;li&gt;draft posts&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;frontmatter&lt;/li&gt;
&lt;li&gt;filepath&lt;/li&gt;
&lt;li&gt;content&lt;/li&gt;
&lt;li&gt;template&lt;/li&gt;
&lt;li&gt;html&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;render content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Markdown.Markdown&lt;/li&gt;
&lt;li&gt;support extentsions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;frontmatter cleaning.&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;provide ways to hook in or clean up the frontmatter&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Markata.Markata methods&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;load&lt;/li&gt;
&lt;li&gt;render&lt;/li&gt;
&lt;li&gt;save&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Markata.Post methods&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;load&lt;/li&gt;
&lt;li&gt;render&lt;/li&gt;
&lt;li&gt;save&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Markata plugins&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;before_load&lt;/li&gt;
&lt;li&gt;before&lt;em&gt;post&lt;/em&gt;load&lt;/li&gt;
&lt;li&gt;after_load&lt;/li&gt;
&lt;li&gt;after&lt;em&gt;post&lt;/em&gt;load&lt;/li&gt;
&lt;li&gt;before_save&lt;/li&gt;
&lt;li&gt;before&lt;em&gt;post&lt;/em&gt;save&lt;/li&gt;
&lt;li&gt;after_save&lt;/li&gt;
&lt;li&gt;after&lt;em&gt;post&lt;/em&gt;save&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Markata plugins&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cleanse_frontmatter&lt;/li&gt;
&lt;li&gt;html_feed&lt;/li&gt;
&lt;li&gt;json_feed&lt;/li&gt;
&lt;li&gt;rss_feed&lt;/li&gt;
&lt;li&gt;save_posts&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CLI&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ markata list tags

python
data&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ markata

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;post title&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;this is a post&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;filepath&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;path_to.md&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;the content of the post&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;html&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&amp;lt;p&gt;the content of the post&amp;lt;/p&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
    &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/markdown-cli.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/markdown-cli/.png</cover_image></item><item><title><![CDATA[Minimal Kedro Pipeline]]></title><description><![CDATA[How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It's only a total of 3…]]></description><link>https://waylonwalker.com/minimal-kedro-pipeline/</link><guid isPermaLink="false">https://waylonwalker.com/minimal-kedro-pipeline/</guid><pubDate>Wed, 20 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It&apos;s only a total of 35 lines of python, 8 in &lt;code class=&quot;language-text&quot;&gt;setup.py&lt;/code&gt; and 27 in &lt;code class=&quot;language-text&quot;&gt;mini_kedro_pipeline.py&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Minimal Kedro Pipeline&lt;/h1&gt;
&lt;p&gt;I have everything for this post hosted in this &lt;a href=&quot;https://github.com/WaylonWalker/mini-kedro-pipeline&quot;&gt;gihub repo&lt;/a&gt;, you can fork it, clone it, or just follow along.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; git+https://github.com/WaylonWalker/mini-kedro-pipeline&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Caveats&lt;/h2&gt;
&lt;p&gt;This repo represents the minimal amount of structure to build a kedro pipeline that can be shared across projects.  Its installable, and drops right into your &lt;code class=&quot;language-text&quot;&gt;hooks.py&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;run.py&lt;/code&gt; modules.  It is not a runnable pipeline.  At this point
I think the config loader requires to have a logging config file.&lt;/p&gt;
&lt;p&gt;This is a sharable pipeline that can be used across many different projects.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# hooks.py&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; mini_kedro_project &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; mkp

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectHooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;register_pipelines&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Register the project&apos;s pipeline.

        Returns:
            A mapping from a pipeline name to a ``Pipeline`` object.

        &quot;&quot;&quot;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;__default__&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mkp&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; mkp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Implemantation&lt;/h2&gt;
&lt;p&gt;This builds on another post that I made about creating the minimal python package.  I am not sure if it should be called a package, it&apos;s a module, but what do you call it after you build it and host it on pypi?&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/minimal-python-package/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/de47aa7ab3bcdcd5f0dade8cdccdddc2/630fb/minimal-python-package-xmas2020.png&quot; alt=&quot;article cover for Minimal Python Package&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Minimal Python Package&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    What does it take to create an installable python package that can be hosted on pypi? What is the minimal python package
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;h2&gt;Directory structure&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
├── .gitignore
├── README.md
├── setup.py
└── my_pipeline.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;setup.py&lt;/h2&gt;
&lt;p&gt;This is a very minimal &lt;code class=&quot;language-text&quot;&gt;setup.py&lt;/code&gt;.  This is enough to get you started with a package that you can share across your team.  In practice, there is a bit more that you might want to include as your project grows.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; setuptools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; setup

setup&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MiniKedroPipeline&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    version&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    py_modules&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;mini_kedro_pipeline&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    install_requires&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;kedro&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;mini&lt;em&gt;kedro&lt;/em&gt;pipeline.py&lt;/h2&gt;
&lt;p&gt;The mini kedro pipeline looks like any set of nodes in your project.  Many projects will separate nodes and functions, I prefer to keep them close together.  The default recommendation is also to have a &lt;code class=&quot;language-text&quot;&gt;create_pipelines&lt;/code&gt; function that returns the pipeline.&lt;/p&gt;
&lt;p&gt;This pattern creates a singleton, if you were to reference the same pipeline in multiple places within the same running interpreter and modify the one you would run into issues.  I don&apos;t foresee myself running into this issue, but maybe as more features become available I will change my mind.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
An example of a minimal kedro pipeline project
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; node

__version__ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;
__author__ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Waylon S. Walker&quot;&lt;/span&gt;

nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;creates a dictionary of sample data&quot;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;beans&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;


nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;create_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;raw_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;create_raw_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mult_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;multiplies each record of each item by 100&quot;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;


nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mult_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;raw_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mult_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;create_mult_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

pipeline &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nodes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Share your pipelines&lt;/h2&gt;
&lt;p&gt;Go forth and share your pipelines across projects.  Let me know, do you share pipelines or catalogs across projects?&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/minimal-kedro-pipeline.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/minimal-kedro-pipeline/.png</cover_image></item><item><title><![CDATA[My Content Strategy For 2021]]></title><description><![CDATA[I am making another push in 2021 to get my content out in the world and meeting users where they are.  See how I plan to execute. Platforms…]]></description><link>https://waylonwalker.com/2021-content-strategy/</link><guid isPermaLink="false">https://waylonwalker.com/2021-content-strategy/</guid><pubDate>Tue, 19 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I am making another push in 2021 to get my content out in the world and meeting users where they are.  See how I plan to execute.&lt;/p&gt;
&lt;h2&gt;Platforms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;waylonwalker.com&lt;/li&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;DEV&lt;/li&gt;
&lt;li&gt;hashnode&lt;/li&gt;
&lt;li&gt;Medium&lt;/li&gt;
&lt;li&gt;LinkedIn&lt;/li&gt;
&lt;li&gt;Anchor&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Markdown&lt;/h2&gt;
&lt;p&gt;My content is written in markdown, all markdown.  I find that markdown does a really great job at getting out of the way and letting ideas flow onto the page.  I am never fussing with fonts and formatting while physically writing posts.   Not that I don&apos;t spend way more time than I need to tweak these things on my own personal site where everything gets posted.&lt;/p&gt;
&lt;h2&gt;Articles&lt;/h2&gt;
&lt;p&gt;Much of what I create is inside of short articles that get posted to my personal site &lt;a href=&quot;https://waylonwalker.com&quot;&gt;waylonwalker.com&lt;/a&gt;.  These will get cross-posted to &lt;a href=&quot;https://dev.to/waylonwalker&quot;&gt;DEV&lt;/a&gt;,
&lt;a href=&quot;https://h.waylonwalker.com/&quot;&gt;hashnode&lt;/a&gt;, &lt;a href=&quot;https://waylonwalker.medium.com/&quot;&gt;Medium&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have made cross-posting a bit easier for myself by posting the markdown for each article next to the post on my personal site.  Add .md to any post and there is the source.&lt;/p&gt;
&lt;p&gt;Should I be giving my articles to Medium??  Personally, I am not a fan of the bait and switch that they did with adding a paywall years after launch.  From what I can tell authors are not getting paid much from it, users are discouraged when they are blocked, and they really only promote articles that are behind the paywall.&lt;/p&gt;
&lt;p&gt;In the end, I am a fan of meeting users where they are, if they like Medium I don&apos;t want them to miss my content.&lt;/p&gt;
&lt;h2&gt;More Catalytic&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;soft skills&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My articles are very code-heavy, I do want to transition over to some more evergreen type of posts that are long-lasting.  I want to create some more content around how to be a good developer, data scientist, engineer, whatever you call yourself.&lt;/p&gt;
&lt;p&gt;Personally, this is some of the content I enjoy consuming, but for some reason is not something I tend to create.&lt;/p&gt;
&lt;h2&gt;Slides&lt;/h2&gt;
&lt;p&gt;I am really enjoying the slide output of my articles on
&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/detail/recent-activity/shares/&quot;&gt;LinkedIn&lt;/a&gt;. It makes for something that is unique and easy to digest.  I have a pandoc script that takes in the markdown from my posts and kicks out a set of slides, so it&apos;s quick and easy to do.  Not every post works well this way by many have so
far.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/linkedin-activity-slides.gif&quot; alt=&quot;my linked in slide
activity&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Threads&lt;/h2&gt;
&lt;p&gt;With less success (shares, views, likes) I have been converting articles over to Twitter threads as they are released, again not every article works well this way, but many do.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What does it take to create an installable python package that can be hosted on pypi?&lt;br&gt;&lt;br&gt;.&lt;br&gt;├── setup .py&lt;br&gt;└── my_module.py&lt;br&gt;&lt;br&gt;🧵▶ &lt;a href=&quot;https://t.co/G7V84Uk4IO&quot;&gt;pic.twitter.com/G7V84Uk4IO&lt;/a&gt;&lt;/p&gt;&amp;mdash; Waylon Walker 🐍 (@_WaylonWalker) &lt;a href=&quot;https://twitter.com/_WaylonWalker/status/1349716127887347717?ref_src=twsrc%5Etfw&quot;&gt;January 14, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;h2&gt;Simplicity&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;just write markdown&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the end, everything needs to be simple and build off of the original markdown post.  Automation should be in a place where it makes sense.  I am no longer manually creating cover art or article descriptions, those are scripted out of the article itself.&lt;/p&gt;
&lt;p&gt;I have come cli tooling in place to simplify my process. Expect more of that to come.&lt;/p&gt;
&lt;h2&gt;Audio&lt;/h2&gt;
&lt;p&gt;I have set up a podcast where I read out my posts, but the time that I have available to read them is very constraining to the process.  It may be something that I figure out how to work out or something that I drop.  It&apos;s something that I think would be really nice, but still trying to figure out how to do it.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/audio-for-blog/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/a8606be154d71412741094d011b75098/630fb/audio-for-blog-xmas2020.png&quot; alt=&quot;article cover for Adding Audio to my blog posts&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Adding Audio to my blog posts&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    This is episode 1 of the Waylon Walker Audio experience, posts from waylonwalker.com in audio form. So I have had this
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;p&gt;I personally really like this as I often find a cool blog article that I want to read, but it&apos;s time to cook dinner or drive somewhere.  Articles with audio make it super convenient to consume while doing a task requiring eye contact.&lt;/p&gt;
&lt;h2&gt;TLDR&lt;/h2&gt;
&lt;p&gt;Meet Users Where They are.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/2021-content-strategy.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/2021-content-strategy/.png</cover_image></item><item><title><![CDATA[Quickly Edit Posts]]></title><description><![CDATA[Recently I automated starting new posts with a python script.  Today I want to
work on the next part that is editing those posts quickly…]]></description><link>https://waylonwalker.com/quickly-edit-posts/</link><guid isPermaLink="false">https://waylonwalker.com/quickly-edit-posts/</guid><pubDate>Mon, 18 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Recently I automated starting new posts with a python script.  Today I want to
work on the next part that is editing those posts quickly.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/automating-my-post-starter/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/d4770ec76e0f29cf7536bccfee99340b/630fb/automating-my-post-starter-xmas2020.png&quot; alt=&quot;article cover for Automating my Post Starter&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Automating my Post Starter&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    One thing we all dread is mundane work of getting started, and all the hoops it takes to get going. This year I want to
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;Check out this post about setting up my posts with python 🐍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Enter Bash&lt;/h2&gt;
&lt;p&gt;For the process of editing a post I just need to open the file in vim quickly.
I dont need much in the way of parsing and setting up the frontmatter.  I think
this is a simple job for a &lt;strong&gt;bash&lt;/strong&gt; script and fzf.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;change to the root of my blog&lt;/li&gt;
&lt;li&gt;fuzzy find the post&lt;/li&gt;
&lt;li&gt;open it with vim&lt;/li&gt;
&lt;li&gt;change back to the directory I was in&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;bash function&lt;/h2&gt;
&lt;p&gt;For this I am going to go with a bash function.  This is partly due to being
able to track where I was and get back.  Also the line with nvim will run fzf
everytime you source your &lt;code class=&quot;language-text&quot;&gt;~/.alias&lt;/code&gt; file which is not what we want.&lt;/p&gt;
&lt;p&gt;Lets setup the &lt;strong&gt;boilerplate&lt;/strong&gt;.  Its going to create a function called ep
&lt;code class=&quot;language-text&quot;&gt;&amp;quot;edit post&amp;quot;&lt;/code&gt;, track our current directory, create a sub function &lt;code class=&quot;language-text&quot;&gt;_ep&lt;/code&gt;.  Then
call that function and cd back to where we were no matter if &lt;code class=&quot;language-text&quot;&gt;_ep&lt;/code&gt; fails or
succeeds.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;boilerplate&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;ep&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;_dir&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token function-name function&quot;&gt;_ep&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# open file here&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    _ep &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$_dir&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$_dir&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/reusable-bash/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/96bd1b466e9e00834d0d7eda8af04b97/630fb/reusable-bash-xmas2020.png&quot; alt=&quot;article cover for Creating Reusable Bash Scripts&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Creating Reusable Bash Scripts&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Bash is a language that is quite useful for automation no matter what language you write in. Bash can do so many powerful system-level tasks. Even if you are on windows these days you are likely to come across bash inside a cloud VM, Continuous Integration, or even inside of docker.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;check out this post for more information about writing reusable bash scripts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;FZF&lt;/h2&gt;
&lt;p&gt;Let&apos;s focus in on that &lt;code class=&quot;language-text&quot;&gt;_ep&lt;/code&gt; function here that is going to do the bulk of the
work to edit the post.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;cd to where I want to edit from&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ~/git/waylonwalkerv2/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next I need to find all markdown pages within my posts directory.  There is
probably a better way to filter with the &lt;code class=&quot;language-text&quot;&gt;find&lt;/code&gt; command directly, but I am not
worried about perf here and I knew how to do it without google.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;find all markdown&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; ~/git/waylonwalkerv2/src/pages/ &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; .md$&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we can list all potential posts, sending the selected post back to
neovim is as easy as piping those files into fzf inside of a command
substitution that is called with neovim.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;putting together the edit command&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$EDITOR&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; ~/git/waylonwalkerv2/src/pages/ &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; .md$ &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Final Script&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;final ep function&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;ep&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;_dir&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token function-name function&quot;&gt;_ep&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ~/git/waylonwalkerv2/
        &lt;span class=&quot;token variable&quot;&gt;$EDITOR&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; ~/git/waylonwalkerv2/src/pages/ &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; .md$ &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    _ep &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$_dir&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$_dir&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/quickly-edit-posts.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/quickly-edit-posts/.png</cover_image></item><item><title><![CDATA[Gitui is a blazing fast terminal git interface]]></title><description><![CDATA[Gitui is a terminal-based git user interface (TUI) that will change the way
that you work with git. I have been a long-time user of the git…]]></description><link>https://waylonwalker.com/gitui/</link><guid isPermaLink="false">https://waylonwalker.com/gitui/</guid><pubDate>Sun, 17 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Gitui is a terminal-based git user interface (TUI) that will change the way
that you work with git. I have been a long-time user of the git cli, and it&apos;s
been hard to beat, mostly because there is nothing that keeps my fingers on the
keyboard quite like it, except &lt;code class=&quot;language-text&quot;&gt;gitui&lt;/code&gt; which comes with some great ways to very
quickly walk through a git project.&lt;/p&gt;
&lt;h2&gt;installation&lt;/h2&gt;
&lt;p&gt;Go to their [releases]&lt;a href=&quot;https://github.com/extrawurst/gitui/releases&quot;&gt;https://github.com/extrawurst/gitui/releases&lt;/a&gt;) page,
download the latest build, and pop it on your PATH.  I have the following
stuffed away in some install scripts to get the latest version.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;install latest release&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;GITUI_VERSION&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; --silent https://github.com/extrawurst/gitui/releases/latest &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tr&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;s/^.*tag\///g&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;s/&gt;.*$//g&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;s/^v//&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://github.com/extrawurst/gitui/releases/download/v&lt;span class=&quot;token variable&quot;&gt;${GITUI_VERSION}&lt;/span&gt;/gitui-linux-musl.tar.gz -O- -q &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; -zxf - -C /usr/bin/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;run &lt;code class=&quot;language-text&quot;&gt;gitui&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;It opens blazing fast.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gitui&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Quick Commits&lt;/h2&gt;
&lt;p&gt;Sometimes I edit a number of files and want to commit them one at a time, this
is painful in the git cli and my main use case for &lt;code class=&quot;language-text&quot;&gt;gitui&lt;/code&gt;.  &lt;code class=&quot;language-text&quot;&gt;gitui&lt;/code&gt; shows
unstaged changes at the top, staged changes on the bottom, and a diff on the
right.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/gitui-status.png&quot; alt=&quot;gitui status&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Navigate with hjkl&lt;/h2&gt;
&lt;p&gt;By default, &lt;code class=&quot;language-text&quot;&gt;gitui&lt;/code&gt; uses arrow keys, but simply copying
&lt;a href=&quot;https://github.com/extrawurst/gitui/blob/master/assets/vim_style_key_config.ron&quot;&gt;vim&lt;em&gt;style&lt;/em&gt;key_config.ron&lt;/a&gt;
to your config directory will get you vim-like keybindings.&lt;/p&gt;
&lt;h2&gt;workflow&lt;/h2&gt;
&lt;p&gt;Generally, I pop open &lt;code class=&quot;language-text&quot;&gt;gitui&lt;/code&gt;, use j/k to get to the file I want to commit,
glance at the diff to the right, press enter to stage the file, sc to switch
focus to the saged files and commit, write my commit message hit enter and
done.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;w/s:   to toggle focus between working and staged changes&lt;/li&gt;
&lt;li&gt;j/k:   to scroll each section&lt;/li&gt;
&lt;li&gt;h/l:   switch between left and right side&lt;/li&gt;
&lt;li&gt;enter: toggle file from working or staging&lt;/li&gt;
&lt;li&gt;c:     start a commit message&lt;/li&gt;
&lt;li&gt;p:     push&lt;/li&gt;
&lt;li&gt;&lt;c-c&gt;: quit&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Panes&lt;/h2&gt;
&lt;p&gt;I am in the &lt;code class=&quot;language-text&quot;&gt;Status [1]&lt;/code&gt; pane 90% of the time, but it also has three other
panes for &lt;code class=&quot;language-text&quot;&gt;Log [2]&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;Stashing [3]&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;Stashes [4]&lt;/code&gt;.  I do not really use
the stashes panes, but the &lt;code class=&quot;language-text&quot;&gt;Log [2]&lt;/code&gt; pane is quite useful to quickly go through
the last set of commits and see the diff for each of them.&lt;/p&gt;
&lt;h2&gt;What UI do you use for git&lt;/h2&gt;
&lt;p&gt;Let me know what ui you use for git, do you stick to the cli, use a gui, or use
a similar &lt;code class=&quot;language-text&quot;&gt;TUI&lt;/code&gt; interface?&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/gitui.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/gitui/.png</cover_image></item><item><title><![CDATA[Kedro - My Data Is Not A Table]]></title><description><![CDATA[In python data science/engineering most of our data is in the form of some sort
of table, typically a DataFrame from a library like pandas…]]></description><link>https://waylonwalker.com/kedro-pickle/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-pickle/</guid><pubDate>Thu, 14 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;In python data science/engineering most of our data is in the form of some sort
of table, typically a DataFrame from a library like pandas, spark, or dask.&lt;/p&gt;
&lt;h2&gt;DataFrames are the heart of most pipelines&lt;/h2&gt;
&lt;p&gt;These containers for data contain many convenient methods to manipulate table
like data structures.  Sometimes we leverage other data types, namely vanilla
types like lists and dicts, or even numpy data types.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/what-is-kedro/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/27debd76b7282c6a93060e9eb66ba0b8/630fb/what-is-kedro-xmas2020.png&quot; alt=&quot;article cover for What is Kedro&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;What is Kedro&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Kedro is an open source data pipeline framework.  It provides guardrails to set your project up right from the start without needing to know deeply how to setup your own python library for data pipelining.  It includes really great ways to manipulate `catalogs` and `pipelines`.  This article will cover the 10K view of kedro, future articles will dive deper into each one.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;unfamiliar with kedro, check out this post&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Sometimes datasets are not tables&lt;/h2&gt;
&lt;p&gt;There are times when our data doesn&apos;t fit nicely into a DataFrame. Lucky for us
Kedro has pickle support out of the box.  Pickle is a way to store any python
object to disk.  Beware that pickle files coming from an unknown source can run
malicous code and are considered unsafe.  For the most part though when you
read and write your own pickle files they are a good tool to consider.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See more about &lt;a href=&quot;https://docs.python.org/3/library/pickle.html&quot;&gt;pickle&lt;/a&gt; from python.org.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Cataloging Pickle&lt;/h2&gt;
&lt;p&gt;I may have a dictionary that describes some cars.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;truck-012-abc&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;type&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;truck&apos;&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;weight&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9024&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;accesories&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;leather&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;audio-1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the catalog we will simply set the type as &lt;code class=&quot;language-text&quot;&gt;pickle.PickleDataSet&lt;/code&gt; and give
it a filepath.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/cars.pkl
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pickle.PickleDataSet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This filepath does not have to be on the local filesystem it can be on the
cloud thanks to how kedro utilizes fsspec for each of its datasets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Loading the dataset&lt;/h2&gt;
&lt;p&gt;The benefit of cataloging this dataset compared to leaving it as a
&lt;code class=&quot;language-text&quot;&gt;MemoryDataSet&lt;/code&gt; is that you can easily load this data back into memory for
further development or debugging without running any of the pipeline.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-pickle.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-pickle/.png</cover_image></item><item><title><![CDATA[Quickly Change Conda Env With Fzf]]></title><description><![CDATA[Changing conda environments is a bit verbose, I use a function with fzf that
both lists environments and selects the one I want in one go…]]></description><link>https://waylonwalker.com/quickly-change-conda-env-with-fzf/</link><guid isPermaLink="false">https://waylonwalker.com/quickly-change-conda-env-with-fzf/</guid><pubDate>Mon, 11 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Changing conda environments is a bit verbose, I use a function with fzf that
both lists environments and selects the one I want in one go.&lt;/p&gt;
&lt;h2&gt;Conda&lt;/h2&gt;
&lt;p&gt;I have used conda as a virtual environment tool for years now.  I started using
conda for its simplicity to install packages on windows, but now that has
gotten so much better and it&apos;s been years since I have run a &lt;code class=&quot;language-text&quot;&gt;conda install&lt;/code&gt;
command.  I&apos;m sure that I could use a different environment manager, but it
works for me and makes sense.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What environment manager do you use for python?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Conda environments are stored in a central location such as
&lt;code class=&quot;language-text&quot;&gt;~/miniconda3/envs/&lt;/code&gt; and not with the project.  They contain both the python
interpreter and packages for that env.&lt;/p&gt;
&lt;h2&gt;Conda create&lt;/h2&gt;
&lt;p&gt;Conda environments are created with the &lt;code class=&quot;language-text&quot;&gt;conda create&lt;/code&gt; command.  At this point,
you will need to name your env and select the python version.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n my_env &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After running this command you will have a directory &lt;code class=&quot;language-text&quot;&gt;~/miniconda3/envs/my_env&lt;/code&gt;
with a base python install.  It will not be active yet.&lt;/p&gt;
&lt;h2&gt;List environments&lt;/h2&gt;
&lt;p&gt;Before activating an environment I often want to list the environments that I
have installed which are often upwards of 70, so it&apos;s hard to remember them
all.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda info --envs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After running this command you will see something like the following.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# conda environments:&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;
base                     /home/waylon/miniconda3
my_env                   /home/waylon/my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Activating an environment&lt;/h2&gt;
&lt;p&gt;Activating a conda environment will do some magic to your current shells
&lt;code class=&quot;language-text&quot;&gt;$PATH&lt;/code&gt; variable to ensure that the environment that you select is preferred
over the base environment.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda activate my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Ready to work&lt;/h2&gt;
&lt;p&gt;Now you can install packages for your project in an isolated environment safe
from wrecking another project or being wrecked by another project.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -r requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Using fzf&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;a bit less verbose&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/junegunn/fzf&quot;&gt;fzf&lt;/a&gt; is an amazing tool for the terminal that
is a generic fuzzy matcher.  It is super performant and can handle insane
amounts of text and is brilliant at figuring out what you mean with just a few
characters.  We can use it here to list out all of our conda environments and
select the one we want to activate with just a few keystrokes.&lt;/p&gt;
&lt;h3&gt;Selecting the environment.&lt;/h3&gt;
&lt;p&gt;Piping our list of environments directly into &lt;code class=&quot;language-text&quot;&gt;fzf&lt;/code&gt; gives us a fuzzy selection
where we can type a few characters and it will return the row we were looking
for.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This returns us something like this which also includes the path where it is
located.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;my_env                 /home/walkews/miniconda3/envs/my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;getting just the environment name&lt;/h3&gt;
&lt;p&gt;To get just the name without the path I pipe the output into awk.  There are
many ways to do this in bash, this is the way that worked for me at the time I
made this function.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;}&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Time to activate&lt;/h3&gt;
&lt;p&gt;Functions that use &lt;code class=&quot;language-text&quot;&gt;fzf&lt;/code&gt; can be a bit odd, running them in a subshell with the
$() syntax generally makes it super simple to utilize the output.  No matter
how many times I have tried without running it in a subshell it&apos;s always buggy
without it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda activate &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;}&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will now run conda activate on the environment that we select with fzf.&lt;/p&gt;
&lt;h3&gt;Make it a function&lt;/h3&gt;
&lt;p&gt;We don&apos;t want to type that out every time we want to activate an environment. I
keep a function called &lt;code class=&quot;language-text&quot;&gt;a&lt;/code&gt; in my &lt;code class=&quot;language-text&quot;&gt;~/.bashrc&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;~/.zshrc&lt;/code&gt; so that I can
activate an environment with a single character.  Yes, I switch environments
often enough to justify the valuable namespace of a single character.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  conda activate &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;}&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/reusable-bash/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/96bd1b466e9e00834d0d7eda8af04b97/630fb/reusable-bash-xmas2020.png&quot; alt=&quot;article cover for Creating Reusable Bash Scripts&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Creating Reusable Bash Scripts&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Bash is a language that is quite useful for automation no matter what language you write in. Bash can do so many powerful system-level tasks. Even if you are on windows these days you are likely to come across bash inside a cloud VM, Continuous Integration, or even inside of docker.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;for more information on writing reusable bash scripts check out one of my
favorite articles&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am always on the lookout for cool new use cases for &lt;code class=&quot;language-text&quot;&gt;fzf&lt;/code&gt;, if you have one please share it with me.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/quickly-change-conda-env-with-fzf.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/quickly-change-conda-env-with-fzf/.png</cover_image></item><item><title><![CDATA[Minimal Python Package]]></title><description><![CDATA[What does it take to create an installable python package that can be hosted on pypi? What is the minimal python package setup.py my_module…]]></description><link>https://waylonwalker.com/minimal-python-package/</link><guid isPermaLink="false">https://waylonwalker.com/minimal-python-package/</guid><pubDate>Sun, 10 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;What does it take to create an installable python package that can be hosted on pypi?&lt;/p&gt;
&lt;h2&gt;What is the minimal python package&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;setup.py&lt;/li&gt;
&lt;li&gt;my_module.py&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post is somewhat inspired by the bottle framework, which is famously created as a single python module.  Yes, a whole web framework is written in one file.&lt;/p&gt;
&lt;h2&gt;Directory structure&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
├── setup.py
└── my_pipeline.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;setup.py&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; setuptools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; setup

setup&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    version&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    py_modules&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;my_pipeline&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    install_requires&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;kedro&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;name&lt;/h2&gt;
&lt;p&gt;The name of the package can contain any letters, numbers, &quot;_&quot;, or &quot;-&quot;.  Even if it&apos;s for internal/personal consumption only I usually check for discrepancy with pypi so that you don&apos;t run into conflicts. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that pypi treats &quot;-&quot; and &quot;_&quot; as the same thing, beware of name clashes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;version&lt;/h2&gt;
&lt;p&gt;This is the version number of your package.  Most packages follow
&lt;a href=&quot;semver.org&quot;&gt;semver&lt;/a&gt;.  At a high level its three numbers separated by a &lt;code class=&quot;language-text&quot;&gt;.&lt;/code&gt; that follow the format &lt;code class=&quot;language-text&quot;&gt;major.minor.patch&lt;/code&gt;.  It&apos;s a common courtesy to only break APIs on major changes, new releases on minor, and fixes on patch.  This can become much more blurry in practice so checkout &lt;a href=&quot;https://semver.org/&quot;&gt;semver.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;py_modules&lt;/h2&gt;
&lt;p&gt;Typically most packages use the &lt;code class=&quot;language-text&quot;&gt;packages&lt;/code&gt; argument combined with
&lt;code class=&quot;language-text&quot;&gt;find_packages&lt;/code&gt;, but for this minimal package, we are only creating one &lt;code class=&quot;language-text&quot;&gt;.py&lt;/code&gt; file.&lt;/p&gt;
&lt;h2&gt;Using packages instead&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; setuptools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; setup&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; find_packages

setup&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    version&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    packages&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;find_packages&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    install_requires&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;kedro&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;install_requires&lt;/h2&gt;
&lt;p&gt;These are your external dependencies that come from pypi.  They go in this list but are often pulled in from a file called &lt;code class=&quot;language-text&quot;&gt;requirements.txt&lt;/code&gt;.  Other developers may look for this file and want to do a &lt;code class=&quot;language-text&quot;&gt;pip install -r
requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Clean?&lt;/h2&gt;
&lt;p&gt;One thing to be careful of here is that everything sits at the top level API, when you users import your module and hit tab they are going to see a lot of stuff unless you hide all of your internal functions behind an &lt;code class=&quot;language-text&quot;&gt;_&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Minimal&lt;/h2&gt;
&lt;p&gt;Can you create a python package with less than two files and less than 8 lines? Should you?  I really like a minimal point to get started from for quick and simple prototypes.  You can always pull a more complicated &lt;code class=&quot;language-text&quot;&gt;cookiecutter&lt;/code&gt; template later if the project is successful.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/minimal-python-package.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/minimal-python-package/.png</cover_image></item><item><title><![CDATA[Vim Replace Visual Star]]></title><description><![CDATA[Replacing text based on whats in the current search register is a quite handy
tool that I use often.  I believe I picked this tip up from…]]></description><link>https://waylonwalker.com/vim-replace-visual-star/</link><guid isPermaLink="false">https://waylonwalker.com/vim-replace-visual-star/</guid><pubDate>Sun, 10 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Replacing text based on whats in the current search register is a quite handy
tool that I use often.  I believe I picked this tip up from Nick Janetakis,
check out his YouTube channel for some amazing vim tips.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;100%&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/fP_ckZ30gbs?rel=0&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;If there is one thing that I Like most about vim it&apos;s the ability to hack on it
and make it work well for you.&lt;/p&gt;
&lt;h2&gt;Replacing text in vim&lt;/h2&gt;
&lt;p&gt;Vim can often be a bit verbose, but that&apos;s ok because we can hack on it, and
make our own shortcuts and keybindings.  For instance, finding and replacing
text requires using a command at the vim command-line &lt;code class=&quot;language-text&quot;&gt;:&lt;/code&gt;.  Replacing foo with
bar looks like this &lt;code class=&quot;language-text&quot;&gt;:%s/foo/bar/g&lt;/code&gt;, the final g means all of the foos, not just
the first one on the line.&lt;/p&gt;
&lt;h2&gt;making it better&lt;/h2&gt;
&lt;p&gt;I have a keybinding in my &lt;code class=&quot;language-text&quot;&gt;init.vim&lt;/code&gt; that will allow me to search for a pattern
with the usual &lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt; character, page through them as normal with &lt;code class=&quot;language-text&quot;&gt;n&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;N&lt;/code&gt;, but
when I press &lt;code class=&quot;language-text&quot;&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt; it will populate the replace command for me so that all I
need to do is type out the new text.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;nnoremap &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;s&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;g&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Left&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Left&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Note on the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;C-R&amp;gt;/&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;In command mode &lt;code class=&quot;language-text&quot;&gt;:&lt;/code&gt; vim allows you to paste any text from any register into the
current command.  The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;C-R&amp;gt;/&lt;/code&gt; will paste the text from the current search
register into the command.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt; in command mode can paste text from any register, you can see what
registers are in use with the &lt;code class=&quot;language-text&quot;&gt;:reg&lt;/code&gt; command.  There are a lot of them and many
get populated automatically as you yank text or create macros.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/save-vim-macro/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/de331984b5e3d37beacd574593394ca3/630fb/save-vim-macro-xmas2020.png&quot; alt=&quot;article cover for Save Vim Macro&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Save Vim Macro&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;Also see how to use &lt;C-R&gt; to save macros to key bindings easily&lt;/p&gt;
&lt;/blockquote&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/vim-replace-visual-star.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/vim-replace-visual-star/.png</cover_image></item><item><title><![CDATA[If Tmux]]></title><description><![CDATA[I do much of my work from tmux, I love it so much that I want to setup some functionality that puts me in tmux even if I didnt ask for it…]]></description><link>https://waylonwalker.com/if-tmux/</link><guid isPermaLink="false">https://waylonwalker.com/if-tmux/</guid><pubDate>Sat, 09 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I do much of my work from tmux, I love it so much that I want to setup some functionality that puts me in tmux even if I didnt ask for it.&lt;/p&gt;
&lt;h2&gt;Bash Function&lt;/h2&gt;
&lt;p&gt;Bash function to check if the shell is in a tmux session.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;in_tmux&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$TMUX&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Using the bash function&lt;/h2&gt;
&lt;p&gt;I often open up vim to do some quite edits, but before I know it I have several splits open and I need access to another shell utility, but I forgot to start in tmux.  This function makes sure tht I start in tmux everytime.&lt;/p&gt;
&lt;p&gt;Using &lt;code class=&quot;language-text&quot;&gt;if_tmux&lt;/code&gt; to ensure vim is opened in tmux.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;vim&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
  in_tmux &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; nvim &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt; -c &lt;span class=&quot;token string&quot;&gt;&quot;\
    tmux new-session -d;\
    tmux send-keys nvim Space +GFiles C-m;\
    tmux -2 attach-session -d;
    &quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I am not quite sure if this is proper use of the &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;||&lt;/code&gt;, let me know if you have a better way to do one thing if &lt;code class=&quot;language-text&quot;&gt;in_tmux&lt;/code&gt; returns true and another if it returns faslse.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/if-tmux.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/if-tmux/.png</cover_image></item><item><title><![CDATA[Live Substitution In Neovim]]></title><description><![CDATA[Replacing text in vim can be quite frustrating especially since it doesn't have
live feedback to what is changing. Today I was watching Josh…]]></description><link>https://waylonwalker.com/neovim-live-substitution/</link><guid isPermaLink="false">https://waylonwalker.com/neovim-live-substitution/</guid><pubDate>Mon, 04 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Replacing text in vim can be quite frustrating especially since it doesn&apos;t have
live feedback to what is changing. Today I was watching Josh Branchaud&apos;s
Vim-Unalphabet series on Youtuve and realized that his vim was doing this and I
had to have it.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;neovim can live highlight substitutions.&lt;br&gt;&lt;br&gt;:set inccommand=nosplit&lt;/p&gt;&amp;mdash; Waylon Walker 🐍 (@_WaylonWalker) &lt;a href=&quot;https://twitter.com/_WaylonWalker/status/1346081617199198210?ref_src=twsrc%5Etfw&quot;&gt;January 4, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;h2&gt;How to do it.&lt;/h2&gt;
&lt;p&gt;I had to do a bit of searching and found a great post from &lt;a href=&quot;http://vimcasts.org/episodes/neovim-eyecandy/&quot;&gt;vimcasts&lt;/a&gt; that shows exactly how to get the live search and replace highlighting using &lt;code class=&quot;language-text&quot;&gt;inccomand&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;:h inccommand&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&apos;inccommand&apos;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;icm&apos;&lt;/span&gt;	string	&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
			global
			
	&lt;span class=&quot;token string&quot;&gt;&quot;nosplit&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Shows the effects of a command incrementally&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; you type&lt;span class=&quot;token operator&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;token string&quot;&gt;&quot;split&quot;&lt;/span&gt;	 &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Also shows partial off&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;screen results &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; a preview &lt;span class=&quot;token builtin&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;.&lt;/span&gt;

	Works &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; |&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;substitute|&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; |&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;smagic&lt;/span&gt;|&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; |&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;snomagic&lt;/span&gt;|&lt;span class=&quot;token operator&quot;&gt;.&lt;/span&gt; |&lt;span class=&quot;token builtin&quot;&gt;hl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Substitute|

	If the preview &lt;span class=&quot;token operator&quot;&gt;is&lt;/span&gt; too slow &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;exceeds &lt;span class=&quot;token string&quot;&gt;&apos;redrawtime&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; then &lt;span class=&quot;token string&quot;&gt;&apos;inccommand&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;is&lt;/span&gt;
	automatically disabled until |Command&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;line&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;mode&lt;/span&gt;| &lt;span class=&quot;token operator&quot;&gt;is&lt;/span&gt; done&lt;span class=&quot;token operator&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Add this to your config&lt;/h2&gt;
&lt;p&gt;I believe that this is a neovim only feature, add it into your
&lt;code class=&quot;language-text&quot;&gt;~/.config/nvim/init.vim&lt;/code&gt; file. You can see it in my
&lt;a href=&quot;https://github.com/WaylonWalker/devtainer/blob/main/dotfiles/.config/nvim/settings.vim#L155&quot;&gt;dotfiles&lt;/a&gt;
as well.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;set&lt;/span&gt; inccommand&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;nosplit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;See it in Action&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/nvim-live-substitute-inccommand.gif&quot; alt=&quot;example live
substitution&quot;&gt;&lt;/p&gt;
&lt;h2&gt;The Video that inspired this&lt;/h2&gt;
&lt;p&gt;Check out Josh Branchaud&apos;s great series on the Vim-Unalphabet.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;100%&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/5jMiYtXz2QA?rel=0&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/neovim-live-substitution.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/neovim-live-substitution/.png</cover_image></item><item><title><![CDATA[Save Vim Macro]]></title><description><![CDATA[If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately…]]></description><link>https://waylonwalker.com/save-vim-macro/</link><guid isPermaLink="false">https://waylonwalker.com/save-vim-macro/</guid><pubDate>Mon, 04 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately want to store it away as a custom keybinding. As with most things with vim, it&apos;s easy to do once you understand it.&lt;/p&gt;
&lt;h2&gt;Creating a Macro&lt;/h2&gt;
&lt;p&gt;One of the earliest things we all learn to do in vim is to create macros, custom sets of functionality stored in a register that can be replayed later.&lt;/p&gt;
&lt;p&gt;To create a macro, get into normal mode, then type &lt;code class=&quot;language-text&quot;&gt;q&lt;/code&gt; followed by a letter that you want to store the macro under.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;qq&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: a common throw-away macro register is q because it&apos;s easy to hit qq from normal mode to start recording.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Replaying a Macro&lt;/h2&gt;
&lt;p&gt;Macros can be replayed using &lt;code class=&quot;language-text&quot;&gt;@&lt;/code&gt; followed by the letter that you stored the macro under.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;@&lt;span class=&quot;token keyword&quot;&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Registers&lt;/h2&gt;
&lt;p&gt;Registers are nothing more than a single character key mapping to a value of some text. As you &lt;code class=&quot;language-text&quot;&gt;yank&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;delete&lt;/code&gt;, or create macros in vim, it automatically stores text into these registers.&lt;/p&gt;
&lt;p&gt;When you hit &lt;code class=&quot;language-text&quot;&gt;p&lt;/code&gt; paste it&apos;s simply pasting in the default register. You can also paste in any other register by hitting &lt;code class=&quot;language-text&quot;&gt;&amp;quot;qp&lt;/code&gt; where q is the register that you want to paste in.&lt;/p&gt;
&lt;h2&gt;Listing Registers&lt;/h2&gt;
&lt;p&gt;To see what you have stored in each register, use the &lt;code class=&quot;language-text&quot;&gt;:reg&lt;/code&gt; command. This is a powerful tool that I have underutilized for a long time. It is really great to see what you have in each register.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;reg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;making a macro into a shortcut&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;a little &lt;c-r&gt; magic&lt;/c-r&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The magical shortcut that makes it easy is that control + r &lt;code class=&quot;language-text&quot;&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt; followed by a register will paste that register wherever you currently are, including the command mode.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;nnoremap &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;binding&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;register&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Editing a Macro&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;relieve some of that Macro Pressure&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now that we understand that macros are simply strings of text placed into a register, it becomes a bit more intuitive to edit them after being created.&lt;/p&gt;
&lt;p&gt;First, paste the contents of the register into your current working buffer.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then edit the macro and add it back to that buffer and delete it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&quot;qdd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your macro had multiple lines in it, you might need to.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&quot;qdj&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;&quot;qd2j&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Make it recursive&lt;/h2&gt;
&lt;p&gt;One use case of editing a macro may be making it recursive after trying it out a few times. Macros can become recursive by simply calling themselves after running.&lt;/p&gt;
&lt;p&gt;Paste in the macro.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the end of the line and add &lt;code class=&quot;language-text&quot;&gt;@q&lt;/code&gt; to get called again.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;A @&lt;span class=&quot;token keyword&quot;&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace the &lt;code class=&quot;language-text&quot;&gt;q&lt;/code&gt; register with the updated macro.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&quot;qd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: don&apos;t use this in a shortcut as the macro may change. If you want to call the keybinding again, you will have to use noremap instead of nnoremap, but be careful as recursive remaps can be dangerous.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Recap&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&quot; record a macro&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;register&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;&quot; play a macro&lt;/span&gt;
@&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;register&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;&quot; list registers&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;reg&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;&quot; map a macro to a keyboard shortcut&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;nnoremap &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;binding&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;register&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;&quot; edit a macro&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;register&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;&quot;{register}dd&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;&quot; make a macro recursive&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;register&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;A@&lt;span class=&quot;token keyword&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;esc&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;&quot;{register}dd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/save-vim-macro.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/save-vim-macro/.png</cover_image></item><item><title><![CDATA[Newsboat]]></title><description><![CDATA[Web browsers are a black hole of productivity.  I try to use them as little as
possible when it is time to focus.  I try to use , , or  with…]]></description><link>https://waylonwalker.com/newsboat/</link><guid isPermaLink="false">https://waylonwalker.com/newsboat/</guid><pubDate>Sat, 02 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Web browsers are a black hole of productivity.  I try to use them as little as
possible when it is time to focus.  I try to use &lt;code class=&quot;language-text&quot;&gt;help&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;?&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;??&lt;/code&gt; with
ipython, or --help at the command line as much as possible.  What about that
time I am trying to see what my online friends are posting on their sites?  I
used to used google reader quite heavily before that was taken down.&lt;/p&gt;
&lt;h2&gt;Newsboat&lt;/h2&gt;
&lt;p&gt;I am going to give a terminal rss reader a try for a bit and see how that goes
for me.  I have really struggled to get into an rss reader since google reader
died.&lt;/p&gt;
&lt;h2&gt;installation&lt;/h2&gt;
&lt;p&gt;I installed with the reccomended snap for Ubuntu.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; snap &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; newsboat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Adding feeds&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;super simple&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Running help for newsboat directed me towards their config files at the bottom.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ newsboat --help
newsboat r2.22
usage: /snap/newsboat/3849/usr/local/bin/newsboat &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;-i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;|&lt;/span&gt;-e&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;-u &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;urlfile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;-c &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;cachefile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;-x &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;command&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;-h&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
	-e, --export-to-opml		&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; OPML feed to stdout
	-r, --refresh-on-start		refresh feeds on start
	-i, --import-from-opml&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	&lt;span class=&quot;token function&quot;&gt;import&lt;/span&gt; OPML &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;
	-u, --url-file&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;urlfile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	&lt;span class=&quot;token builtin class-name&quot;&gt;read&lt;/span&gt; RSS feed URLs from &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;urlfile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
	-c, --cache-file&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;cachefile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	use &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;cachefile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; as cache &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;
	-C, --config-file&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;configfile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	&lt;span class=&quot;token builtin class-name&quot;&gt;read&lt;/span&gt; configuration from &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;configfile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
	-X, --vacuum			compact the cache
	-x, --execute&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;command&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.	execute list of commands
	-q, --quiet			quiet startup
	-v, --version			get version information
	-l, --log-level&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;loglevel&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt; a log with a certain loglevel &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;valid values: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; to &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	-d, --log-file&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;logfile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	use &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;logfile&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; as output log &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;
	-E, --export-to-file&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; list of &lt;span class=&quot;token builtin class-name&quot;&gt;read&lt;/span&gt; articles to &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
	-I, --import-from-file&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;	&lt;span class=&quot;token function&quot;&gt;import&lt;/span&gt; list of &lt;span class=&quot;token builtin class-name&quot;&gt;read&lt;/span&gt; articles from &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
	-h, --help			this &lt;span class=&quot;token builtin class-name&quot;&gt;help&lt;/span&gt;
	    --cleanup			remove unreferenced items from cache

Files:
	- configuration:  /home/nic/snap/newsboat/3849/.newsboat/config
	- feed URLs:      /home/nic/snap/newsboat/3849/.newsboat/urls
	- cache:          /home/nic/snap/newsboat/3849/.newsboat/cache.db

Support at &lt;span class=&quot;token comment&quot;&gt;#newsboat at https://freenode.net or on our mailing list https://groups.google.com/g/newsboat&lt;/span&gt;
For &lt;span class=&quot;token function&quot;&gt;more&lt;/span&gt; information, check out https://newsboat.org/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I just need to edit its urls file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;nvim ~/snap/newsboat/3849/.newsboat/urls&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Urls file is just a list of urls to rss feeds.  Adding mine in allowed me to see all of my posts.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;https://waylonwalker.com/rss.xml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Config&lt;/h2&gt;
&lt;p&gt;I took most of my config from a &lt;a href=&quot;http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/&quot;&gt;blog
post&lt;/a&gt;
that I found by Evan Travers.  It set some sane defaults to the reading width
and vim keys.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Hide feeds where all the items are read.&lt;/span&gt;
show-read-feeds no

&lt;span class=&quot;token comment&quot;&gt;# Make the text width readable&lt;/span&gt;
text-width &lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Use multiple threads to download all the news faster.&lt;/span&gt;
reload-threads &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# browser ~/bin/newsboat-browser.sh&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# browser &quot;/usr/bin/brave-browser %u&quot;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# unbind keys&lt;/span&gt;
unbind-key ENTER
unbind-key j
unbind-key k
unbind-key J
unbind-key K
unbind-key ^D
unbind-key ^U
unbind-key o
unbind-key g
unbind-key G

&lt;span class=&quot;token comment&quot;&gt;# bind keys - vim style&lt;/span&gt;
bind-key j down
bind-key k up
bind-key l &lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;
bind-key h quit
bind-key ^D pagedown
bind-key ^U pageup
bind-key b toggle-source-view
bind-key U toggle-show-read-feeds
bind-key u show-urls
bind-key g home
bind-key G end
bind-key b open-in-browser-and-mark-read
bind-key B open-in-browser
bind-key i &lt;span class=&quot;token function&quot;&gt;sort&lt;/span&gt;
bind-key I rev-sort&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;GUI Browser&lt;/h2&gt;
&lt;p&gt;No matter how many different guides I tried I keedp getting &lt;code class=&quot;language-text&quot;&gt;error code 127&lt;/code&gt;
when trying to &lt;code class=&quot;language-text&quot;&gt;open-in-browser&lt;/code&gt;.  Please let me know if you know how to fix
this. For now I am just going to roll with it.&lt;/p&gt;
&lt;h2&gt;Here&apos;s how it looks&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/newsboat-feed-waylonwalker-com.png&quot; alt=&quot;newsboat feed&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;browsing a feed in newsboat&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/newsboat-article.png&quot; alt=&quot;newsboat article&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;reading an article in newsboat&lt;/p&gt;
&lt;/blockquote&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/newsboat.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/newsboat/.png</cover_image></item><item><title><![CDATA[Large Refactor At The Command Line]]></title><description><![CDATA[As projects grow patterns that worked early on break and we need to change things to make the project easier to work with, and more…]]></description><link>https://waylonwalker.com/refactor-in-cli/</link><guid isPermaLink="false">https://waylonwalker.com/refactor-in-cli/</guid><pubDate>Wed, 30 Dec 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;As projects grow patterns that worked early on break and we need to change things to make the project easier to work with, and more welcoming to new developers.&lt;/p&gt;
&lt;h2&gt;git&lt;/h2&gt;
&lt;p&gt;Before you start mucking up a project with wild commands at the terminal check that you have a super clean git status. We may make some mistakes and need a way to undo 100&apos;s files and git makes it really easy if you start with a clean history.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we are ready to begin work we should see a response like this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;On branch main
nothing to commit, working tree clean&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It would also be wise to do this inside of a branch.  The minute you try to do something wild in your working branch someone will walk by and ask you to do a five-minute task, but your deep in refactoring and haven&apos;t left yourself a clean way back.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; branch my-big-refactor&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;grepr&lt;/h2&gt;
&lt;p&gt;Time for the meat of this refactor replacing text across our project.  I often will pop this bash function into my terminal session and tweak it as needed. This function is called &lt;code class=&quot;language-text&quot;&gt;grepr&lt;/code&gt; for &lt;code class=&quot;language-text&quot;&gt;grep&lt;/code&gt; then &lt;code class=&quot;language-text&quot;&gt;replace&lt;/code&gt;.  It will recursively search for a given pattern inside your working directory, then use &lt;code class=&quot;language-text&quot;&gt;sed&lt;/code&gt; to replace that pattern with another.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep -iRl &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s/&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;/g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your pattern contains &lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt; characters such as for URLs you can swap the &lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt;&apos;s in the &lt;code class=&quot;language-text&quot;&gt;sed&lt;/code&gt; command for &lt;code class=&quot;language-text&quot;&gt;|&lt;/code&gt;&apos;s.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep -iRl &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s|&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;|&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;|g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can find this function and more of my bash notes.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/bash/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/c4381601d570bb796e3fceb606b40e06/9dc27/hannah-gibbs-BINLgyrG_fI-unsplash.jpg&quot; alt=&quot;article cover for Bash&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Bash&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Waylon Walker&amp;apos;s Bash Notes
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;I recently flattened this blog so blogs are under the top-level rather than under &lt;code class=&quot;language-text&quot;&gt;/blog&lt;/code&gt; and I used this technique to swap internal links to the new format.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep -iRl &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s|&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;|&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;|g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;


grepr &lt;span class=&quot;token string&quot;&gt;&quot;https://waylonwalker.com/blog/&quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://waylonwalker.com/&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;git diff&lt;/h2&gt;
&lt;p&gt;After running the replace command the first thing I want to see is everything that changed.  Looking at git diff will highlight exactly what changed since our last commit.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;diff&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Work in small steps&lt;/h2&gt;
&lt;p&gt;If you&apos;re happy with the results commit them now.  It&apos;s best to do these commands that have a large effect on the entire project in small steps.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;moved routes from /blog to /&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Working in small steps gives us an easy way to undo steps that may have been a mistake before it&apos;s too late.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/master-no-more/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/656b0f429bd13770249a8e39f7dee184/630fb/master-no-more-xmas2020.png&quot; alt=&quot;article cover for Master No More&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Master No More&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    It&amp;apos;s been a long time coming.  We use some very harsh language within tech so much sometimes that we become numb to it.  It&amp;apos;s time to do my very small part in this movement and purge this language from my active repos starting with this blog right here.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;I used the technique from this post to switch master to main on my blog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;git reset&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;How I do Mass Undo&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;be careful&lt;/strong&gt; work from a branch, make sure you started clean&lt;/p&gt;
&lt;p&gt;Let&apos;s say I wanted to change every occurrence of one variable name to another.
Lets try to replace replace &lt;code class=&quot;language-text&quot;&gt;pandas.CSVDataSet&lt;/code&gt; with &lt;code class=&quot;language-text&quot;&gt;pandas.ParquetDataSet&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep -iRl &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s|&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;|&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;|g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;


grepr &lt;span class=&quot;token string&quot;&gt;&quot;pandas.CSVDataSet&quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;pandas.ParquetDataSet&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upon inspection of the &lt;code class=&quot;language-text&quot;&gt;git diff&lt;/code&gt; we notice that there was an unintentional change to the &lt;code class=&quot;language-text&quot;&gt;docs/standard-storage.md&lt;/code&gt; file. To revert the entire change we can run.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; These resets are irreversible.  Make sure that you started with a clean &lt;code class=&quot;language-text&quot;&gt;git status&lt;/code&gt; and you are confident that you didn&apos;t have any work on your machine, not in the remote repo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;match the remote and wipe out any changes&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset --hard origin/main&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;match our last commit&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset --hard HEAD&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;agr&lt;/h2&gt;
&lt;p&gt;I have an alternative version that I occasionally use as well that utilizes the silver searcher &lt;code class=&quot;language-text&quot;&gt;ag&lt;/code&gt;.  It does a great job at following your .gitignore rules with no fuss, and can filter down to file extensions simply with flags like &lt;code class=&quot;language-text&quot;&gt;--md&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;agr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ag -l &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s/&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;/g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;git clean&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;how I remove untracked files&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sometimes our refactoring requires moving files around. If we want to undo steps like this git will not clean up untracked files.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; conf/base/sales-catalog.yml conf/base/sales/catalg.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;clean up untracked files&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clean -f&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;clean up untracked directories&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clean -d&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;clean up ignored files&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clean -x&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;-x&lt;/code&gt; can be a bit dangerous, be careful with it.  You can lose significant time by wiping out a &lt;code class=&quot;language-text&quot;&gt;node_modules&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;venv&lt;/code&gt;, or credentials.&lt;/p&gt;
&lt;h2&gt;git  checkout&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;How I undo single files&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If our command was mostly successful, but just a few extra files were touched I will manually revert them with &lt;code class=&quot;language-text&quot;&gt;git checkout &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; checkout conf/base/supply-catalog.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;git checkout --&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;How I undo an entire directory&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sometimes we need to undo an entire directory.  This command will undo changes
to all of the tracked files in the repo.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; checkout -- /src/pages/blog&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;gitui&lt;/h2&gt;
&lt;p&gt;I really love using &lt;code class=&quot;language-text&quot;&gt;gitui&lt;/code&gt; as a handy terminal interface to browse logs, diffs, and commit a few files at a time.  It starts up crazy fast and is very intuitive to navigate through diffs of changes like this one file at a time if the &lt;code class=&quot;language-text&quot;&gt;git diff&lt;/code&gt; gets too overwhelming.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/extrawurst/gitui&quot;&gt;https://github.com/extrawurst/gitui&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/refactor-in-cli.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/refactor-in-cli/.png</cover_image></item><item><title><![CDATA[Custom Ipython Prompt]]></title><description><![CDATA[I've grown tired of the standard ipython prompt as it doesn't do much to give
me any useful information.  The default one gives out a line…]]></description><link>https://waylonwalker.com/custom-ipython-prompt/</link><guid isPermaLink="false">https://waylonwalker.com/custom-ipython-prompt/</guid><pubDate>Sun, 20 Dec 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I&apos;ve grown tired of the standard ipython prompt as it doesn&apos;t do much to give
me any useful information.  The default one gives out a line number that only
seems to add anxiety as I am working on a simple problem and see that number
grow to several hundred.  I start to question my ability 🤦‍♂️.&lt;/p&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;If you already have an ipython config you can move on otherwise check out this
post on creating an ipython config.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/ipython-config/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/63e488bb5ac06727314c998f0ef9066b/630fb/ipython-config-xmas2020.png&quot; alt=&quot;article cover for Ipython-Config&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Ipython-Config&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    I use my ipython terminal daily. It&amp;apos;s my go to way of running python most of the time. After you use it for a little b
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;h2&gt;The Dream Prompt&lt;/h2&gt;
&lt;p&gt;I want something similar to the starship prompt I am using in the
shell.  I want to be able to quickly see my python version,
environment name, and git branch.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python version&lt;/li&gt;
&lt;li&gt;active environment&lt;/li&gt;
&lt;li&gt;git branch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/my-zsh-prompt.png&quot; alt=&quot;my zsh prompt&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is my zsh prompt I am using for inspiration&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Basic Prompt&lt;/h2&gt;
&lt;p&gt;This is mostly boilerplate that I found from various google
searches, but this gets me a basic green chevron as my prompt.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; IPython&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;terminal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prompts &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Prompts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Token

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyPrompt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Prompts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;in_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;❯ &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;out_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

ip &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_ipython&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ip&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prompts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; MyPrompt&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The rest of this post will build off of this boilerplate and add
to the &lt;code class=&quot;language-text&quot;&gt;in_prompt_tokens&lt;/code&gt; method of MyPrompt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Colors&lt;/h2&gt;
&lt;p&gt;I mostly set the colors of my prompt throughout this post by guessing and
trying different attributes under the Token.&lt;/p&gt;
&lt;h2&gt;Red If Error&lt;/h2&gt;
&lt;p&gt;I found that the &lt;code class=&quot;language-text&quot;&gt;Prompts&lt;/code&gt; subclass has many of the same methods as the ipython
object, so I would often use that for inspection.  Looking through the ipython
class I found a boolean under &lt;code class=&quot;language-text&quot;&gt;shell.last_execution_succeeded&lt;/code&gt; that would give
me if the last execution was successful or not.  I did an inline if statemetn
to set the color to a &lt;code class=&quot;language-text&quot;&gt;Token.Generic.Error&lt;/code&gt; if this was false.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;in_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;shell&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_execution_succeeded
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot;❯ &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Python Version&lt;/h2&gt;
&lt;p&gt;Next up to list out the python version that is running.  I grabbed the version
from &lt;code class=&quot;language-text&quot;&gt;platform.python_version&lt;/code&gt;, this seemed to get me the most concise version
that I was looking for to match the starship prompt.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;update imports&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; platform &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; python_version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;update prompt&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;in_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Class&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;v&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; python_version&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;shell&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_execution_succeeded
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot;❯ &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Python environment&lt;/h2&gt;
&lt;p&gt;Since I use conda for my environments I chose to pull the name of the
environment from the &lt;code class=&quot;language-text&quot;&gt;CONDA_DEFAULT_ENV&lt;/code&gt; environment variable that is set by
conda when you change your environment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;update imports&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; platform &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; python_version
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; os&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;update prompt&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;in_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;©&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;environ&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CONDA_DEFAULT_ENV&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Class&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;v&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; python_version&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;shell&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_execution_succeeded
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot;❯ &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Git Branch&lt;/h2&gt;
&lt;p&gt;Git branch was a bit tricky.  There might be a better way to get it,
but I was sticking with things I knew, the git cli and python.  I
did need to do a bit of googling to figure out that git has a
&lt;code class=&quot;language-text&quot;&gt;--show-current&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;getting the current git branch&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_branch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;check_output&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;git branch --show-current&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; shell&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stderr&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DEVNULL
            &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;decode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;except&lt;/span&gt; BaseException&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;  If this is run form a non-git directory you will quickly find git
errors after every command as this function tries to ask for the git branch.
Sending stderr to devnull will avoid this inconvenience.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;add git branch to prompt&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;in_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subheading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;↪&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subheading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; get_branch&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;©&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;environ&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CONDA_DEFAULT_ENV&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Class&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;v&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; python_version&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;shell&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_execution_succeeded
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot;❯ &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Add current directory name&lt;/h2&gt;
&lt;p&gt;I am a big fan of pathlib so that is what I will use to get the path. If I
planned on using python &lt;code class=&quot;language-text&quot;&gt;&amp;lt;3.6&lt;/code&gt; I would probably use something else, but this is
what I know and I can&apos;t think of the last time I used &lt;code class=&quot;language-text&quot;&gt;&amp;lt;3.6&amp;gt;&lt;/code&gt; for anything.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;update imports&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Path&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;add git branch to prompt&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;in_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OutPrompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;absolute&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stem&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subheading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;↪&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subheading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; get_branch&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;©&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;environ&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CONDA_DEFAULT_ENV&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Class&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;v&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; python_version&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;shell&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_execution_succeeded
            &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot;❯ &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Final Script&lt;/h2&gt;
&lt;p&gt;That&apos;s it for my prompt at the moment.  I have been using it for about a week.
It seems to have everything I need so far, and skips on things I don&apos;t need.&lt;/p&gt;
&lt;p&gt;Enjoy the full script.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;my final prompt&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; IPython&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;terminal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prompts &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Prompts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Token
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Path
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; os
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; platform &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; python_version
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; subprocess

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_branch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;check_output&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;git branch --show-current&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; shell&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stderr&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DEVNULL
            &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;decode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;except&lt;/span&gt; BaseException&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyPrompt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Prompts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;in_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OutPrompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;absolute&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stem&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subheading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;↪&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subheading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; get_branch&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;©&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;environ&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CONDA_DEFAULT_ENV&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Class&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;v&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; python_version&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Entity&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;ipython&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Prompt
                &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;shell&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_execution_succeeded
                &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; Token&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Generic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;❯ &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;out_prompt_tokens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cli&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;


ip &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_ipython&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ip&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prompts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; MyPrompt&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/custom-ipython-prompt.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/custom-ipython-prompt/.png</cover_image></item><item><title><![CDATA[Ipython-Config]]></title><description><![CDATA[I use my ipython terminal daily.  It's my go to way of running python most of
the time.  After you use it for a little bit you will probably…]]></description><link>https://waylonwalker.com/ipython-config/</link><guid isPermaLink="false">https://waylonwalker.com/ipython-config/</guid><pubDate>Sun, 20 Dec 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I use my ipython terminal daily.  It&apos;s my go to way of running python most of
the time.  After you use it for a little bit you will probably want to setup a
bit of your own configuration.&lt;/p&gt;
&lt;h2&gt;install ipython&lt;/h2&gt;
&lt;p&gt;Activate your virtual environment of choice and pip install it.  Any time you
are running your project in a virtual environment, you will need to install
ipython inside it to access those packages from ipython.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; ipython&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You are using a virtual environment right? Virtual environments like venv or
conda can save you a ton of pain down the road.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;profile_default&lt;/h2&gt;
&lt;p&gt;When you install ipython you start out with no config at all.  Runnign &lt;code class=&quot;language-text&quot;&gt;ipython
profile create&lt;/code&gt; will start a new profile called &lt;code class=&quot;language-text&quot;&gt;profile_default&lt;/code&gt; that contains
all of the default configuration.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ipython profile create&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will create a directory &lt;code class=&quot;language-text&quot;&gt;~/.ipython/profile_default&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;multiple configurations&lt;/h2&gt;
&lt;p&gt;You can run multiple configurations by naming them with &lt;code class=&quot;language-text&quot;&gt;ipython profile create
[profile_name]&lt;/code&gt; This command will create a directory
&lt;code class=&quot;language-text&quot;&gt;~/.ipython/[profile_name]&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ipython profile create my_profile
ipython --profile=my-profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;startup&lt;/h2&gt;
&lt;p&gt;Inside the profile there will be a startup directory
&lt;code class=&quot;language-text&quot;&gt;~/.ipython/profile_default/startup&lt;/code&gt;.  Ipython will execute each of the files
in this directory on startup.  This is particularly handy to create custom
prompts, search, or import packages automatically for certian profiles.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/custom-ipython-prompt/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/0e2bfeb88fd0cc71e3e74de3fc65f7c5/630fb/custom-ipython-prompt-xmas2020.png&quot; alt=&quot;article cover for Custom Ipython Prompt&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Custom Ipython Prompt&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    I&amp;apos;ve grown tired of the standard ipython prompt as it doesn&amp;apos;t do much to give me any useful information. The default on
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;This post creates a custom ipython prompt by creating a
&lt;code class=&quot;language-text&quot;&gt;~/.ipython/profile_default/startup/prompt.py&lt;/code&gt; file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;ipython_config.py&lt;/h2&gt;
&lt;p&gt;There are tons of options that are in the &lt;code class=&quot;language-text&quot;&gt;ipython_config.py&lt;/code&gt; file.  My
favorite is to automatically enable my favorite magic command autoreload.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/autoreload-ipython/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/de227ffcb7da2e5c1170a8434163bec9/630fb/autoreload-ipython-xmas2020.png&quot; alt=&quot;article cover for Autoreload in Ipython&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Autoreload in Ipython&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Autoreload in python
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InteractiveShellApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;extensions &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;autoreload&apos;&lt;/span&gt;
c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InteractiveShellApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exec_lines &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;%autoreload 2&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InteractiveShellApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exec_lines&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;print(&quot;Warning: disable autoreload in ipython_config.py to improve performance.&quot;)&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/ipython-config.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/ipython-config/.png</cover_image></item><item><title><![CDATA[Automating my Post Starter]]></title><description><![CDATA[One thing we all dread is mundane work of getting started, and all the hoops it
takes to get going.  This year I want to post more often and…]]></description><link>https://waylonwalker.com/automating-my-post-starter/</link><guid isPermaLink="false">https://waylonwalker.com/automating-my-post-starter/</guid><pubDate>Fri, 11 Dec 2020 09:08:00 GMT</pubDate><content:encoded>&lt;p&gt;One thing we all dread is mundane work of getting started, and all the hoops it
takes to get going.  This year I want to post more often and I am taking some
steps towards making it easier for myself to just get started.&lt;/p&gt;
&lt;p&gt;When I start a new post I need to cd into my blog directory, start neovim in a
markdown file with a clever name, copy some frontmatter boilerplate, update the
post date, add tags, a description, and a cover.&lt;/p&gt;
&lt;h2&gt;Todo List for starting a post&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;frontmatter template&lt;/li&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;slug&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;li&gt;date&lt;/li&gt;
&lt;li&gt;cover&lt;/li&gt;
&lt;li&gt;description&lt;/li&gt;
&lt;li&gt;create markdown file&lt;/li&gt;
&lt;li&gt;open in neovim&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Lets Automate this&lt;/h2&gt;
&lt;h3&gt;This aint no proper cli&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;hot and fast&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As with many thing running behind the scenes on this site, I am the one and
only user, I have limited time, so this is going to be a bit &lt;strong&gt;hot and fast&lt;/strong&gt;.
Let&apos;s create a file called new-post.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;start the script new-post&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#!python&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# new-post&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;👆 Works on my machine&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If this were something that had more users than me I would probably use
something like click, but for this I want to get it done quick and avoid any
need to manage dependencies.  Be careful if you were to share something with a
&lt;code class=&quot;language-text&quot;&gt;#!python&lt;/code&gt; as it requries the end user to have the right version of python
ready to go.&lt;/p&gt;
&lt;h3&gt;Title&lt;/h3&gt;
&lt;p&gt;The title can&apos;t really be automated this is the core idea coming out of my 🧠,
but it will be captured through the cli and put into proper position.  For this
I&apos;m going super simple and just pulling it out of &lt;code class=&quot;language-text&quot;&gt;sys.argv&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;set the title&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; sys

title &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;! sys.argv is a list of each argument passed into the script split by spaces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;slug&lt;/h3&gt;
&lt;p&gt;The slug is what I am calling the route and can simply come out of the title
automatically, if I want to shorten it later by hand that will be simple enough
to do manually. All that needs to be done is to lowercase and replace a few
characters with -.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;set the slug&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;slug &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lower&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;_&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;tags&lt;/h3&gt;
&lt;p&gt;For tags I decided I wanted the parser to be as simple as possible and didnt
want to dance around any flags.  I am simply just going to look at every
argument passed into the command and see if any of them contain one of my
common tags.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;parse the tags&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
tags &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;py&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;python&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;web&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;webdev&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;blog&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;blog&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;data&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;data&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;🤷‍♂️ &lt;strong&gt;antipattern&lt;/strong&gt;?? The above section does an initialize then modify.  I generally try to avoid this
pattern with something like a list comprehension, but didn&apos;t see an obvious
solution so I just went with it.&lt;/p&gt;
&lt;h2&gt;Frontmatter Template&lt;/h2&gt;
&lt;p&gt;Now we have enough information going to assemble the frontmatter I use for my
posts.  I am going to just insert the values I need into an f-string.  Since
python 3.6 was released f-strings are my go to templating tool.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;create the markdown&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; datetime

frontmatter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;&quot;&quot;---
templateKey: blog-post
tags: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;tags&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
title: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
date: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;datetime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;today&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strftime&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;%Y-%m-%dT%H:%M:%S&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
status: draft
description: &apos;&apos;
cover: &quot;/static/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.png&quot;

---

&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;create markdown file&lt;/h3&gt;
&lt;p&gt;Now its time to get down to business and make the post.  First I want to throw
an error if the post already exists, I definitely dont want to blow away an
existing post if a certain slug is already taken.  I am a big fan of custom
error messages and I am going to go ahead and make one here, even though this
is just a quick script.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;custom error&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PostExistsError&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;FileExistsError&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I am a &lt;code class=&quot;language-text&quot;&gt;pathlib&lt;/code&gt; superfan.  It&apos;s going to make setting up these paths super
simple.  Note I am going to anchor my directory down with the &lt;code class=&quot;language-text&quot;&gt;__file__&lt;/code&gt;
variable.  I do this all the time to get paths relative to the module that is
currently running.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;setup paths&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;directory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pathlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__file__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parent
path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pathlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/src/pages/blog/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.md&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exists&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;raise&lt;/span&gt; PostExistsError&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;Post Already exists at &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;file&lt;/strong&gt; is a string that represents the path to the running module&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally just write the file.  Here we open the file with a context manager so
that we don&apos;t have to worry about closing it when we are done.  Note that we
open it with the &lt;code class=&quot;language-text&quot;&gt;w+&lt;/code&gt; flag for write and creation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;write the file&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;w+&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; f&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    f&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;write&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;git add&lt;/h3&gt;
&lt;p&gt;I am not quite ready to pull the trigger on doing an auto commit, but this may
happen in a future version.  For now I want this file easily picked up by vims
&lt;code class=&quot;language-text&quot;&gt;:GFiles&lt;/code&gt; since I have that is one of my most used hot keys.  To do this the
file at least needs added.  I&apos;m sure there is a better way to do this with a
Git library, but I am used to the command line so I am going to just run a
subprocess.&lt;/p&gt;
&lt;p&gt;I am using the &lt;code class=&quot;language-text&quot;&gt;subprocess.Popen&lt;/code&gt; command since its what I am used to, note
that it will run the task in the background so be sure that you wait on it.
The &lt;code class=&quot;language-text&quot;&gt;Popen&lt;/code&gt; is great if you have several task that are not dependent on each
other.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;git add &lt;new-post&gt;&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;gadd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Popen&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;cd &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &amp;amp;&amp;amp; git add &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    shell&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
gadd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;wait&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;open in neovim&lt;/h3&gt;
&lt;p&gt;Last step of the script is to start writing, I want to be open in my blogs
directory (hence the cd), with the file open, to the right line (+11), and in
insert mode (+star).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;open post in neovim&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;nvim &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Popen&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;cd &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &amp;amp;&amp;amp; nvim +12 +star &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    shell&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
nvim&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;wait&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Alias&lt;/h2&gt;
&lt;p&gt;Now I want this script to be available everywhere.  I am going to simply add
the following entry to shorten the script and eliminate the need to use the
full path.  I added this to my &lt;code class=&quot;language-text&quot;&gt;~/.alias&lt;/code&gt;, for you it may be &lt;code class=&quot;language-text&quot;&gt;~/.bashrc&lt;/code&gt;, or
&lt;code class=&quot;language-text&quot;&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;~/git/waylonwalkerv2/new-post&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Starting a new post&lt;/h2&gt;
&lt;p&gt;Lets start a new post about automating my posts in python.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;np &lt;span class=&quot;token string&quot;&gt;&quot;automating my posts&quot;&lt;/span&gt; python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;This is my workflow&lt;/h2&gt;
&lt;p&gt;Ad hoc scripts like this can be a bit of a hot mess, partly due to the just get
it done nature, but also due to the fact that I am just riffing off the top of
my head and utilizing docs as least as possible.&lt;/p&gt;
&lt;p&gt;While writing the script I would run it after each section or so and print some
results to make sure they were looking good. If I ever needed access to a live
variable I would pop open ipython and run &lt;code class=&quot;language-text&quot;&gt;%run new-post &amp;quot;my-new-post&amp;quot;&lt;/code&gt; and
inspecting it.&lt;/p&gt;
&lt;h2&gt;Final Script&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;final script&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#!python&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# new-post&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; sys
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; datetime
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pathlib
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; subprocess


title &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;titlecase&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
tags &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;py&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;webdev&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blog&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;data&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

slug &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lower&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;_&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
frontmatter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;&quot;&quot;---
templateKey: blog-post
tags: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;tags&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
title: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
date: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;datetime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;today&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strftime&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;%Y-%m-%dT%H:%M:%S&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
status: draft
description: &apos;&apos;
cover: &quot;/static/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.png&quot;

---


&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PostExistsError&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;FileExistsError&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;pass&lt;/span&gt;


directory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pathlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__file__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parent
path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pathlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/src/pages/blog/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.md&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exists&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;raise&lt;/span&gt; PostExistsError&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;Post Already exists at &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;w+&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; f&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    f&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;write&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

gadd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Popen&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;cd &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &amp;amp;&amp;amp; git add &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    shell&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
gadd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;wait&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

nvim &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; subprocess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Popen&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;cd &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &amp;amp;&amp;amp; nvim +12 +star &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    shell&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
nvim&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;wait&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/quickly-edit-posts/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/fd0bd45e6a1500a02b7f796ae7294550/630fb/quickly-edit-posts-xmas2020.png&quot; alt=&quot;article cover for Quickly Edit Posts&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Quickly Edit Posts&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Recently I automated starting new posts with a python script. Today I want to work on the next part that is editing tho
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;check out the next article in this series where I setup a bash function to quickly edit these posts&lt;/p&gt;
&lt;/blockquote&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/automating-my-post-starter.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/automating-my-post-starter/.png</cover_image></item><item><title><![CDATA[Windowing Python Lists]]></title><description><![CDATA[In python data science we often will reach for pandas a bit more than necessary. While pandas can save us so much there are times where…]]></description><link>https://waylonwalker.com/more-itertools-windowed/</link><guid isPermaLink="false">https://waylonwalker.com/more-itertools-windowed/</guid><pubDate>Thu, 10 Dec 2020 10:44:19 GMT</pubDate><content:encoded>&lt;p&gt;In python data science we often will reach for pandas a bit more than necessary. While pandas can save us so much there are times where there are alternatives that are much simpler.  The itertools&lt;code class=&quot;language-text&quot;&gt;and&lt;/code&gt;more-itertools` are full of cases of this.&lt;/p&gt;
&lt;p&gt;This post is a walkthrough of me solving a problem with &lt;code class=&quot;language-text&quot;&gt;more-itertools&lt;/code&gt; rather than reaching for a for loop, or pandas.&lt;/p&gt;
&lt;p&gt;I am working on a  one-line-link expander for my blog.  I ended up doing it, just by modifying the markdown with python.  I first split the post into lines with &lt;code class=&quot;language-text&quot;&gt;content.split(&amp;#39;\n&amp;#39;)&lt;/code&gt;, then look to see if the line appears to be just a link.  One more safety net that I wanted to add was to check if there was whitespace around the line, this could not simply be done in a list comprehension by itself.  I need just a bit of knowledge of the surrounding lines, enter &lt;code class=&quot;language-text&quot;&gt;more-itertools&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;simplified rendering function&lt;/h2&gt;
&lt;p&gt;I have a function that will check to see if the line should be expanded, then render the correct template.  Fist step is to check if the line contains no spaces and starts with &lt;code class=&quot;language-text&quot;&gt;https&lt;/code&gt;, if it
does render the template. &lt;/p&gt;
&lt;p&gt;The real expand_line function uses requests to pull some metadata about the post to insert into the card, more on that in another post.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;expand_line&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
   Check if line should be expanded then render a template
   &quot;&quot;&quot;&lt;/span&gt;

   &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos; &apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; line &lt;span class=&quot;token keyword&quot;&gt;and&lt;/span&gt; line&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startswith&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; line

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;&amp;lt;a href=&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos; class=&apos;card&apos;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;initial implementation&lt;/h2&gt;
&lt;p&gt;My first implementation was to load in the content as a single string and use a list comprehension to expand each line.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;expanded_content &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;expand_line&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; content&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The issue.&lt;/h2&gt;
&lt;p&gt;Sometimes I write my posts in vim without wordwrap on and just use &lt;code class=&quot;language-text&quot;&gt;gq&lt;/code&gt; to wrap them to the current &lt;code class=&quot;language-text&quot;&gt;textwidth&lt;/code&gt;.  If I have a link that happens to be really long it ends up on its own line.  I do not want one line links to expand if they are in the middle of a paragraph.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;##&lt;/span&gt; sample paragraph&lt;/span&gt;

This is a paragraph that has a really long link
https://waylonwalker.com/not-a-real-link-just-a-silly-example-for-this-post
inside of it that ends up on its own line&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;I need a bit of knowledge about the lines around the link.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;windowing&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;more-itertools&lt;/code&gt; comes with a windowing function that will slide over an iterable with a width of n.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; more_itertools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; windowed
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; all_windows &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; windowed&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;all_windows&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this example is copied from the &lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed&quot;&gt;more-itertools docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;sliding through my content&lt;/h2&gt;
&lt;p&gt;The one extra that we need is padding at the front and back of the list so that we ensure that every value ends up in the middle position at least once.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;expanded_content &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;expand_line&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; windowed&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;\n&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;\n&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;meta&lt;/strong&gt;: 👇  This is an example of a one-line-link card that we are trying to achieve.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/python-args-kwargs/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/8c73a5e2f384efdcd17762c52faff94f/630fb/python-args-kwargs-xmas2020.png&quot; alt=&quot;article cover&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;understanding python *args and **kwargs&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Python `*args` and `**kwargs` are super useful tools, that when used properly can make you code much simpler and easier to maintain.  Large manual conversions from a dataset to function arguments can be packed and unpacked into lists or dictionaries. Beware though, this power **can** lead to some really unreadable/unusable code if done wrong.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;Not sure what *line is, check out this article.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;update expand_line&lt;/h2&gt;
&lt;p&gt;Now that we are calling &lt;code class=&quot;language-text&quot;&gt;expand_line&lt;/code&gt; with all three lines.  We need to update the function signature and add a guarding clause to return early if before or after lines are not blank.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;expand_line&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;before&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; line&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; after&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
   Check if line should be expanded then render a template
   &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; before &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;and&lt;/span&gt; after &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; line


    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos; &apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; line &lt;span class=&quot;token keyword&quot;&gt;and&lt;/span&gt; line&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startswith&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; line

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;&amp;lt;a href=&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos; class=&apos;card&apos;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope you liked this walk-through of solving a problem I had with &lt;code class=&quot;language-text&quot;&gt;more-itertools&lt;/code&gt;, If you learned something be sure to share it.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/more-itertools-windowed.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/more-itertools-windowed/.png</cover_image></item><item><title><![CDATA[Adding Audio to my blog posts]]></title><description><![CDATA[This is episode 1 of the Waylon Walker Audio experience, posts from
waylonwalker.com in audio form. So I have had this idea for awhile to…]]></description><link>https://waylonwalker.com/audio-for-blog/</link><guid isPermaLink="false">https://waylonwalker.com/audio-for-blog/</guid><pubDate>Wed, 25 Nov 2020 20:52:22 GMT</pubDate><content:encoded>&lt;iframe src=&quot;https://anchor.fm/waylon-walker/embed/episodes/Launching-Audio-for-the-Blog-en6kof&quot; height=&quot;102px&quot; width=&quot;400px&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;This is episode 1 of the Waylon Walker Audio experience, posts from
&lt;a href=&quot;https://waylonwalker.com&quot;&gt;waylonwalker.com&lt;/a&gt; in audio form.&lt;/p&gt;
&lt;p&gt;So I have had this idea for awhile to add audio to my blog posts.  The idea
partly comes from the aws blog, if you have ever been on their blog you will
have noticed that they have a &lt;em&gt;voiced by amazon polly&lt;/em&gt; section.&lt;/p&gt;
&lt;h2&gt;What to Expect&lt;/h2&gt;
&lt;p&gt;Honestly I don&apos;t know this is all new to me and I dont have much to go off of.
For now its a test that may or may not work out.&lt;/p&gt;
&lt;p&gt;I will say that the time that I have available for clean audio is a bit limited
so expect these to come out in batches as I get time to go back and record.&lt;/p&gt;
&lt;h2&gt;What Not to Expect&lt;/h2&gt;
&lt;p&gt;One thing that makes the aws blog really hard to listen to is the robotic
voice, I definitely don&apos;t want that.  This will be voiced by a real human, Me.
At the same time written text doesn&apos;t translate directly to audio well so don&apos;t
necessarily expect the audio to be
word for word.&lt;/p&gt;
&lt;h2&gt;Code blocks&lt;/h2&gt;
&lt;p&gt;There are a lot of code blocks in my blog, which don&apos;t translate directly into
I will do my best to read short one liners or describe larger blocks, but don&apos;t
expect a boring three minute read of large code blocks.&lt;/p&gt;
&lt;h2&gt;Updates&lt;/h2&gt;
&lt;p&gt;Expect to see these at the top of finished posts once I consider them done.  I
will not likely come back to edit the audio if there is an edit to the post
unless its major.  I will do my best to highlight changes in a note next to the
embeded audio on the post.&lt;/p&gt;
&lt;h2&gt;Lets do this&lt;/h2&gt;
&lt;p&gt;If you like this idea give the posts a listen, share them with your friends,
give me a shout out on twitter
&lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;@_waylonwalker&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/crush-dev-to-posts/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/2c5331cc1e03f772830a1584092d79cf/630fb/crush-dev-to-posts-xmas2020.png&quot; alt=&quot;article cover for How to crush amazing posts on DEV&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;How to crush amazing posts on DEV&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Here are a few of my top tips to help make dev.to posts more readable, and drive better engagement.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;If you enjoyed this post you may enjoy another &quot;meta&quot; post&lt;/p&gt;
&lt;/blockquote&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/audio-for-blog.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/audio-for-blog/.png</cover_image></item><item><title><![CDATA[Expand One Line Links]]></title><description><![CDATA[I wanted a super simple way to cross-link blog posts that require as little effort as possible, yet still looks good in vanilla markdown in…]]></description><link>https://waylonwalker.com/expand-one-line-links/</link><guid isPermaLink="false">https://waylonwalker.com/expand-one-line-links/</guid><pubDate>Wed, 18 Nov 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I wanted a super simple way to cross-link blog posts that require as little effort as possible, yet still looks good in vanilla markdown in GitHub.  I have been using a snippet that puts HTML into the markdown.  While this works, it&apos;s more manual/difficult for me does not look the best, and does not read well as&lt;/p&gt;
&lt;h2&gt;Goals for new card&lt;/h2&gt;
&lt;p&gt;The new card should be fully automated to expand with title, description, and
cover image.  Bonus if I am able to attach a comment behind it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fully automated&lt;/li&gt;
&lt;li&gt;card expansion&lt;/li&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;description&lt;/li&gt;
&lt;li&gt;cover image&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Old Card&lt;/h2&gt;
&lt;p&gt;If you can call it a card 🤣.  This card was just an image wrapped in an anchor tag and a paragraph tag.  I found this was the most consistent way to get an image narrower and centered in both GitHub and dev.to.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token style-attr language-css&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt; &lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&apos;&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token property&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;https://waylonwalker.com/notes/eight-years-cat&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt;&lt;span class=&quot;token style-attr language-css&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&apos;&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;500px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;80%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/eight-years-cat.png&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;My first eight years as a working professional article&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
  &lt;a href=&quot;https://waylonwalker.com/notes/eight-years-cat&quot;&gt;
    &lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/eight-years-cat.png&quot; alt=&quot;My first eight years as a working professional article&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The key here is that I have to put the HTML into the markdown.  It looks a bit dirty while editing and quite frankly it&apos;s a pain to deal with.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;New Card&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;onelinelink&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/eight-years-cat/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt;&lt;span class=&quot;token style-attr language-css&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt; &lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&quot;&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token property&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; right&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;align&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;right&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/static/29cdf6fcfb17d7fd766fc438144fb3e4/630fb/eight-years-cat-xmas2020.png&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;article cover for My first eight years as a working professional.&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;right&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;My first eight years as a working professional.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;description&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    This day 8 years ago I started my first day as a Mechanical Engineer. I am so grateful for this journey that I have been able to have. There is no way that I could have planned this journey from the beginning.
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;read-more&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;read more&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  waylonwalker.com
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/eight-years-cat/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/29cdf6fcfb17d7fd766fc438144fb3e4/630fb/eight-years-cat-xmas2020.png&quot; alt=&quot;article cover for My first eight years as a working professional.&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;My first eight years as a working professional.&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    This day 8 years ago I started my first day as a Mechanical Engineer. I am so grateful for this journey that I have been able to have. There is no way that I could have planned this journey from the beginning.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;h2&gt;First step&lt;/h2&gt;
&lt;p&gt;My first attempt was to make my own transformer for &lt;code class=&quot;language-text&quot;&gt;gatsby-remark-embedder&lt;/code&gt;. I previously set this up on my site for Twitter and YouTube.  I tried to get some custom transformers going, to do what I wanted for my own website, but failed.  I really struggled to understand what data was coming in and out of the transformer.  My lack of js/node debugging skills was really showing.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/gatsby-remark-embedder/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/d84c8333b6cb5760cc36988444e204c4/630fb/gatsby-remark-embedder-xmas2020.png&quot; alt=&quot;article cover for gatsby-remark-embedder&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;gatsby-remark-embedder&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Inspired by discourse&amp;apos;s link expansion I am rolling out expansions for one line links on the blog
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;using gatsby-remark-embedder to expand Twitter/YouTube&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Redirects&lt;/h2&gt;
&lt;p&gt;It also works with redirects. I have a redirect to my &quot;latest&quot; post.  It&apos;s something that I don&apos;t do the best job at keeping up to date, but when I feel really proud of a post I make it the latest.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/minimal-python-package/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/de47aa7ab3bcdcd5f0dade8cdccdddc2/630fb/minimal-python-package-xmas2020.png&quot; alt=&quot;article cover for Minimal Python Package&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Minimal Python Package&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    What does it take to create an installable python package that can be hosted on pypi? What is the minimal python package
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;this post is a redirect to my &quot;latest post&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Client Side&lt;/h2&gt;
&lt;p&gt;I started out by running this card expansion client side. This was the strategy that I used to find the list of elements that should be transformed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get all anchors&lt;/li&gt;
&lt;li&gt;get all paragraphs&lt;/li&gt;
&lt;li&gt;filter paragraphs where the content is one of the links&lt;/li&gt;
&lt;li&gt;filter paragraphs where there is only one element in the paragraph&lt;/li&gt;
&lt;li&gt;filter to paragraphs with links that &lt;code class=&quot;language-text&quot;&gt;shouldTransform&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;These elements should have the &lt;code class=&quot;language-text&quot;&gt;oneLineLinkCard&lt;/code&gt; applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;oneLineLinks&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; linkText &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.post-body p a&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerText
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; paragraphs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.post-body p&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; regex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;^https?:\/\/waylonwalker\.com\/&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;shouldTransform&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; regex&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; anchorOnly &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;paragraphs&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; linkText&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerText&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;childElementCount &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  anchorOnly
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;shouldTransform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;outerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;oneLineLinkCard&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Styles&lt;/h2&gt;
&lt;p&gt;CSS is not my strong suit, but I can generally hammer something into a shape that I am happy with.  For this one, I did struggle a bit with how it looked on various screens, particularly because I was holding the cover image size to a hard 300px.  I ended up with more media queries than I needed, but it works.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.onelinelink + blockquote&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -6rem auto 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 3rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1px solid goldenrod&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;border-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2px solid goldenrod&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 350px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .4rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .4rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 800px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 600px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 900px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1000px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 800px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 15px/45px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token selector&quot;&gt;.onelinelink&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 4rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2px solid &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 50&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 50&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 50&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 50&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .015&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #262236&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 8px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 126px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 800px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 800px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 4rem auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token selector&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -1.2rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;postition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .8rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token selector&quot;&gt;.right&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px 15px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token selector&quot;&gt;.description&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1.2rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;100% - 31px - 1rem&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token selector&quot;&gt;.url&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;padding-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 30px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; right&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #262236&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;token selector&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 126px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 8px 0 0 8px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token selector&quot;&gt;.read-more&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .6rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .08&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Final Look&lt;/h3&gt;
&lt;p&gt;On mobile, it renders vertically.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/one-line-link-vertical.png&quot; alt=&quot;mobile&quot;&gt;&lt;/p&gt;
&lt;p&gt;On desktop, it renders horizontally.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/one-line-link-horizontal.png&quot; alt=&quot;desktop&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Expansion&lt;/h2&gt;
&lt;p&gt;I&apos;m sure that all of this can be better, my js skills are still forming.  It&apos;s quite humbling to see how hard it is to think in an unfamiliar language.  The following &lt;code class=&quot;language-text&quot;&gt;oneLineLineCard&lt;/code&gt; renders a string template literal from a paragraph with a single anchor to a card that contains some of that pages meta information.  The
getDescription` function uses a fetch to get the metadata right from the content of the page.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;getDescription&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; parser &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DOMParser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; doc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; parser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parseFromString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;text/html&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; meta &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; doc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;meta&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; description &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;og:description&apos;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;og:image&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;content
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sm_image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;og:sm_image&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;content
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;og:url&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;content
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; title &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;content
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; description&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; image&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sm_image &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;oneLineLinkCard&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDescription&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
      &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;a class=&quot;onelinelink&quot; href=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;url&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&gt;
  &amp;lt;img src=&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sm_image &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sm_image &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;image &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;image &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos; alt=&apos;cover image for &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&gt;
  &amp;lt;div class=&quot;right&quot;&gt;
    &amp;lt;h2&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;/h2&gt;
    &amp;lt;p class=&apos;description&apos;&gt;
      &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; meta&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
    &amp;lt;/p&gt;
    &amp;lt;p class=&quot;url&quot;&gt;
       &amp;lt;span class=&apos;read-more&apos;&gt;read more&amp;lt;/span&gt;  waylonwalker.com
    &amp;lt;/p&gt;
  &amp;lt;/div&gt;

&amp;lt;/a&gt;
  &lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;It works...&lt;/h2&gt;
&lt;p&gt;And it works.  Whenever I reference my own blog with just a single link on a line in markdown I get a nice card link out to the other post, with a small image sized for the card, the title, and the description of the post.&lt;/p&gt;
&lt;h2&gt;But&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;too much client-side&lt;/li&gt;
&lt;li&gt;does not work well with cross-posting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For every link I do this with the client will pull the full page just to get a bit of metadata.  I am already doing a bit more than I want to do client-side for a blog, so I would prefer to do it ahead of time.&lt;/p&gt;
&lt;p&gt;Additionally, since it is done client-side it does not translate well when I copy my markdown to various other blogging platforms.  If it were rendered right into the markdown cross-posting would be much easier.&lt;/p&gt;
&lt;h2&gt;Future State&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;actually already implemented at this point&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The direction I am going to try is to use python to load each post, look for lines that contain only a link, then render this same markup right in the markdown.  For this I am going to use a language I am more familiar with, python, and do this inside of GitHub actions just before build time so that the markdown I write stays the same, the cards will only be rendered in prod.&lt;/p&gt;
&lt;h2&gt;Why Python 🐍&lt;/h2&gt;
&lt;p&gt;Python is my every day what I know, I work much more efficiently and cleanly with it.  Also the more I blog the more abstractions I am seeing and the lazier I am getting.  Things like description, SEO, cover images are all getting automated. Gatsby really doesn&apos;t like to run when some of those things are missing, probably due to my lack of JS error handling skills.  I find it much easier to load up all the pages and patch up the frontmatter in python before
build time.&lt;/p&gt;
&lt;p&gt;I am kinda curious if eventually, I can re-create everything I need in python because I am honestly not using react for much more than a glorified templating system, besides search.  If I can pre-render everything in python&lt;/p&gt;
&lt;h2&gt;What do you think??&lt;/h2&gt;
&lt;p&gt;Do they look good?  Could they be better?&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/expand-one-line-links.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/expand-one-line-links/.png</cover_image></item><item><title><![CDATA[gatsby-remark-embedder]]></title><description><![CDATA[Inspired by discourse's link expansion I am rolling out expansions for one line
links on the blog waylonwalker.  I was able to find
a gatsby…]]></description><link>https://waylonwalker.com/gatsby-remark-embedder/</link><guid isPermaLink="false">https://waylonwalker.com/gatsby-remark-embedder/</guid><pubDate>Wed, 18 Nov 2020 05:00:00 GMT</pubDate><content:encoded>&lt;iframe src=&quot;https://anchor.fm/waylon-walker/embed/episodes/gatsby-remark-embedder-en6l3j&quot; height=&quot;102px&quot; width=&quot;400px&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Inspired by discourse&apos;s link expansion I am rolling out expansions for one line
links on the blog &lt;a href=&quot;https://waylonwalker.com&quot;&gt;waylonwalker&lt;/a&gt;.  I was able to find
a gatsby plugin
&lt;a href=&quot;https://www.gatsbyjs.com/plugins/gatsby-remark-embedder/?=embed&quot;&gt;gatsby-remark-embedder&lt;/a&gt;
that expands one line links for social cards for popular platforms like twitter
and YouTube through a repose from Kyle Mathews to my tweet.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;und&quot; dir=&quot;ltr&quot;&gt;yes! &lt;a href=&quot;https://t.co/IKmXijS9IT&quot;&gt;https://t.co/IKmXijS9IT&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kyle Mathews (@kylemathews) &lt;a href=&quot;https://twitter.com/kylemathews/status/1329817928666005504?ref_src=twsrc%5Etfw&quot;&gt;November 20, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;h2&gt;Use Cases&lt;/h2&gt;
&lt;p&gt;This covers a couple of use cases I have with very little effort.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;YouTube&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;install&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; i gatsby-remark-embedder gatsby-plugin-twitter&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This was super quick and simple to setup, the only thing that was extra was to
install the &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-twitter&lt;/code&gt; plugin as well as the
&lt;code class=&quot;language-text&quot;&gt;gatsby-remark-embedder&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;enable&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// In your gatsby-config.js&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Find the &apos;plugins&apos; array&lt;/span&gt;
  plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;gatsby-plugin-twitter&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;gatsby-transformer-remark&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            resolve&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;gatsby-remark-embedder&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            options&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
              customTransformers&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;token comment&quot;&gt;// Your custom transformers&lt;/span&gt;
              &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
              services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token comment&quot;&gt;// The service-specific options by the name of the service&lt;/span&gt;
              &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

          &lt;span class=&quot;token comment&quot;&gt;// Other plugins here...&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thats it, now I can embed tweets and YouTube videos by just leaving the link on a single line.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/gatsby-remark-embedder.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/gatsby-remark-embedder/.png</cover_image></item><item><title><![CDATA[Find and Replace in the Terminal.]]></title><description><![CDATA[grepr grepd CocSearch]]></description><link>https://waylonwalker.com/find-replace/</link><guid isPermaLink="false">https://waylonwalker.com/find-replace/</guid><pubDate>Thu, 12 Nov 2020 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;grepr&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep -iRl &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s/&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;/g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

```bash
&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep -iRl &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s/&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;/g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;grepd&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;grepd&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;iRl &lt;span class=&quot;token string&quot;&gt;&quot;$1&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; xargs sed &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;i &lt;span class=&quot;token string&quot;&gt;&quot;/^$1/d&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;CocSearch&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;:CocSearch status: &lt;span class=&quot;token string&quot;&gt;&apos;false&apos;&lt;/span&gt; -g *.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/find-replace.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/find-replace/.png</cover_image></item><item><title><![CDATA[Resume Tips]]></title><description><![CDATA[customize for the job Why are you a good fit? What will you bring to the role? Give real outcomes give real experience Stop tech vomiting if…]]></description><link>https://waylonwalker.com/resume-tips/</link><guid isPermaLink="false">https://waylonwalker.com/resume-tips/</guid><pubDate>Fri, 06 Nov 2020 06:00:00 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;customize for the job&lt;/li&gt;
&lt;li&gt;Why are you a good fit?&lt;/li&gt;
&lt;li&gt;What will you bring to the role?&lt;/li&gt;
&lt;li&gt;Give real outcomes&lt;/li&gt;
&lt;li&gt;give real experience&lt;/li&gt;
&lt;li&gt;Stop tech vomiting&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if you link to GitHub&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make a profile readme&lt;/li&gt;
&lt;li&gt;Guide me to your best work&lt;/li&gt;
&lt;li&gt;have some activity&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if you link to LinkedIn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide some benefit that is not on your resume&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Have a logical flow of experience (dont make me hunt for past experience)&lt;/li&gt;
&lt;li&gt;Keep it under 2 pages&lt;/li&gt;
&lt;li&gt;Who you know.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reference real experience&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deployed 12 data pipelines with over 500 nodes to process 200GB of data at a Fortune 100 company&lt;/li&gt;
&lt;li&gt;vs&lt;/li&gt;
&lt;li&gt;Knowledge of Data Engineering methodology with python EC2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dont be so fluffy&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/resume-tips.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/resume-tips/.png</cover_image></item><item><title><![CDATA[Codeit Bro Interview]]></title><description><![CDATA[profile image use this profile image Please share your professional role as a data scientist? [Also feel free to
share about your personal…]]></description><link>https://waylonwalker.com/codeit-bro-interview/</link><guid isPermaLink="false">https://waylonwalker.com/codeit-bro-interview/</guid><pubDate>Mon, 02 Nov 2020 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/profile.jpg&quot; alt=&quot;profile image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;use this profile image&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Please share your professional role as a data scientist? [Also feel free to
share about your personal projects, publications, etc.]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I graduated with a Mechanical Engineering Degree 8 years ago.  Much of my work
&lt;a href=&quot;https://waylonwalker.com/eight-years-cat&quot;&gt;early in my career&lt;/a&gt; was wrapped
around analyzing larger datasets for my group to understand quality, drive
changes to improve quality or prove that quality was already good.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/eight-years-cat&quot;&gt;
&lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/eight-years-cat.png&quot; alt=&quot;My first eight years as a working professional article&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Three years ago I made the switch to Data Science and have loved every minute of
it.  It is a very dynamic field that is continually changing and there are
always a new set of skills to learn and hone in on.  I talk a lot about the
mindset of always learning, sharing knowledge, and communicating in my
&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What are the most difficult challenges you faced as a data scientist and how
you resolved them?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Deployment is a high bar to enter.  Jupyter notebooks provide a suspiciously simple start into Data Science.  Folks with very little coding experience can easily get up and running and start bringing value back into their organization, but as you want to start sharing these notebooks, re-using components of them, and scheduling them to run autonomously the bar is raised very quickly.  Many places will have teams dedicated to each piece of the process, but all too often if you want your project to be successful you have to step out of your comfort zone and do much of it yourself.&lt;/p&gt;
&lt;p&gt;Getting started in Data Science&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Going to production&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;packaging&lt;/li&gt;
&lt;li&gt;creating cli&apos;s&lt;/li&gt;
&lt;li&gt;linux&lt;/li&gt;
&lt;li&gt;bash&lt;/li&gt;
&lt;li&gt;cron&lt;/li&gt;
&lt;li&gt;CI/CD&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;li&gt;Pipelines&lt;/li&gt;
&lt;li&gt;Schedulers/orchestration&lt;/li&gt;
&lt;li&gt;Virtual Machines&lt;/li&gt;
&lt;li&gt;hosting docs&lt;/li&gt;
&lt;li&gt;hosting models/apis&lt;/li&gt;
&lt;li&gt;Visualizations&lt;/li&gt;
&lt;li&gt;Databases&lt;/li&gt;
&lt;li&gt;blob storage&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;What are the most required skills for a data scientist?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;li&gt;project Estimation&lt;/li&gt;
&lt;li&gt;Subject Matter Expertise&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A good understanding of the business problems you are trying to solve.  This
requires very good communication between Subject matter experts and the Data
Science team.&lt;/p&gt;
&lt;p&gt;For the technical side, python is the core skill that I stick with.  As I said
before this quickly starts to grow as you start needing to take projects into
production.  Learning how to write good python efficiently without needing to
look up much really frees up your brain to focus on the harder challenge of
solving the problem at hand.&lt;/p&gt;
&lt;p&gt;Learn how to frame up your problem ahead of time and be flexible in just the
right ways.&lt;/p&gt;
&lt;p&gt;Let&apos;s make up a fictitious transportation company that is split into a number of divisions for car, train, bus, etc.  All too often I see projects setup as a pilot for the car division, or even a micro subset of the car division.  The proof of concept takes off, and now we need to expand the project from one city to a whole region, but since the city was hard coded in it makes it really hard to expand. After a few months we have a lot of copy and paste code and at some point it becomes nearly impossible to make any changes without needing to change everything, or expand to new regions or divisions. Understand the inputs to your problem set early on and plan for them to change.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How a beginner can create a roadmap to become a successful data scientist in
the present scenario?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Someone who is currently working in any sort of role that involves manipulating data in excel can get their foot in the door by automating the work their team does in python, or visualizing it in a more powerful tool.&lt;/p&gt;
&lt;p&gt;You will quickly find that you can handle much more data than spreadsheet tools can, you can start expanding projects to utilize more data, or use that extra free time to find new insights you didn&apos;t have time for before.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How much Maths is required to be a good data scientist? [You can also share
which concepts should everyone focus on more]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have a lot of math background from my Mechanical Engineering degree that I haven&apos;t use in years.&lt;/p&gt;
&lt;p&gt;To be clear I am not generally building models in my day to day.  My role kind
of sits between Data Engineering and MLOps these days.  I scaffold up new
projects for the team, take on more complex data pipelining projects, and own
our whole deployment system.  None of this really requires advanced math on a
day to day basis.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What are some concepts that everyone should know more&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linters.  They are so easy to run that no one should be bad code that fails
linting these days.  You can set them to run from your favorite editor, the
command line, in a git commit, from GitHub Actions, or an Azure pipeline, just
figure out the ones that fit you and run them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Will data science be replaced by AI?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Everything that we see today will be different in the future whether replaced by
AI or the next hot topic.  There might be subsets of our work that is completely
automated away.  I think it will be a great opportunity to focus our minds on
more difficult things that AI cannot.  Data Science is a relatively new field,
be ready for it to change and move with it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Words of advice for people without a Computer Science background?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can do it, there are more folks out there crushing Data Science and Software Engineering in general without a Computer Science background than you realize. Don&apos;t let the imposter syndrome get to you.  Keep honing your skills and be confident.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be flexible&lt;/li&gt;
&lt;li&gt;Always be open and ready for change&lt;/li&gt;
&lt;li&gt;Never stop learning&lt;/li&gt;
&lt;li&gt;Keep a positive attitude&lt;/li&gt;
&lt;li&gt;Be kind to others&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Tell us about your journey towards becoming a successful data scientist?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;see Q1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Which tools you use for Data Science and which one do you recommend for
beginners?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a beginner definitely focus on a minimal number of things at a time.  As you go through the journey of learning anything you will likely to see articles that tell you that your tech of choice is dead and should never be used because some new hotness it so much better.  Focus on skills that have a real job market and solve real problems don&apos;t worry so much about it that you never learn one.&lt;/p&gt;
&lt;p&gt;Python is my core skill, it can do so much so quickly and has a very strong ecosystem in data.&lt;/p&gt;
&lt;p&gt;A skill I would add in general is to deploy early.  Too often we spend months on prototypes that need rewritten for the prod environment, when they could have just been written for prod from the beginning while ci tooling could have kept the project cleaner and easier to work with.  Whether its GitHub actions or Azure Pipelines CI/CD is cheaper and easier to setup than ever.  There is a fluid movement that happens when you are working with clean code along the way rather than cleaning it up after its all done.  Simplifying your work opens up mental space to put more focus on your problem at hand.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/what-are-github-actions&quot;&gt;
&lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/what-are-github-actions.png&quot; alt=&quot;introductory article to GitHub actions&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;check out this article about github actions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Is data science a stressful job?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It definitely can be if you let it.  Manage expectations and scope creep well and you will be fine.  My most stressful times have probably been when I over committed to something and it was my own fault for setting myself up for stress.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What type of problems you faced every day as a data scientist?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At a high level the business I support remanufactures ( similar to recycling ) parts for heavy equipment.  I find ways to re-use more core material to save cost and reduce emissions.  A lot of what I do is solving business problems with code.  This might be a problem that has been solved by hand for a small focused subset of a population and expanding it to everything.  More and more of my time is being dedicated to coaching.  Whether in the form of code review, pair programming, or general mentoring.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/codeit-bro-interview.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/codeit-bro-interview/.png</cover_image></item><item><title><![CDATA[reasons-to-kedro]]></title><description><![CDATA[There are many reasons that you should be using kedro.  If you are on a team of
Data Scientists/Data Engineers processing DataFrames from…]]></description><link>https://waylonwalker.com/reasons-to-kedro/</link><guid isPermaLink="false">https://waylonwalker.com/reasons-to-kedro/</guid><pubDate>Sun, 01 Nov 2020 05:00:00 GMT</pubDate><content:encoded>&lt;iframe src=&quot;https://anchor.fm/waylon-walker/embed/episodes/reasons-to-kedro-en6kr3&quot; height=&quot;102px&quot; width=&quot;400px&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;There are many reasons that you should be using kedro.  If you are on a team of
Data Scientists/Data Engineers processing DataFrames from many data sources
should be considering a pipeline framework.  Kedro is a great option that
provides many benefits for teams to collaborate, develop, and deploy data
pipelines&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/what-is-kedro/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/27debd76b7282c6a93060e9eb66ba0b8/630fb/what-is-kedro-xmas2020.png&quot; alt=&quot;article cover for What is Kedro&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;What is Kedro&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Kedro is an open source data pipeline framework.  It provides guardrails to set your project up right from the start without needing to know deeply how to setup your own python library for data pipelining.  It includes really great ways to manipulate `catalogs` and `pipelines`.  This article will cover the 10K view of kedro, future articles will dive deper into each one.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;h2&gt;Starter Template&lt;/h2&gt;
&lt;p&gt;Kedro makes it super easy to get started with their cli that utilizes
cookiecutter under the hood.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n my-new-project -y &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt;
kedro new
kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;
kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/create-new-kedro-project/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/499424b4636332a0ca68d4984b83705e/630fb/create-new-kedro-project-xmas2020.png&quot; alt=&quot;article cover for Create New Kedro Project&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Create New Kedro Project&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Getting up and going with a brand new [kedro](https://kedro.readthedocs.io) project is super simple, thanks to the help of the `kedro new` command.  The ability to add an example pipeline from the start makes it that much easier to get going and have a template to follow for your own projects.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;read more about how to start your first kedro project here&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Collaboration&lt;/h2&gt;
&lt;p&gt;Kedro provides many tools that help teams collaborate on a single codebase.
While writing monolithic scripts it can be easy to pin yourself in a corner
where it is difficult to have multiple people making changes to the
notebook/script at the same time.  Kedro helps guide your team to break your
project down into small pieces that different members of the team can work on
in parallel.&lt;/p&gt;
&lt;h3&gt;sharable catalog&lt;/h3&gt;
&lt;p&gt;Kedro makes it easy to collaborate with members who aren&apos;t even working on the
pipeline.  I often see team members who want to investigate datasets from
different points in the pipeline.  Kedro makes it really easy for them to load
it into python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;for python users&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Share catalog entries with folks doing EDA.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;main_table&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;for non-python users&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For those who may not be using python, we can easily kick out a CSV version of
that &lt;code class=&quot;language-text&quot;&gt;main_table&lt;/code&gt; that they can get from s3 or your cloud storage solution of
choice.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;master_table&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; s3&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//bucket/data/03_primary/master_table.csv
  &lt;span class=&quot;token key atrule&quot;&gt;layer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; primary&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;for the SQL folks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We aren&apos;t even constrained to those who only use python or excel, we can kick
out any kind of dataset that python can output.  Kedro even comes with many
DataSet types out of the box so that we don&apos;t have to write any read/write
code.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;master_table&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; SQLTableDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; master_table
  &lt;span class=&quot;token key atrule&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; postgres&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;small nodes over monolithic scripts&lt;/h3&gt;
&lt;p&gt;As I said before single notebooks/scripts are really hard to collaborate on.  I
have seen Data Engineers sitting idle waiting to get their changes manually
added into the master notebook.  When you find yourself in this situation, find
a better solution.  It&apos;s time to break things down into individual modules and
utilize a version control system that can automatically merge changes in.&lt;/p&gt;
&lt;p&gt;Kedro encourages the use of git version control and storing all node functions
inside of modules while still making it really easy to load data into a
notebook/shell and start trying out new things.&lt;/p&gt;
&lt;h2&gt;No More read and write code&lt;/h2&gt;
&lt;p&gt;As I said earlier kedro comes with datasets for the most popular output
formats.  It is also backed by a really amazing library called &lt;code class=&quot;language-text&quot;&gt;fsspec&lt;/code&gt;, this
library makes the filesystem that you are storing agnostic to how you write to
it.  This means that the kedro library utilizes &lt;code class=&quot;language-text&quot;&gt;fsspec&lt;/code&gt; under the hood and
writes to the file as if it was to disk, but based on the prefix to the file it
may actually be writing to the local filesystem, gcp, azure blob, or s3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;custom DataSets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If kedro does not have a &lt;code class=&quot;language-text&quot;&gt;DataSet&lt;/code&gt; for the format that you need to read or
write you can easily create your own custom &lt;code class=&quot;language-text&quot;&gt;DataSet&lt;/code&gt;  all you need to do is
inherit from &lt;code class=&quot;language-text&quot;&gt;kedro.io.AbstractDataSet&lt;/code&gt; and create methods for &lt;code class=&quot;language-text&quot;&gt;__init__&lt;/code&gt;,
&lt;code class=&quot;language-text&quot;&gt;_load&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;_save&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;_exists&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;_describe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Check out this example from their docs.  I removed the docstrings for brevity,
you can see the entire &lt;code class=&quot;language-text&quot;&gt;DataSet&lt;/code&gt; in their
&lt;a href=&quot;https://kedro.readthedocs.io/en/0.15.2/03_tutorial/03_set_up_data.html?highlight=custom%20dataset#creating-custom-datasets&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The complete example all in one was only available in an older version, more up to date &lt;a href=&quot;https://kedro.readthedocs.io/en/0.16.6/07_extend_kedro/01_custom_datasets.html?highlight=custom%20dataset&quot;&gt;docs&lt;/a&gt; have a good writeup that walks through everything separately.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; isfile
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; typing &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Any&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Union&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Dict

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd

&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; AbstractDataSet

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ExcelLocalDataSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;AbstractDataSet&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_describe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Any&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_filepath&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                    engine&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_engine&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                    load_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_load_args&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                    save_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_save_args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        filepath&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        engine&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;xlsxwriter&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        load_args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Any&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        save_args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Any&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;

        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_filepath &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; filepath
        default_save_args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        default_load_args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;engine&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;xlrd&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_load_args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;default_load_args&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;load_args&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; \
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; load_args &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; default_load_args
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_save_args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;default_save_args&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;save_args&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; \
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; save_args &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; default_save_args
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_engine &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; engine

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_load&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Union&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_excel&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_filepath&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_load_args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        writer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExcelWriter&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_filepath&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; engine&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_engine&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_excel&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;writer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_save_args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        writer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_exists&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; isfile&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_filepath&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Execution order is taken care of&lt;/h2&gt;
&lt;p&gt;As you build up complex pipelines containing 10&apos;s or 100&apos;s of nodes it becomes
difficult to splice in new nodes/steps without messing up or a framework to
help.  Kedro simply needs a set of nodes that each takes in catalog entries as
input and output to catalog entries and it will figure out the order for you.&lt;/p&gt;
&lt;p&gt;These nodes can be made for one-off purposes, take in functions from reusable
libraries, and even be dynamically generated from a configuration.  There is
no need to worry about hand curating the execution order, that&apos;s all taken care
of.&lt;/p&gt;
&lt;h2&gt;Easily slice up a pipeline&lt;/h2&gt;
&lt;p&gt;Since kedro is a DAG that takes in a pile of nodes and figures out all of the
dependencies for you it knows a lot about your pipeline.  You can slice it up to
only the specific pieces that you need.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# single nodes&lt;/span&gt;
pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;node1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# single nodes and all of thier dependencies&lt;/span&gt;
pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_nodes&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;node1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;node2&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# from a dataset to all of its dependants&lt;/span&gt;
pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;from_inputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;dataset1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;dataset2&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# to a an outputs with all of its dependencies&lt;/span&gt;
pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_outputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;dataset6&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;dataset7&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;plugins/hooks&lt;/h2&gt;
&lt;p&gt;Creating your own modifications to how kedro behaves is made really simple
through the use of hooks.  There are several hooks that happen at different
points in the kedro lifecycle.  For instance, you can hook in before pipeline
run or after pipeline run to do whatever your project needs.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/creating-the-kedro-preflight-hook/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.comundefined&quot; alt=&quot;article cover for creating the kedro-preflight hook&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;creating the kedro-preflight hook&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Kedro Hooks Intro - kedro hooks are an exciting upcoming feature of kedro `0.16.0`.  They allow you to hook into `catalog_created`,`pipeline_run`, and `node_run`(nouns). With a `before`, or `after` (adjective).  This really reminds me of reacts lifecycle hooks, that let you hook into various state of react web components.  This is going to make kedro so extendable by the community.  I am super pumped to see what the community is able to do with this ability.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;h3&gt;pip install plugin&lt;/h3&gt;
&lt;p&gt;There is a growing list of plugins available from pypi that is only a &lt;code class=&quot;language-text&quot;&gt;pip
install&lt;/code&gt; away.  Most of them are on
&lt;a href=&quot;https://github.com/topics/kedro-plugin&quot;&gt;GitHub&lt;/a&gt; and tagged as a
&lt;a href=&quot;https://github.com/topics/kedro-plugin&quot;&gt;kedro-plugin&lt;/a&gt; topic.&lt;/p&gt;
&lt;h2&gt;flexible cli&lt;/h2&gt;
&lt;p&gt;In the end, you have a cli for your project that can run your pipeline in all
sorts of cool ways since it knows about each node&apos;s dependencies.  This makes
running and scheduling production a breeze.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# single nodes&lt;/span&gt;
kedro run --node node1

&lt;span class=&quot;token comment&quot;&gt;# single nodes and all of their dependencies&lt;/span&gt;
kedro run --to-nodes node1,node2 

&lt;span class=&quot;token comment&quot;&gt;# from a dataset to all of its dependents&lt;/span&gt;
kedro run --from-inputs dataset1,dataset2

&lt;span class=&quot;token comment&quot;&gt;# to outputs with all of their dependencies&lt;/span&gt;
kedro run --to-outputs dataset6,dataset7&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Try it out&lt;/h2&gt;
&lt;p&gt;Hopefully this post gave you the inspiration to get started today, if it did &lt;code class=&quot;language-text&quot;&gt;pip install kedro&lt;/code&gt; and run &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; to try it out.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/reasons-to-kedro.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/reasons-to-kedro/.png</cover_image></item><item><title><![CDATA[Reasons to Kedro]]></title><description><![CDATA[Reasons to Kedro collaboration Sharable catalog small nodes over monolithic notebooks catalog easily load anything without needing to run No…]]></description><link>https://waylonwalker.com/reasons-to-kedro-notes/</link><guid isPermaLink="false">https://waylonwalker.com/reasons-to-kedro-notes/</guid><pubDate>Sat, 31 Oct 2020 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Reasons to Kedro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;collaboration&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sharable catalog&lt;/li&gt;
&lt;li&gt;small nodes over monolithic notebooks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;catalog&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easily load anything without needing to run&lt;/li&gt;
&lt;li&gt;No need to write read/write code&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pipeline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No need to keep execution order in your head&lt;/li&gt;
&lt;li&gt;easily run a slice of a pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;plugins&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pip install&lt;/li&gt;
&lt;li&gt;make your own&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;hooks&lt;/li&gt;
&lt;li&gt;flexible expandable cli&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Reasons Not to Kedro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Already utilizing another DAG framework&lt;/li&gt;
&lt;li&gt;Data is not in a widely supported format&lt;/li&gt;
&lt;li&gt;Micro short-lived project&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Large Project / Deadline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use a lower profile project to learn first&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Team not willing to change&lt;/li&gt;
&lt;li&gt;Need minimal dependencies&lt;/li&gt;
&lt;li&gt;God Project - kedro owns everything??&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/reasons-to-kedro-notes.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/reasons-to-kedro-notes/.png</cover_image></item><item><title><![CDATA[Reading List]]></title><description><![CDATA[STOP LEAVING Browser Tabs open and save them here! Jungle Scout - Kedro Case Study Kedro Sessions Julia Evans - A few things I've learned…]]></description><link>https://waylonwalker.com/reading-list/</link><guid isPermaLink="false">https://waylonwalker.com/reading-list/</guid><pubDate>Wed, 28 Oct 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;STOP LEAVING Browser Tabs open and save them here!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jungle Scout - &lt;a href=&quot;https://junglescouteng.medium.com/jungle-scout-case-study-kedro-airflow-and-mlflow-use-on-production-code-150d7231d42e&quot;&gt;Kedro Case Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro/commit/b42845e2e9a6d96e395a5a6f75980ef55c24fddc&quot;&gt;Kedro Sessions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Julia Evans - &lt;a href=&quot;https://jvns.ca/blog/2020/10/28/a-few-things-i-ve-learned-about-email-marketing/&quot;&gt;A few things I&apos;ve learned about email marketing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git course - &lt;a href=&quot;https://www.katacoda.com/courses/git/1&quot;&gt;katacoda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/reading-list.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/reading-list/.png</cover_image></item><item><title><![CDATA[What's New in Kedro 0.16.6]]></title><description><![CDATA[Kedro 0.16.6 is out! Let's take a look through the release notes Deployment Docs This is really exciting to see more deployment options…]]></description><link>https://waylonwalker.com/whats-new-in-kedro-0166/</link><guid isPermaLink="false">https://waylonwalker.com/whats-new-in-kedro-0166/</guid><pubDate>Sun, 25 Oct 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Kedro &lt;a href=&quot;https://github.com/quantumblacklabs/kedro/releases&quot;&gt;0.16.6&lt;/a&gt; is out! Let&apos;s take a look through the release notes&lt;/p&gt;
&lt;h2&gt;Deployment Docs&lt;/h2&gt;
&lt;p&gt;This is really exciting to see more deployment options coming from the kedro team. It really shows the power of the framework. The power of some of these orchestrations options is incredible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kedro.readthedocs.io/en/stable/10_deployment/04_argo.html&quot;&gt;Argo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kedro.readthedocs.io/en/stable/10_deployment/05_prefect.html&quot;&gt;Prefect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kedro.readthedocs.io/en/stable/10_deployment/06_kubeflow.html&quot;&gt;Kubeflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kedro.readthedocs.io/en/stable/10_deployment/07_aws_batch.html&quot;&gt;Batch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kedro.readthedocs.io/en/stable/10_deployment/08_aws_sagemaker.html&quot;&gt;SageMaker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of them hinge on a sweet combination of the kedro cli, docker image, and the pipeline knowing your nodes dependencies. &lt;/p&gt;
&lt;p&gt;Argo, Prefect, and Kubeflow have an interesting technique where they translate the pipeline and its dependencies from kedro to their language.&lt;/p&gt;
&lt;p&gt;Batch uses the aws cli to submit jobs, one node per job, and listen for them to complete. It will submit all nodes with completed dependencies at once, meaning that we can get some massive parallelization.&lt;/p&gt;
&lt;p&gt;I did a quick and dirty test of one of these by simulating the technique in a bash script and saw a 40 hr pipeline finish in about 1 hour. I am excited to get this working in my production workflow.&lt;/p&gt;
&lt;h2&gt;Spaceflight starter&lt;/h2&gt;
&lt;p&gt;They have officially added the spaceflights pipeline as a starter. I have not yet had a chance to try this out, but I anticipate this will be a great pipeline to teach from as it is a bit more complex than the iris pipeline. &lt;/p&gt;
&lt;p&gt;I tell folks all the time the best way to learn something new like kedro is to &lt;strong&gt;practice, practice, practice&lt;/strong&gt;. Having this at their fingertips will give an easy way to fire up a pipeline that is ok to break try out some new ideas and leave it. I see this helping me testing out plugins on more complex pipelines and writing blog posts with examples that readers can more easily follow along with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;practice&lt;/li&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;li&gt;blog posts&lt;/li&gt;
&lt;li&gt;tutorials&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Better Error Messages&lt;/h2&gt;
&lt;p&gt;Shameless pug, my PR landed in kedro, but fell off of the release.md in a merge issue. I was frustrated working on large projects when the wrong arguments were passed into a node and it did not give you any information in the Error to figure out where the error was thrown. Now it will at least give the name of the function that caused the error. This was a simple fix as all of the information was already there.&lt;/p&gt;
&lt;h2&gt;Overall&lt;/h2&gt;
&lt;p&gt;Love the progress that the project is seeing and the focus on all of the deployment options.&lt;/p&gt;
&lt;h2&gt;Thanks for supporting contributions&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/deepyaman&quot;&gt;Deepyaman Datta&lt;/a&gt;, &lt;a href=&quot;https://github.com/bnmerchant&quot;&gt;Bhavya Merchant&lt;/a&gt;, &lt;a href=&quot;https://github.com/Lovkush-A&quot;&gt;Lovkush Agarwal&lt;/a&gt;, &lt;a href=&quot;https://github.com/vhawk19&quot;&gt;Varun Krishna S&lt;/a&gt;, &lt;a href=&quot;https://github.com/sebastianbertoli&quot;&gt;Sebastian Bertoli&lt;/a&gt;, &lt;a href=&quot;https://github.com/noklam&quot;&gt;noklam&lt;/a&gt;, &lt;a href=&quot;https://github.com/djpetti&quot;&gt;Daniel Petti&lt;/a&gt;, &lt;a href=&quot;https://github.com/waylonwalker&quot;&gt;Waylon Walker&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/whats-new-in-kedro-0166.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/whats-new-in-kedro-0166/.png</cover_image></item><item><title><![CDATA[A brain dump of stories]]></title><description><![CDATA[I started making stories as kind of a brain dump a few times per day and posting them to LinkedIn(https://www.linkedin.com/in/waylonwalker…]]></description><link>https://waylonwalker.com/stories_10-10-2020_10-21-2020/</link><guid isPermaLink="false">https://waylonwalker.com/stories_10-10-2020_10-21-2020/</guid><pubDate>Wed, 21 Oct 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I started making stories as kind of a brain dump a few times per day and posting them to [LinkedIn](&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/(https://www.linkedin.com/in/waylonwalker/)&quot;&gt;https://www.linkedin.com/in/waylonwalker/(https://www.linkedin.com/in/waylonwalker/)&lt;/a&gt;.  Here are the last 11 days of stories.&lt;/p&gt;
&lt;p&gt;I store all the stories on my website with the hopes of doing something with them on my own platform eventually. For now it makes it easy to make these posts.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; static/stories
&lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; -I &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;![](https://waylonwalker.com/stories/{})&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Stories 10-10-2020 - 10-21-2020&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/stories/TIL-kedro-sorts-nodes.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/TIL-kedro-sorts-nodes.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/disable-base-pip.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/disable-base-pip.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/discovered-social-cards.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/discovered-social-cards.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/find-kedro-de1-contributor.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/find-kedro-de1-contributor.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/hacktoberfest-2020-kedro-538-tests-pass.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/hacktoberfest-2020-kedro-538-tests-pass.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/itertools.product-cars-regions.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/itertools.product-cars-regions.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/kedro-run-only-missing.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/kedro-run-only-missing.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/new-post-designing-kedro-router.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/new-post-designing-kedro-router.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/power-is-nothing-without-control.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/power-is-nothing-without-control.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/progress-over-perfection-comment.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/progress-over-perfection-comment.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/quick-tdb.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/quick-tdb.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/running-ci-for-hacktoberfest-kedro.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/running-ci-for-hacktoberfest-kedro.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/three-ds-openings.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/three-ds-openings.png&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://waylonwalker.com/stories/use-venv.png&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/stories/use-venv.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/stories_10-10-2020_10-21-2020.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/stories_10-10-2020_10-21-2020/.png</cover_image></item><item><title><![CDATA[Fix git commit author]]></title><description><![CDATA[I was 20 commits into a hackoberfest PR when I suddenly realized they they all had my work email on them instead of my personal email…]]></description><link>https://waylonwalker.com/fix-git-commit-author/</link><guid isPermaLink="false">https://waylonwalker.com/fix-git-commit-author/</guid><pubDate>Sat, 17 Oct 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I was 20 commits into a hackoberfest PR when I suddenly realized they they all had my work email on them instead of my personal email 😱.  This is the story of how I corrected my email address on 19 individual commits after already submitting for a PR.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#change-the-email-for-this-repo&quot;&gt;Change the email for this repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#prepare-for-rebasing&quot;&gt;Prepare for rebasing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#start-the-rebase&quot;&gt;start the rebase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#fix-first-wrong-commit&quot;&gt;🛠 Fix First wrong Commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#fix-all-commits&quot;&gt;Fix all commits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#done&quot;&gt;Done&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#recap&quot;&gt;ReCap&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Change the email for this repo&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;stop the bleeding&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before anything else set the email correctly!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; kedro
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config user.name &lt;span class=&quot;token string&quot;&gt;&quot;Waylon Walker&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config user.email quadmx08@gmail.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Prepare for rebasing&lt;/h2&gt;
&lt;p&gt;First thing is to find how many commits back this mistake goes.  I opened up the git log, and saw mine went back 19 commits.  I rolled back 20 just to be sure.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
commit a355926b9d7ec4c05659adaa254beefbdb036332
Author: WaylonWalker &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;email@work.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Oct &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;:28:59 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; -0500

    give name of &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; inside incorrect parameters error
  
commit 1756f5d121bd06c459560b2e982e0d7b6879e9ca
Author: Kiyohito Kunii &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Kiyo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8097799&lt;/span&gt;+921kiyo@users.noreply.github.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Fri Oct &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:33:09 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; +0100

    Fix docs reference &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; registering &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;pipelines&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;start the rebase&lt;/h2&gt;
&lt;p&gt;Now I start the rebase 20 commits back from HEAD.  THis will pop you into a text file with a list of commits, for this change simply replace all &lt;code class=&quot;language-text&quot;&gt;pick&lt;/code&gt; with &lt;code class=&quot;language-text&quot;&gt;edit&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase -i HEAD~20&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run git log to see where we ended up.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log
commit 1756f5d121bd06c459560b2e982e0d7b6879e9ca
Author: Kiyohito Kunii &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Kiyo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8097799&lt;/span&gt;+921kiyo@users.noreply.github.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Fri Oct &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:33:09 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; +0100

    Fix docs reference &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; registering &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;pipelines&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As expected we ended up on Kiyo&apos;s commit. So we can simply move forward without any edits.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase --continue
Stopped at e162ca7&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.  correct &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; name &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tests
You can amend the commit now, with

  &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit --amend

Once you are satisfied with your changes, run

  &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase --continue&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;🛠 Fix First wrong Commit&lt;/h2&gt;
&lt;p&gt;Checking the log again I an now on my first commit with a mistake.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log
commit 95c209a740d6d0340e19a8fc36298cbf874f8bf7 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HEAD&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Author: WaylonWalker &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;email@work.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Oct &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;:59:44 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; -0500

    correct &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; name &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tests

commit cde2e8baa3c1c4a9f1da4135258381466b1da40a
Author: Waylon Walker &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;quadmx08@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Oct &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;:30:07 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; -0500

    update tests

commit a355926b9d7ec4c05659adaa254beefbdb036332
Author: Waylon Walker &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;quadmx08@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Oct &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;:28:59 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; -0500

    give name of &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; inside incorrect parameters error

commit 1756f5d121bd06c459560b2e982e0d7b6879e9ca
Author: Kiyohito Kunii &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Kiyo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8097799&lt;/span&gt;+921kiyo@users.noreply.github.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Fri Oct &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:33:09 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; +0100

    Fix docs reference &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; registering &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;pipelines&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running the following command will reset the author on the current commit.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit --amend --reset-author&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Double check with a quick &lt;code class=&quot;language-text&quot;&gt;git log&lt;/code&gt; that the author was fixed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;commit ccaaa56059ee4554731fa83297ca9e8e387a7592 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HEAD&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Author: Waylon Walker &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;quadmx08@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Oct &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;:35:40 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; -0500

    correct &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; name &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tests

commit cde2e8baa3c1c4a9f1da4135258381466b1da40a
Author: Waylon Walker &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;quadmx08@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Oct &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;:30:07 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; -0500

    update tests

commit a355926b9d7ec4c05659adaa254beefbdb036332
Author: Waylon Walker &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;quadmx08@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Oct &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;:28:59 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; -0500

    give name of &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; inside incorrect parameters error

commit 1756f5d121bd06c459560b2e982e0d7b6879e9ca
Author: Kiyohito Kunii &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Kiyo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8097799&lt;/span&gt;+921kiyo@users.noreply.github.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Fri Oct &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:33:09 &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt; +0100

    Fix docs reference &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; registering &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;pipelines&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Fix all commits&lt;/h2&gt;
&lt;p&gt;Now to do this for 18 other commits.  I found that chaining the three commands into a bash one-liner was quite helpful.  I turned off pre-commit hooks with &lt;code class=&quot;language-text&quot;&gt;--no-verify&lt;/code&gt;.  I also turned off the &lt;code class=&quot;language-text&quot;&gt;log&lt;/code&gt; pager by adding &lt;code class=&quot;language-text&quot;&gt;--no-pager&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase --continue &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit --amend --reset-author --no-edit --no-verify &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; --no-pager log -n &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Done&lt;/h2&gt;
&lt;p&gt;This was quick and easy for 19 commits.  I have tried to loop through changes like this in the past, and it does get a bit hairy.  I find its easier to just setup a one-liner and crank through them one by one.&lt;/p&gt;
&lt;h2&gt;A note on changing history...&lt;/h2&gt;
&lt;p&gt;Since this was done in a rebase it has changed the history of the repo.  This is ok to do only when you are the only person or are in close communication with everyone using the repo.  One thing I have ran into is that if you do this after you submit a PR, but before its completed it duplicates your commits in a merge.  For this particular change I simply closed the first PR and opened a second.  If someone has a better suggestion, I would be glad to know a better way.&lt;/p&gt;
&lt;h2&gt;ReCap&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; kedro
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config user.name &lt;span class=&quot;token string&quot;&gt;&quot;Waylon Walker&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config user.email quadmx08@gmail.com
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase -i HEAD~20
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase --continue
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase --continue &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit --amend --reset-author --no-edit --no-verify &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; --no-pager log -n &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/fix-git-commit-author.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/fix-git-commit-author/.png</cover_image></item><item><title><![CDATA[Designing a "Router" for kedro]]></title><description><![CDATA[nodes_global I released a router-like plugin for kedro back in April 2020.  This was not the first design, the idea actually came from one…]]></description><link>https://waylonwalker.com/designing-kedro-router/</link><guid isPermaLink="false">https://waylonwalker.com/designing-kedro-router/</guid><pubDate>Thu, 08 Oct 2020 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;nodes_global&lt;/h2&gt;
&lt;p&gt;I released a router-like plugin for kedro back in April 2020.  This was not the first design, the idea actually came from one of the QB folks who taught me kedro nearly a year before.  We were assembling our pipelines with something called &lt;code class=&quot;language-text&quot;&gt;nodes_global&lt;/code&gt;.  It worked fairly well but did have some issues around being set as a global variable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;But...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;One thing in particular that it did not lend itself well to was being able to create a packagable pipeline that I could pip install and append into any of my existing pipelines.  Something I am still trying to work out, maybe I don&apos;t need this.  I think I have it working for our internal pipelines and it seems like the way to go, but we don&apos;t necessarily end up using it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Also...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With this pattern all of the nodes needed to be importable by the module containing nodes_global.  I find that this becomes a big hurdle for new pipelines coming from jupyter to overcome and can be most infuriating when their nodes aren&apos;t getting ran after they added them.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot; align=&quot;center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/what-is-kedro&quot;&gt;
  &lt;img style=&quot;width:400px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/what-is-kedro.png&quot; alt=&quot;What is kedro&quot; width=&quot;400&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are a bit unsure about what kedro is make sure to check out my &lt;a href=&quot;https://waylonwalker.com/what-is-kedro&quot;&gt;what-is-kedro&lt;/a&gt; article.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;@node(inputs=&apos;a&lt;em&gt;raw&lt;/em&gt;cars&apos;, outputs=&apos;b&lt;em&gt;int&lt;/em&gt;cars&apos;)&lt;/h2&gt;
&lt;p&gt;I set off to design something that was flask-like.  Around November I had something working.  You could simply start creating functions. and decorate these functions with a decorator just like with flask.  I even had it setup to autoname the nodes things like &lt;code class=&quot;language-text&quot;&gt;create_b_int_cars&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;But....&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This did not lend well to pulling in functions from a library or dynamically creating nodes.  I didn&apos;t realize how few nodes I actually make in my pipelines that are a 1:1 relationship between the node and function in real work.  Most examples work this way, but for some reason when I step into a project we end up pulling a lot of functions out of existing libraries, or dynamically creating many datasets from a list of options.&lt;/p&gt;
&lt;h2&gt;pytest inspired&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;simplicity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The final design ended up being suggested by a colleague of mine who is not using kedro, but is a  brilliant python dev.  The idea was to walk through the project like pytest does looking for modules and variables with a certain pattern (&lt;code class=&quot;language-text&quot;&gt;node&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;pipeline&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;I have been using this since April and am loving it. It has have very little change since first release.  When I create a new module, that automatically becomes a new pipeline in my &lt;code class=&quot;language-text&quot;&gt;pipelines&lt;/code&gt; dict and all of the variables with the name node get scrapped up and put into a single pipeline.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Beginner Friendly&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like with pytest.  You just start hacking in modules ending with &lt;code class=&quot;language-text&quot;&gt;_nodes.py&lt;/code&gt; with nodes in them and they just appear in your final pipeline.&lt;/p&gt;
&lt;h2&gt;How to use it&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/WaylonWalker/find-kedro&quot;&gt;readme&lt;/a&gt; has some great examples.&lt;/p&gt;
&lt;h2&gt;Install it&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;pip install find&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;kedro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Enable it&lt;/h2&gt;
&lt;p&gt;Enable it by changing one line in your run.py&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run.py&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; KedroContext
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; find_kedro &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; find_kedro

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;KedroContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_get_pipelines&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; find_kedro&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if your using the new &lt;code class=&quot;language-text&quot;&gt;hooks.py&lt;/code&gt; method.  Again no need to import all of your nodes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;hooks.py&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectHooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;register_pipelines&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Register the project&apos;s pipeline.
        Returns:
            A mapping from a pipeline name to a ``Pipeline`` object.
        &quot;&quot;&quot;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; find_kedro&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Use it&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/WaylonWalker/find-kedro&quot;&gt;readme&lt;/a&gt; for more examples, but this one is the one that I use and recommend most often.  This method helps keep nodes close to functions that are designed for them.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;my&lt;/em&gt;nodes.py&lt;/mark&gt;&lt;/small&gt;_&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# my-proj/pipelinies/data_engineering/pipeline&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodes &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; split_data

nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;split_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;df&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ratio&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        split_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_iris_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;params:example_test_data_ratio&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            train_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            train_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Want a simple guide to get started with find kedro&lt;/h1&gt;
&lt;p style=&apos;text-align: center&apos; align=&apos;center&apos;&gt;
&lt;a href=&apos;https://find.kedro.dev/examples/iris/&gt;
  &lt;img
    style=&apos;width:400px; max-width:80%; border-radius: &apos;35px&apos;; margin: auto;&apos;
    width=&apos;400&apos;
    src=&quot;https://waylonwalker.com/find-kedro-examples-iris.png&quot;
    alt=&quot;Find Kedro Iris example&quot;
  /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://find.kedro.dev/examples/iris/&quot;&gt;this doc&lt;/a&gt; I transform the kedro iris template to find-kedro.&lt;/p&gt;
&lt;h1&gt;Ready to start using kedro&lt;/h1&gt;
&lt;p&gt;If you still have not tried out kedro, it&apos;s easier than you think. Check out &lt;a href=&quot;https://waylonwalker.com/create-new-kedro-project&quot;&gt;create-new-kedro-project&lt;/a&gt; to get a project started in just a few minutes.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot; align=&quot;center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/create-new-kedro-project&quot;&gt;
  &lt;img style=&quot;width:400px; max-width:80%; margin: auto;&quot; width=&quot;400&quot; src=&quot;https://waylonwalker.com/create-new-kedro-project.png&quot; alt=&quot;Create New Kedro Project&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/designing-kedro-router.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/designing-kedro-router/.png</cover_image></item><item><title><![CDATA[Reclaim memory usage in Jupyter]]></title><description><![CDATA[Today we ran into an issue where we had a one-off script that just needed to work, but it was just chewing threw memory like nothing. Pre…]]></description><link>https://waylonwalker.com/reset-ipython/</link><guid isPermaLink="false">https://waylonwalker.com/reset-ipython/</guid><pubDate>Thu, 01 Oct 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Today we ran into an issue where we had a one-off script that just needed to work, but it was just chewing threw memory like nothing.&lt;/p&gt;
&lt;h2&gt;Pre check the status of memory.&lt;/h2&gt;
&lt;p&gt;There are a number of ways that you can check the amount of memory on your system.  The easiest is not necessarily my first go to is free... literally &lt;code class=&quot;language-text&quot;&gt;free&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;check for free space&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;free&lt;/span&gt; -h
             total       used       &lt;span class=&quot;token function&quot;&gt;free&lt;/span&gt;     shared    buffers     cached
Mem:           15G        15G       150M         0B        59M       &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;.7G&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generally my first go to is a bit more graphical, and not available on a stock stystem, but far more useful.... &lt;code class=&quot;language-text&quot;&gt;htop&lt;/code&gt;.  &lt;a href=&quot;https://htop.dev&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;htop&lt;/code&gt;&lt;/a&gt; is a terminal process explorer that shows cpu usage, mem usage, and running processes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;htop&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;htop&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# install it from your package repo&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;htop&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/htop-2.0.png&quot; alt=&quot;htop in use&quot;&gt;&lt;/p&gt;
&lt;h2&gt;First step throw more swap at it&lt;/h2&gt;
&lt;p&gt;Often before going through the process of getting a larger instance underneath the notebook you can hobble home with a bit more swap file.  It may not be pretty or fast, but gets the job done in a pinch.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;Check for free disk&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;du&lt;/span&gt;

Filesystem      Size  Used Avail Use% Mounted on
/dev/asdasd        200G   50G  150G   &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt;% /&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure you check your free disk space first, filling both memory and disk can be bad news&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;make a swap file and activate it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;SWAPFILE&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;~/swaps/swap1-50G
&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; ~/swaps
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; fallocate -l 50G &lt;span class=&quot;token variable&quot;&gt;$SWAPFILE&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;600&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$SWAPFILE&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mkswap&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$SWAPFILE&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;swapon&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$SWAPFILE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see the results with either swapon or free.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;swapon&lt;/span&gt; --show
&lt;span class=&quot;token function&quot;&gt;free&lt;/span&gt; -h&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/&quot;&gt;
  &lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/linuxize-how-to-add-swap-space-on-ubuntu-20-04.jpg&quot; alt=&quot;How to Add Swap Space on Ubuntu 20.04&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/&quot;&gt;linuxize how to add swap space on ubuntu 20.04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details on creating swapfiles checkout &lt;a href=&quot;https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/&quot;&gt;linuxize&lt;/a&gt;.  It is my favorite linux tutorial site!&lt;/p&gt;
&lt;h2&gt;Refactor - functions&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;keep big datasets inside functions returning aggregations&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sometimes there is a clear quick and simple way to just let the python garbage collector.  Often we pull in large datasets to create features then aggregate them down into smaller datasets that can be then joined into other datasets.  This pattern of pulling in  &lt;code class=&quot;language-text&quot;&gt;big_data&lt;/code&gt;, processing then aggregating can be a simple one.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;let the garbage collector take care of big data&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   big_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_big_data&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   smaller_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;some aggregation&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; smaller_data
data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your notebook is following this type of pattern a simple &lt;code class=&quot;language-text&quot;&gt;del&lt;/code&gt; won&apos;t work because ipython adds extra references to your &lt;code class=&quot;language-text&quot;&gt;big_data&lt;/code&gt; that you didnt add.  These are things that enable features like &lt;code class=&quot;language-text&quot;&gt;_&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;__&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;___&lt;/code&gt;, umong others.&lt;/p&gt;
&lt;h2&gt;%reset&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;check out more on reset from the &lt;a href=&quot;https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-reset&quot;&gt;ipython docs&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The last resort I would lean on here is an &lt;code class=&quot;language-text&quot;&gt;ipython&lt;/code&gt; specific feature &lt;code class=&quot;language-text&quot;&gt;%reset&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;%reset_selective&lt;/code&gt;.  These will flush out all user define variables or selecive ones based on a regex respectively.&lt;/p&gt;
&lt;p&gt;Following two example are directly from the &lt;a href=&quot;https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-reset&quot;&gt;ipython docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;%reset&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; a
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;a&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; get_ipython&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;user_ns
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;

In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;reset &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;f

In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;a&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; get_ipython&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;user_ns
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;

In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;reset &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;f &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
Flushing &lt;span class=&quot;token builtin&quot;&gt;input&lt;/span&gt; history

In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;reset &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;f dhist &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
Flushing directory history
Flushing &lt;span class=&quot;token builtin&quot;&gt;input&lt;/span&gt; history&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;%reset&lt;/em&gt;selective&lt;/mark&gt;&lt;/small&gt;_&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;In [2]: a=1; b=2; c=3; b1m=4; b2m=5; b3m=6; b4m=7; b2s=8

In [3]: who_ls
Out[3]: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;b1m&amp;#39;, &amp;#39;b2m&amp;#39;, &amp;#39;b2s&amp;#39;, &amp;#39;b3m&amp;#39;, &amp;#39;b4m&amp;#39;, &amp;#39;c&amp;#39;]

In [4]: %reset_selective -f b[2-3]m

In [5]: who_ls
Out[5]: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;b1m&amp;#39;, &amp;#39;b2s&amp;#39;, &amp;#39;b4m&amp;#39;, &amp;#39;c&amp;#39;]

In [6]: %reset_selective -f d

In [7]: who_ls
Out[7]: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;b1m&amp;#39;, &amp;#39;b2s&amp;#39;, &amp;#39;b4m&amp;#39;, &amp;#39;c&amp;#39;]

In [8]: %reset_selective -f c

In [9]: who_ls
Out[9]: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;b1m&amp;#39;, &amp;#39;b2s&amp;#39;, &amp;#39;b4m&amp;#39;]

In [10]: %reset_selective -f b

In [11]: who_ls
Out[11]: [&amp;#39;a&amp;#39;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Develop faster utilizing autoreload in ipython&lt;/h2&gt;
&lt;p&gt;The above tips will help you reclaim used memory in ipython, but the following tip is one that single handedly is the reason I use Ipython for faster development over anything else.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/autoreload-ipython&quot;&gt;
  &lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/autoreload-ipython-rm.png&quot; alt=&quot;Autoreload in Ipython&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/autoreload-ipython&quot;&gt;autoreload-ipython&lt;/a&gt; one of my biggest productivity boosts.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/reset-ipython.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/reset-ipython/.png</cover_image></item><item><title><![CDATA[Strip Trailing Whitespace from Git projects]]></title><description><![CDATA[A common linting error thrown by various linters is for trailing whitespace.  I most often use flake8.  I generally have [pre-commit](https…]]></description><link>https://waylonwalker.com/strip-trailing-whitespace/</link><guid isPermaLink="false">https://waylonwalker.com/strip-trailing-whitespace/</guid><pubDate>Wed, 30 Sep 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;A common linting error thrown by various linters is for trailing whitespace.  I most often use flake8.  I generally have [pre-commit](&lt;a href=&quot;https://waylonwalker.com/pre-commit-is-awesome&quot; title=&quot;https://waylonwalker.com/pre-commit-is-awesome&quot;&gt;https://waylonwalker.com/pre-commit-is-awesome&lt;/a&gt;) hooks setup to strip this, but sometimes I run into situations where I jump into a project without it, and my editor lights up with errors.  A simple fix is to run this one-liner.&lt;/p&gt;
&lt;h2&gt;One-Liner to strip whitespace&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;bash&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -I --name-only -z -e &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; -0 &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i -e &lt;span class=&quot;token string&quot;&gt;&apos;s/[ &lt;span class=&quot;token entity&quot; title=&quot;\t&quot;&gt;\t&lt;/span&gt;]\+\(&lt;span class=&quot;token entity&quot; title=&quot;\r&quot;&gt;\r&lt;/span&gt;\?\)$/&lt;span class=&quot;token entity&quot; title=&quot;\1&quot;&gt;\1&lt;/span&gt;/&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: center&quot; align=&quot;center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/pre-commit-is-awesome&quot;&gt;
  &lt;img style=&quot;width:400px; max-width:80%; margin: auto;&quot; width=&quot;400&quot; src=&quot;https://waylonwalker.com/pre-commit-is-awesome.png&quot; alt=&quot;pre-commit article&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;read more about pre-commit &lt;a href=&quot;https://waylonwalker.com/pre-commit-is-awesome&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/strip-trailing-whitespace.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/strip-trailing-whitespace/.png</cover_image></item><item><title><![CDATA[Chrome Extensions I use]]></title><description><![CDATA[There are many useful chrome extensions out there.  I probably have way too many installed, here are four that I am currently using. This…]]></description><link>https://waylonwalker.com/chrome-extensions-i-use/</link><guid isPermaLink="false">https://waylonwalker.com/chrome-extensions-i-use/</guid><pubDate>Sun, 13 Sep 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;There are many useful chrome extensions out there.  I probably have way too many installed, here are four that I am currently using.&lt;/p&gt;
&lt;p&gt;This post was inspired from Chris over at &lt;a href=&quot;https://daily-dev-tips.com/posts/top-10-chrome-extensions-for-developers-%F0%9F%91%80/&quot;&gt;daily-dev-tips&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#lastpass&quot;&gt;LastPass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#stylus&quot;&gt;Stylus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#vimium&quot;&gt;Vimium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hypothesis&quot;&gt;hypothesis&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd?hl=en&quot;&gt;LastPass&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Love it or hate it passwords are hard to manage.  Everyone needs a password manager to avoid the dreaded password reuse, and to be able to quickly rotate them with a service.  I use lastpass, thus it&apos;s browser extension is my most used extension.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd?hl=en&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/chrome-extension-lastpass.png&quot; alt=&quot;lastpass&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne?hl=en&quot;&gt;Stylus&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Stylus is an extension that allows you to add your own CSS to style pages how you want.  There seems to be a full community of folks that really use this to the nth degree to style all of their commonly used sites somewhat similarly or add dark mode to sites without it.&lt;/p&gt;
&lt;p&gt;Personally I mostly use it to add my favorite syntax highlighting theme to jupyter, &lt;strong&gt;onedark&lt;/strong&gt;.  I&apos;ve long lost the original author, but have posted the CSS I use in this &lt;a href=&quot;https://gist.github.com/WaylonWalker/b082bda9c1ce1471ea0c940c836e5714&quot;&gt;gist&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne?hl=en&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/chrome-extension-stylus.png&quot; alt=&quot;lastpass&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=en&quot;&gt;Vimium&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Vimium adds vim-like keybindings to chrome.  I don&apos;t use it a ton but it comes in handy to fully utilize the keyboard on some sites that aren&apos;t well suited to keyboard use.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=en&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/chrome-extension-vimium.png&quot; alt=&quot;vimium&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/hypothesis-web-pdf-annota/bjfhmglciegochdpefhhlphglcehbmek?hl=en&quot;&gt;hypothesis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hypothesis is a notetaking app that I am trying to get on board with.  I like that they have a REST API to get your notes from. It allows you to take notes or highlight web pages and share them easily.  I am still trying to remember to use this one more.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/hypothesis-web-pdf-annota/bjfhmglciegochdpefhhlphglcehbmek?hl=en&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/chrome-extension-hypothesis.png&quot; alt=&quot;hypothesis&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These are my most used extensions.  What are yours?&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/chrome-extensions-i-use.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/chrome-extensions-i-use/.png</cover_image></item><item><title><![CDATA[Creating Reusable Bash Scripts]]></title><description><![CDATA[Bash is a language that is quite useful for automation no matter what language you write in. Bash can do so many powerful system-level tasks…]]></description><link>https://waylonwalker.com/reusable-bash/</link><guid isPermaLink="false">https://waylonwalker.com/reusable-bash/</guid><pubDate>Thu, 13 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Bash is a language that is quite useful for automation no matter what language you write in. Bash can do so many powerful system-level tasks. Even if you are on windows these days you are likely to come across bash inside a cloud VM, Continuous Integration, or even inside of docker.&lt;/p&gt;
&lt;p&gt;I have three techniques that help me write more composable bash scripts.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#functions&quot;&gt;functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#arguments&quot;&gt;Arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#positional-arguments&quot;&gt;positional arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#all-arguments&quot;&gt;All Arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#error-handling&quot;&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#main-script&quot;&gt;main script&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;Functions&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Break scripts down into reusable components&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Functions in bash are quite simple. They are something that I wish I would have started using long ago. They make your code much more reusable. I often use them in my aliases as well since they can simplify the process and allow more flexibility.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# hello_world&lt;/span&gt;
&lt;span class=&quot;token function-name function&quot;&gt;hello_world&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source the file to load the function and run it from the terminal.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; hello_world
hello_world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;hello world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Arguments&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Make functions a little more flexible&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Arguments and options are quite a bit more complex in bash. For now, we will focus on the basics which are not all that bad.&lt;/p&gt;
&lt;h3&gt;positional arguments&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;easiest and most common to use&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Positional arguments can be pulled out quite easily using &lt;code class=&quot;language-text&quot;&gt;$1&lt;/code&gt; for the first one, &lt;code class=&quot;language-text&quot;&gt;$2&lt;/code&gt; for the second, and so on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;$0&lt;/code&gt; is the command that was called. You will see this often used to find the command called to open up your current shell.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# hello&lt;/span&gt;
&lt;span class=&quot;token function-name function&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; hello
hello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we have a function that accepts positional arguments and we can call it by passing things into it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;hello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More than one argument would be ignored since we are only looking at &lt;code class=&quot;language-text&quot;&gt;$1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; hello
hello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;hello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just the same as before since we do not use the second argument.&lt;/p&gt;
&lt;h3&gt;All Arguments&lt;/h3&gt;
&lt;p&gt;Bash has another special variable &lt;code class=&quot;language-text&quot;&gt;$@&lt;/code&gt; that stores &lt;strong&gt;all arguments&lt;/strong&gt; in one.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# hello&lt;/span&gt;
&lt;span class=&quot;token function-name function&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello &lt;span class=&quot;token variable&quot;&gt;$@&lt;/span&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just the same as before.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; hello
hello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the function will output all arguments that are passed into it since we are using the &lt;code class=&quot;language-text&quot;&gt;$@&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;hello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Error Handling&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Super powers in a single line&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The easiest and most common way to handle an error in bash is through the use of the logical operators &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and) and &lt;code class=&quot;language-text&quot;&gt;||&lt;/code&gt; (or).&lt;/p&gt;
&lt;p&gt;Here I have a concrete example from earlier today. I was creating a bash script to run a python script from cron. The bash script is there to make sure that we have the python environment, activate it, and run. If it doesn&apos;t have it, it should create it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight has-highlighted-lines&quot; data-language=&quot;bash&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber 0&quot; class=&quot;language-bash line-numbers&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# creates the conda environment&lt;/span&gt;
&lt;span class=&quot;token function-name function&quot;&gt;create_env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    conda create -n &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt;
    conda activate &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt;
    pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -r requirements.txt
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;token comment&quot;&gt;# checks if the conda environment exists&lt;/span&gt;
&lt;span class=&quot;token function-name function&quot;&gt;env_exists&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;}&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tail&lt;/span&gt; -n +3 &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -w &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; /dev/null
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# creates the conda environment if it doesn&apos;t exist&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;create_if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;env_exists &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;environment exists&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; create_env &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;/span&gt;create_if my_env&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we look at the &lt;code class=&quot;language-text&quot;&gt;create_if&lt;/code&gt; function, it will check if the environment exists if there is a passing status code &lt;code class=&quot;language-text&quot;&gt;0&lt;/code&gt;, then it will run &lt;code class=&quot;language-text&quot;&gt;echo &amp;quot;environment exists&amp;quot;&lt;/code&gt; otherwise it will run &lt;code class=&quot;language-text&quot;&gt;create_env $1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; Inside of &lt;code class=&quot;language-text&quot;&gt;env_exists&lt;/code&gt; grep will look for whole words if there is a match it will give a status code 0 if it finds a match and not 0 if there is no match.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;main script&lt;/h2&gt;
&lt;p&gt;_&lt;code class=&quot;language-text&quot;&gt;if __name__ == &amp;quot; __main__&amp;quot;&lt;/code&gt;_&lt;/p&gt;
&lt;p&gt;The last thing I want to discuss is making a bash script both runnable and sourceable. This makes it so that you can &lt;code class=&quot;language-text&quot;&gt;source filename.sh&lt;/code&gt; and run each function individually, or &lt;code class=&quot;language-text&quot;&gt;bash filename.sh&lt;/code&gt; to run the script. This is a similar concept to &lt;code class=&quot;language-text&quot;&gt;if __name__ == &amp;quot; __main__&amp;quot;&lt;/code&gt; from python.&lt;/p&gt;
&lt;p&gt;I did try this from bash and zsh with success. The following is an example that would pass all arguments into a main function.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${&lt;span class=&quot;token environment constant&quot;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;}&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${0}&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    main &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$@&lt;/span&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Extending the example above that created a python example if necessary we can create the env if necessary, activate the environment, and run the script.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${&lt;span class=&quot;token environment constant&quot;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;}&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${0}&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
create_if my_env
conda activate my_env
python script.py
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this syntax to run our &quot;main&quot; functions will allow us to both runs the script or source the script to utilize the functions that we created.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/reusable-bash.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/reusable-bash/.png</cover_image></item><item><title><![CDATA[Three things to Automate with Python using Pandas]]></title><description><![CDATA[Here are three things that I see my non programming counterparts doing every single day.  These really sum up so much of what folks do…]]></description><link>https://waylonwalker.com/3-things-to-automate-with-python/</link><guid isPermaLink="false">https://waylonwalker.com/3-things-to-automate-with-python/</guid><pubDate>Tue, 11 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Here are three things that I see my non programming counterparts doing every single day.  These really sum up so much of what folks do within an office.  So many of us dabble in or become power users of spreadsheets without knowing there is an alternative out there that can save us time, automate boring things, and allow us to open up our minds for the part that we add value, Thinking about the data.&lt;/p&gt;
&lt;h2&gt;Focus on Value Add Operations&lt;/h2&gt;
&lt;p&gt;Lets face it, stitching together spreadsheets is zero value add by itself, but if you can see something in the data and take action on it, this can be huge value add to your company. Learning just a bit of python will help focus more of your attention on &quot;value add operations&quot; and leave the mundane stuff to your computer.&lt;/p&gt;
&lt;h2&gt;Merge a directory full of spreadsheets into one&lt;/h2&gt;
&lt;p&gt;I see this one all the time.  One team gets a spreadsheet from another team once per month and they need to stich all the pieces together.  Excel really opens the door for some nasty hidden bugs in your manually stiched together data.  It also takes time out of your day that you dont need to spend.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Path

files &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;glob&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw/*.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
csvs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; files&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
csvs_combined &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;concat&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;csvs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
csvs_combined&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;processed/combined.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Fetch data from a url&lt;/h2&gt;
&lt;p&gt;It might be possible that the other team shares their data on a website.  If you can get access to the data via a url, as in the example below there is no need to go to the website to save the data every week/month, you can have python do that for you.  It&apos;s very likely that you will need to combine this with step one in many workflows.  Now your data compiling can be done in one single running of a script.  Your data is still in a format that excel can read and you can stick with a hybrid workflow while you become comfortable in python.&lt;/p&gt;
&lt;p&gt;There is no shame in opening excel to do something in 5 minutes that would take an hour of research to do in python.  If you stick to it though, piece by piece everything will come together.  You will be able to do more in python than you could imagine in excel and you will wonder how you did it without the help of python.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd

cars_url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://www.kaggle.com/abineshkumark/carsdata/download/xrvGk4JtQZJZetxwsCCy%2Fversions%2Fl2HR9tTLKz8MzHMAjBcl%2Ffiles%2Fcars.csv?datasetVersionNumber=1&apos;&lt;/span&gt;
cars &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cars_url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

cars&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Fetch data from a database&lt;/h2&gt;
&lt;p&gt;This one can be a bit trickier, often requires hunting down tables that are undocumented. Getting access, and figuring out the crednetials.  If you can get over that hump though it is likely that you will have access to several data source that you typically use in one place.  From there you can learn how to join them together to create powerful workflows.&lt;/p&gt;
&lt;p&gt;SQL can be a very daunting language to learn but if you spend an hour with it you will know enough to at least get the data into python or excel.  You can continue to hone your sql skills and move more of your aggregation/analysis into the database for better performance.  If you are asking for 1M rows for a 10 row report the efficiency gains of doing that aggregation in the database and not sending 1M rows over the wire can be immense.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; sqlalchemy &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; create engine

engine &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; create_engine&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;postgresql://scott:tiger@localhost:5432/mydatabase&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

sql &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;select * from inventory&apos;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; engine&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;connect&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; connection&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    inventory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_sql&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; con&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
engine&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dispose&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

inventory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Learning to automate has value&lt;/h2&gt;
&lt;p&gt;I often see folks joking that developers will spend 10 minutes to automate a 1 minute task that they will only ever do once.  There is definitely a limit to when your time is more valueable just doing the task and moving on, but as you hone your skills you will get much faster.&lt;/p&gt;
&lt;p&gt;Things that needed research slowly become intuitive.  Things that used to be brain twisting 50 lines can be an easy to read 12.&lt;/p&gt;
&lt;p&gt;Slowly you get better.&lt;/p&gt;
&lt;p&gt;Things that were unfeasible become part of your wheelhouse.&lt;/p&gt;
&lt;p&gt;Give value to the learning process of automating tasks.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/3-things-to-automate-with-python.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/3-things-to-automate-with-python/.png</cover_image></item><item><title><![CDATA[How to Install miniconda on linux (from the command line only)]]></title><description><![CDATA[miniconda is a python distribution from continuum. It's a slimmed-down version of their very popular anaconda distribution. It comes with…]]></description><link>https://waylonwalker.com/install-miniconda/</link><guid isPermaLink="false">https://waylonwalker.com/install-miniconda/</guid><pubDate>Mon, 10 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;miniconda is a python distribution from continuum. It&apos;s a slimmed-down version of their very popular anaconda distribution. It comes with its own environment manager and has eased the install process for many that do not have a way to compile c-extensions. It made it much easier to install the data science stack on windows a few years ago. These days windows are much better than it was back then at compiling c-extensions. I still like its environment manager, which installs to a global directory rather than a local directory for your project.&lt;/p&gt;
&lt;h2&gt;Installing miniconda on Linux&lt;/h2&gt;
&lt;p&gt;Installing miniconda on Linux can be a bit tricky the first time you do it completely from the terminal. The following snippet will create a directory to install miniconda into, download the latest python 3 based install script for Linux 64 bit, run the install script, delete the install script, then add a conda initialize to your bash or zsh shell. After doing this you can restart your shell and conda will be ready to go.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; -p ~/miniconda3
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
&lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt; ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -rf ~/miniconda3/miniconda.sh
~/miniconda3/bin/conda init &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt;
~/miniconda3/bin/conda init &lt;span class=&quot;token function&quot;&gt;zsh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Options&lt;/h2&gt;
&lt;p&gt;The miniconda.sh script comes with a few basic options.  Most notably we used &lt;code class=&quot;language-text&quot;&gt;-b&lt;/code&gt; to be able to run unattended, which means that all of the agreements are automatically accepted without user prompt.  &lt;code class=&quot;language-text&quot;&gt;-u&lt;/code&gt; updates any existing installation in the directory of install if there is one. &lt;code class=&quot;language-text&quot;&gt;-p&lt;/code&gt; is the directory to install into.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;usage: /root/miniconda3/miniconda.sh [options]

Installs Miniconda3 4.6.14

-b           run install in batch mode (without manual intervention),
             it is expected the license terms are agreed upon
-f           no error if install prefix already exists
-h           print this help message and exit
-p PREFIX    install prefix, defaults to /root/miniconda3, must not contain spaces.
-s           skip running pre/post-link/install scripts
-u           update an existing installation
-t           run package tests after installation (may install conda-build)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Silent/Logged&lt;/h2&gt;
&lt;p&gt;A quick and easy way to silence everything or to log it to a file during an automated install is to wrap the script into a bash function, or save it to its own file, and call the file.  I like the function method since I can still copy it right into a terminal, or keep my install script as one single file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;install_miniconda&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; -p ~/miniconda3
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
&lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt; ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -rf ~/miniconda3/miniconda.sh
~/miniconda3/bin/conda init &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt;
~/miniconda3/bin/conda init &lt;span class=&quot;token function&quot;&gt;zsh&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;normal&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;install_miniconda&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;silent&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;install_miniconda &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;logged&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;install_miniconda &amp;gt; miniconda_install.log 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/reusable-bash/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/96bd1b466e9e00834d0d7eda8af04b97/630fb/reusable-bash-xmas2020.png&quot; alt=&quot;article cover for Creating Reusable Bash Scripts&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Creating Reusable Bash Scripts&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Bash is a language that is quite useful for automation no matter what language you write in. Bash can do so many powerful system-level tasks. Even if you are on windows these days you are likely to come across bash inside a cloud VM, Continuous Integration, or even inside of docker.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;This posts covers more ways to write reuable bash scripts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Cross posted to DEV&lt;/h2&gt;
&lt;p&gt;Check out this post and many more on &lt;a href=&quot;https://dev.to/waylonwalker/installing-miniconda-on-linux-from-the-command-line-4ad7&quot;&gt;dev.to/waylonwalker&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/install-miniconda.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/install-miniconda/.png</cover_image></item><item><title><![CDATA[Kedro Basics]]></title><description><![CDATA[Learn Kedro in 5 days Day 0 Setup vm install python editor Day 1 kedro new kedro viz Day 2 catalog filter catalog load data fsspec Day…]]></description><link>https://waylonwalker.com/kedro-basics/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-basics/</guid><pubDate>Sat, 08 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Learn Kedro in 5 days&lt;/p&gt;
&lt;h2&gt;Day 0 Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;vm&lt;/li&gt;
&lt;li&gt;install&lt;/li&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;li&gt;editor&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Day 1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;kedro new&lt;/li&gt;
&lt;li&gt;kedro viz&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Day 2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;catalog&lt;/li&gt;
&lt;li&gt;filter catalog&lt;/li&gt;
&lt;li&gt;load data&lt;/li&gt;
&lt;li&gt;fsspec&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Day 3&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pipeline&lt;/li&gt;
&lt;li&gt;nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Day 4&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;filter pipeline&lt;/li&gt;
&lt;li&gt;run partial pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Day 5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;kedro docker&lt;/li&gt;
&lt;li&gt;GitHub Actions&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Advanced Kedro&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;hooks&lt;/li&gt;
&lt;li&gt;custom datasets&lt;/li&gt;
&lt;li&gt;modular pipelines&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-basics.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-basics/.png</cover_image></item><item><title><![CDATA[How to crush amazing posts on DEV]]></title><description><![CDATA[This post was inspired by a comment I left on @dsteenman's  post. {% post dsteenman/how-long-should-a-blogpost-be-2k6n %} Most of the time I…]]></description><link>https://waylonwalker.com/crush-dev-to-posts/</link><guid isPermaLink="false">https://waylonwalker.com/crush-dev-to-posts/</guid><pubDate>Fri, 07 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This post was inspired by a comment I left on @dsteenman&apos;s  post.&lt;/p&gt;
&lt;p&gt;{% post dsteenman/how-long-should-a-blogpost-be-2k6n %}&lt;/p&gt;
&lt;p&gt;Most of the time I prefer short as I am more likely to read the whole thing.  If its setup as a series I am more likely to work my way through the whole series in a matter of a few sessions.  Just my preference&lt;/p&gt;
&lt;p&gt;I will say though there are certain articles that fit well to the long format.  They are articles that folks tend to come back to often as a reference again and again.&lt;/p&gt;
&lt;h2&gt;Sections&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#layout-is-key&quot;&gt;layout is key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#break-it-up&quot;&gt;Break it up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#article-types&quot;&gt;Article types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#superpost&quot;&gt;superpost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#single-post&quot;&gt;single post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#series&quot;&gt;series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#discussion&quot;&gt;discussion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#post-what-you-want-to-read&quot;&gt;Post what you want to read&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;layout is key&lt;/h2&gt;
&lt;p&gt;Either way, you go &lt;strong&gt;layout is key&lt;/strong&gt;.  You are not &lt;strong&gt;Steven King&lt;/strong&gt;, no matter how great of a writer you are, you are unlikely to hold attention like he can.  Most folks reading blogs scan articles first.  I often scan, then read.  If the article is really good or pertains well to me I will read everything, otherwise, I go back and read only the sections of interest.  If there are no discernable sections you lost me.&lt;/p&gt;
&lt;p&gt;For this reason, you need to break up your post, into sections and treat the heading for each one like you would a title of a full post.&lt;/p&gt;
&lt;h3&gt;&lt;abbr title=&quot;Table of Contents&quot;&gt;TOC&lt;/abbr&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Table of Contents&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A lot of folks responded to Danny&apos;s post suggesting a table of contents.  For some reason I have never included a &lt;abbr title=&quot;Table of Contents&quot;&gt;TOC&lt;/abbr&gt; in my posts.  It&apos;s something I am now considering.  I am really good at changing layout right before, or after, shipping a brand new post.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;semi-auto &lt;abbr title=&quot;Table of Contents&quot;&gt;TOC&lt;/abbr&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As I am highly allergic to unnecessary rework and potential mistakes I put together this snippet that generates the &lt;abbr title=&quot;Table of Contents&quot;&gt;TOC&lt;/abbr&gt;automatically, just paste this into your console, and paste the results in your article.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// pres F12&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// paste this in the console&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// get your auto generated DEV TOC&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.anchor&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;1. [&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerText&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;](#&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;#&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;\n&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Break it up&lt;/h2&gt;
&lt;p&gt;Use headings, images, and blockquotes to break your article up and make it scannable.  I treat each heading as an article title.  It should be engaging and pull the reader in, but not be clickbaity and irritate them when they didn&apos;t get what they expected.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;make it scannable! ... treat each heading as an article title&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Markdown&lt;/h3&gt;
&lt;p&gt;Get Familiar with Markdown. Check out this &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet&quot;&gt;cheatsheet&lt;/a&gt; or the reference right in the DEV editor.  This is not an article about markdown, but here are the most common tags you need to break up your article.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;#&lt;/span&gt; H1&lt;/span&gt;
&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;##&lt;/span&gt; H2&lt;/span&gt;
&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;###&lt;/span&gt; H3&lt;/span&gt;
... up to H6

&lt;span class=&quot;token list punctuation&quot;&gt;*&lt;/span&gt; unordered
&lt;span class=&quot;token list punctuation&quot;&gt;*&lt;/span&gt; list
&lt;span class=&quot;token list punctuation&quot;&gt;*&lt;/span&gt; of
&lt;span class=&quot;token list punctuation&quot;&gt;*&lt;/span&gt; things

&lt;span class=&quot;token list punctuation&quot;&gt;1.&lt;/span&gt; ordered
&lt;span class=&quot;token list punctuation&quot;&gt;1.&lt;/span&gt; list
&lt;span class=&quot;token list punctuation&quot;&gt;1.&lt;/span&gt; of
&lt;span class=&quot;token list punctuation&quot;&gt;1.&lt;/span&gt; things

&lt;span class=&quot;token url&quot;&gt;![&lt;span class=&quot;token content&quot;&gt;Alt text of image&lt;/span&gt;](put-link-to-image-here)&lt;/span&gt;

&lt;span class=&quot;token bold&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;**&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token italic&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;italics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;_&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token strike&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;~~&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;strikethrough&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;~~&lt;/span&gt;&lt;/span&gt;

👇 Horizontal rules are great a making a hard break between sections

&lt;span class=&quot;token hr punctuation&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;DEV also supports these HTML elements for additional flair, use wisely. Some can make for some really jarring style that really pulls the readers eye to and is hard to focus on the rest.  I&apos;m talking about you &lt;code class=&quot;language-text&quot;&gt;&amp;lt;mark&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;small text&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;sup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;superscript text&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;sup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;sub&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;subscript text&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;sub&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;mark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;highlighted text&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;mark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;abbr&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Table of Contents&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;TOC&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;abbr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Liquid Tags&lt;/h3&gt;
&lt;p&gt;When Editing a post click the Liquid Tag reference to the right, for a list of everything.  The &lt;code class=&quot;language-text&quot;&gt;post&lt;/code&gt; tag is the retweet of DEV.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;{% post helenanders26/sql-series-from-a-to-z-2pk9 %}

{% user helenanders26 %}

{% github forem/forem %}

{% github forem/forem no-readme %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Article types&lt;/h2&gt;
&lt;p&gt;As I can see there are several &lt;strong&gt;article types&lt;/strong&gt; on DEV&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#superpost&quot;&gt;superpost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#single-post&quot;&gt;single post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#series&quot;&gt;series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#discussion&quot;&gt;discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;superpost&lt;/h2&gt;
&lt;p&gt;I think this is what @dsteenman is eluding to with the (+3000) word post.  This is the hardest to pull off in my opinion, but if done right it will land you at the top of the search for a long time, in the top 7, and potentially the top 1 for a given tag.&lt;/p&gt;
&lt;p&gt;I used to think that every post needed to be a super post that everyone would rave over.  I have found personally that attempting to do this makes it so I rarely post and way overthink them.  I need to at least make a cutoff time that the post is going to ship.&lt;/p&gt;
&lt;p&gt;This can also be the most frustrating, you have put all of your eggs in one basket.  If you don&apos;t title it right, post at the right time, share it at the right time, it might not take off like you had hoped.&lt;/p&gt;
&lt;p&gt;{% post helenanders26/sql-series-from-a-to-z-2pk9 %}&lt;/p&gt;
&lt;p&gt;@helenanders26 takes the 👑 as the queen of the superpost.  She is the first person who comes to mind when I think of this post type&lt;/p&gt;
&lt;h2&gt;single post&lt;/h2&gt;
&lt;p&gt;Your average post.  There are a lot of great techniques to making the average post great (some added above).  Sometimes they find traction, sometimes they don&apos;t.  I don&apos;t sweat if they don&apos;t.  I like posting shorter content as its achievable for me and my lifestyle.  I can always crosslink them and generate more views/discussion across them.&lt;/p&gt;
&lt;p&gt;{% post taillogs/how-to-write-a-good-blog-post-2eom %}&lt;/p&gt;
&lt;p&gt;@taillogs has a good article on his process to writing a good post.&lt;/p&gt;
&lt;p&gt;For those struggling to find what to write about, this is a great article from @swyx &lt;a href=&quot;https://www.swyx.io/writing/learn-in-public-hack&quot;&gt;learn-in-public-hack&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;series&lt;/h2&gt;
&lt;p&gt;Using the &lt;code class=&quot;language-text&quot;&gt;series&lt;/code&gt; tag you can break super posts into smaller ones.  This puts fewer of your eggs in the same basket.  I typically start a series when I know that I am going to post about a single topic often, but don&apos;t have it all laid out.  I&apos;ve been told for these to be really successful it needs a bit more pre-thought.&lt;/p&gt;
&lt;p&gt;I do notice that I get a bit of engagement back to older posts every time a new one is posted.  so this does help drive engagement by continuously pulling readers in.  I am not sure if its quite as good as a link, or liquid embed.  Keep in mind when doing this the series component will show the first 2 and the last two without clicking.  Make sure that the first two really count, they will likely get the most traffic benefit from the series.&lt;/p&gt;
&lt;p&gt;{% post waylonwalker/what-are-github-actions-1lhh %}&lt;/p&gt;
&lt;p&gt;I personally put a lot of my content into a series.  I don&apos;t think through the full series ahead of time very much.  I do it because it helps me organize and retrieve my thoughts.  I find it easier to get back to the post I want to reference if I can find the series it was part of.  I think of it as a tag that no one else can post to.&lt;/p&gt;
&lt;h2&gt;discussion&lt;/h2&gt;
&lt;p&gt;Posts just like this one, where the author leads the discussion with an intriguing question or comment but holds back on their opinion.  The key here is that the author should engage in the discussion, keep the discussion moving, and provide their thoughts here.&lt;/p&gt;
&lt;p&gt;Selfishly this is one of my favorite types of posts to make as I learn the most from them.&lt;/p&gt;
&lt;p&gt;{% post ben/how-do-you-identify-over-engineering-1oad %}&lt;/p&gt;
&lt;p&gt;@ben is the king of the &lt;a href=&quot;https://dev.to/t/discuss&quot;&gt;#discuss&lt;/a&gt; post.  He is able to get just the right titles that pull people in and generate quite large discussions.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Post what you want to read&lt;/h2&gt;
&lt;p&gt;At the end of the day &lt;strong&gt;YOU&lt;/strong&gt; are the most important component.  Post what you like to read, post what you are able to write.  If you struggle to wrap your head around concepts in small posts and have a talent at making rockstar super posts do that.  &lt;strong&gt;Do YOU&lt;/strong&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/crush-dev-to-posts.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/crush-dev-to-posts/.png</cover_image></item><item><title><![CDATA[Review of the git-auto-commit-action]]></title><description><![CDATA[Check out the repo for git-auto-commit-action. It's a really cool GitHub action that will automatically commit files changed during the…]]></description><link>https://waylonwalker.com/git-auto-commit-action-review/</link><guid isPermaLink="false">https://waylonwalker.com/git-auto-commit-action-review/</guid><pubDate>Mon, 03 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Check out the repo for &lt;a href=&quot;https://github.com/stefanzweifel/git-auto-commit-action&quot;&gt;git-auto-commit-action&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&apos;s a really cool GitHub action that will automatically commit files changed during the action.  I was using this to render a new readme based on a template.&lt;/p&gt;
&lt;p&gt;This has been by far the easiest way to commit back to a repo that I have seen.  Other patterns often require fully setting up the git user and everything.  While it&apos;s not all that hard, this action already has all of that covered.&lt;/p&gt;
&lt;p&gt;You must give it a commit message and thats it.  Optionally you can configure a number of things.  Its possible to configure the &lt;code class=&quot;language-text&quot;&gt;commit_user_name&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;commit_user_email&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;commit_author&lt;/code&gt;.  I often also scope the &lt;code class=&quot;language-text&quot;&gt;file_pattern&lt;/code&gt; to a certain subset of files.&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/github-actions-syntax&quot;&gt;
  &lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/github-actions-syntax-rm.png&quot; alt=&quot;GitHub Actions Syntax article card&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&apos;re new to actions check out this article on using actions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/github-actions-syntax&quot;&gt;
  &lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/github-actions-syntax-rm.png&quot; alt=&quot;GitHub Actions Syntax article card&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&apos;re new to actions check out this article on using actions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;You do need to be careful to checkout the repo just a bit different than normal.&lt;/p&gt;
&lt;h2&gt;Limitations &amp;#x26; Gotchas&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;directly from the repo&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Checkout the correct branch&lt;/h3&gt;
&lt;p&gt;You must use &lt;code class=&quot;language-text&quot;&gt;action/checkout@v2&lt;/code&gt; or later versions to checkout the repository. In non-push events, such as pull_request, make sure to specify the ref to checkout:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@v2
  &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; github.head_ref &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You have to do this do avoid that the &lt;code class=&quot;language-text&quot;&gt;checkout&lt;/code&gt;-Action clones your repository in a detached state.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;from the repo&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; stefanzweifel/git&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;auto&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;commit&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;action@v4
  &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# Required&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Apply automatic changes

    &lt;span class=&quot;token comment&quot;&gt;# Optional branch to push to, defaults to the current branch&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; feature&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;123&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Optional options appended to `git-commit`&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# See https://git-scm.com/docs/git-commit for a list of available options&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;commit_options&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;--no-verify --signoff&apos;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Optional glob pattern of files which should be added to the commit&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# See the `pathspec`-documentation for git&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; src/&lt;span class=&quot;token important&quot;&gt;*.js&lt;/span&gt; tests/&lt;span class=&quot;token important&quot;&gt;*.js&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Optional local file path to the repository&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .

    &lt;span class=&quot;token comment&quot;&gt;# Optional commit user and author settings&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;commit_user_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; My GitHub Actions Bot
    &lt;span class=&quot;token key atrule&quot;&gt;commit_user_email&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; my&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;github&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;actions&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;bot@example.org
    &lt;span class=&quot;token key atrule&quot;&gt;commit_author&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Author &amp;lt;actions@github.com&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Optional tag message&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# Action will create and push a new tag to the remote repository and the defined branch&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;tagging_message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;v1.0.0&apos;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Optional options appended to `git-push`&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;push_options&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;--force&apos;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Optional: Disable dirty check and always try to create a commit and push&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;skip_dirty_check&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;More Actions&lt;/h2&gt;
&lt;p&gt;If you&apos;re new to actions check out these articles on using actions.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://waylonwalker.com/four-github-actions-website&quot;&gt;
      &lt;img style=&quot;width:250px; max-width:80%; margin: auto; float: left&quot; src=&quot;https://waylonwalker.com/four-github-actions-website-rm.png&quot; alt=&quot;GitHub Actions Syntax article card&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://waylonwalker.com/four-github-actions-python&quot;&gt;
      &lt;img style=&quot;width:250px; max-width:80%; margin: auto; float: right;&quot; src=&quot;https://waylonwalker.com/four-github-actions-python-rm.png&quot; alt=&quot;GitHub Actions Syntax article card&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/git-auto-commit-action-review.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/git-auto-commit-action-review/.png</cover_image></item><item><title><![CDATA[Black Tech Pipeline]]></title><description><![CDATA[Based on an episode of react podcast. 🎙 Listen to the full episode. So Inspirational I was particularly inspired by @chantastic episode 10…]]></description><link>https://waylonwalker.com/pariss-athena-on-black-tech-pipeline/</link><guid isPermaLink="false">https://waylonwalker.com/pariss-athena-on-black-tech-pipeline/</guid><pubDate>Mon, 03 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;Based on an episode of react podcast.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;🎙 Listen to the full &lt;a href=&quot;https://reactpodcast.simplecast.com/episodes/103&quot;&gt;episode&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;So Inspirational&lt;/h2&gt;
&lt;p&gt;I was particularly inspired by &lt;a href=&quot;https://twitter.com/chantastic&quot;&gt;@chantastic&lt;/a&gt; episode 103 of the react podcast with &lt;a href=&quot;https://twitter.com/ParissAthena&quot;&gt;@ParissAthena&lt;/a&gt;.  They spoke about the black tech pipeline as well as Diversity, Equity, and Inclusion.  Pariss is quite an inspiration.  She has done so much work to create a better place for POC in tech.  I like that not only is she helping them get jobs but acting as a mentor for their first few months on the job to make sure that they are able to find their place and fit in.&lt;/p&gt;
&lt;h2&gt;Losing their culture&lt;/h2&gt;
&lt;p&gt;One thing that Michael brought up was the feeling he gets when he has other Asian friends to collaborate with at work is just a feeling of fitting in.  All too often he feels like he has to put on this persona of &quot;Hamburgers and Beer are my favorite thing, like all the time&quot; just to fit in.&lt;/p&gt;
&lt;h2&gt;Growing up in Rural America (me)&lt;/h2&gt;
&lt;p&gt;I grew up in a very rural part of the United States Dominated by Whites with a prominent Mexican community, there was almost no Asian or Black.  I can&apos;t tell you how many times I heard, &quot;I have this friend John, He&apos;s black, but he&apos;s not really black.&quot;  I will say that I was never quite this low, but growing up in a region where this was the norm, I probably wasn&apos;t the best ambassador either.&lt;/p&gt;
&lt;p&gt;Years later I recall taking some training for work that could not have described the people I grew up with better.  It described rural parts of the United States as completely accepting of any POC as long as they completely leave their culture behind.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;I have this friend John, He&apos;s black, but he&apos;s not really black.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;I heard this statement far too many times coming from rural United States&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Thinking a little bit more into this statement I realize that as a culture Rural America was very open to POC, but &lt;strong&gt;not&lt;/strong&gt; &lt;strong&gt;at&lt;/strong&gt; &lt;strong&gt;all&lt;/strong&gt; open to their &lt;strong&gt;culture&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This is where a lot of what we were taught in school in the &apos;90s and &apos;00s falls short.  We were so heavily focused on, &lt;em&gt;&quot; I don&apos;t see color&quot;&lt;/em&gt;.  We were taught that race was all about color, having friends of color, and treating everyone equally.  But I think that not seeing color puts us in a situation of not really treating everyone equally.  Their color may have been seen as equal, but their culture wasn&apos;t.&lt;/p&gt;
&lt;p&gt;We have failed to embrace others the way we would want them to embrace us.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Hamburgers and Beer are my favorite thing, like all the time&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is where I really connected with Michael&apos;s statement &quot;Hamburgers and Beer are my favorite thing, like all the time&quot;.  So often we can look past color, but we completely miss making a real connection with other cultures.&lt;/p&gt;
&lt;h2&gt;Welcome Everyone&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Like, really welcome them.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Further, into the episode, Pariss spoke about being hired into tech and feeling left out of the conversation because she didn&apos;t feel like she fit in.  She would hire in with a non-POC on the same day and felt like people would stare at her like a zoo animal while treating the other new hire as a real person.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;people would stare at her like a zoo animal&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Take Action&lt;/h2&gt;
&lt;p&gt;I know that I do not want to make anyone on my team feel like a zoo animal.  I feel like listening to this episode gave me a bit of perspective into what it might be like to be just a bit different than everyone else.  I really appreciate the both of them for being so open about sharing their experiences.  I will definitely think of ways that I can make any new hire just a bit more welcome next time.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;For this post don&apos;t follow me on Twitter, don&apos;t join my newsletter.&lt;/p&gt;
&lt;p&gt;Share the episode with a friend.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://reactpodcast.simplecast.com/episodes/103&quot;&gt;react podcast 103&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/ParissAthena&quot;&gt;@ParissAthena&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/chantastic&quot;&gt;@chantastic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sign up for the &lt;a href=&quot;https://blacktechpipeline.substack.com/p/coming-soon&quot;&gt;Black Tech Pipeline Newsletter&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Follow them they are some amazing people.&lt;/h2&gt;
&lt;p&gt;I have been trying to build out the content in mine.  I later found this is called a shadow newsletter or evergreen newsletter.  I will say that it gets tough to keep up with.  I&apos;ve been trying to do it weekly, but have definitely had some folks get ahead of my pace, I&apos;ll have to figure out how to split the out and resend articles they missed.&lt;/p&gt;
&lt;p&gt;-- for yours --&lt;/p&gt;
&lt;p&gt;I like the branding that you have put into it, and how it matches yoru cover images elsewhere.&lt;/p&gt;
&lt;p&gt;I like how you have included sections of posts from various places that pull me in and make me want to go see more.&lt;/p&gt;
&lt;p&gt;your video to @WellMax81 is amazing, do more of those.&lt;/p&gt;
&lt;p&gt;One thing, I am not sure if there is a &quot;right&quot; direction with this, but it doesnt give me any new content.  If I were to have been following you everywhere I would have likely seen a lot of this already.  That might make me wonder why I am subscribed over time.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/pariss-athena-on-black-tech-pipeline.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/pariss-athena-on-black-tech-pipeline/.png</cover_image></item><item><title><![CDATA[What's New in Kedro 0.16.4]]></title><description><![CDATA[If we take a look at the release notes I see one major feature improvement on the list, auto-discovery of hooks. This one comes a bit…]]></description><link>https://waylonwalker.com/whats-new-in-kedro-0164/</link><guid isPermaLink="false">https://waylonwalker.com/whats-new-in-kedro-0164/</guid><pubDate>Sat, 01 Aug 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;If we take a look at the &lt;a href=&quot;https://github.com/quantumblacklabs/kedro/blob/master/RELEASE.md&quot;&gt;release notes&lt;/a&gt; I see one &lt;strong&gt;major&lt;/strong&gt; feature improvement on the list, auto-discovery of hooks.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;##&lt;/span&gt; Major features and improvements&lt;/span&gt;

&lt;span class=&quot;token list punctuation&quot;&gt;*&lt;/span&gt; Enabled auto-discovery of hooks implementations coming from installed plugins.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This one comes a bit surprising as it was just casually mentioned in &lt;a href=&quot;https://github.com/quantumblacklabs/kedro/issues/435&quot;&gt;#435&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro/issues/435&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/kedro-435.png&quot; alt=&quot;auto enabled plugins mentioned in issue 435&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Think pytest&lt;/h2&gt;
&lt;p&gt;As mentioned in &lt;a href=&quot;https://github.com/quantumblacklabs/kedro/issues/435&quot;&gt;#435&lt;/a&gt; this is the model that pytest uses. Not all plugins automatically start doing things right out of the box but require a CLI argument.&lt;/p&gt;
&lt;h2&gt;simplicity&lt;/h2&gt;
&lt;p&gt;It feels a bit crazy that simply installing a package will change the way that your pipeline gets executed. I do like that it requires just a bit less reaching into the framework stuff for the average user. Most folks will be able to write in the catalog and nodes without much change to the rest of the project.&lt;/p&gt;
&lt;h2&gt;Implementation&lt;/h2&gt;
&lt;p&gt;Reading through the &lt;a href=&quot;https://kedro.readthedocs.io/en/stable/07_extend_kedro/05_plugins.html#hooks&quot;&gt;docs&lt;/a&gt;, they show us that we can make our hooks automatically register by adding a &lt;code class=&quot;language-text&quot;&gt;kedro.hooks&lt;/code&gt; endpoint that points to a &lt;em&gt;singleton&lt;/em&gt; instance of our hook.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;from the docs&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;setup&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    entry_points&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;kedro.hooks&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;plugin_name = plugin_name.plugin:hooks&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; logging

&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;framework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hooks &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; hook_impl

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyHooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;after_catalog_created&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# pylint: disable=unused-argument&lt;/span&gt;
        logging&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;info&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Reached after_catalog_created hook&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

hooks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; MyHooks&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Careful with the singletons&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;hook authors beware&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I will be a bit cautious before installing a plugin that is automatically registered. I know its not a common pattern, but if you were to leverage any part of two kedro projects at the same time, and project-specific data was stored in the instance of the hook it will likely be broken.&lt;/p&gt;
&lt;p&gt;As long as the hook doesn&apos;t store data on the instance you will be ok. Hooks like what they have in the examples will be ok. They generally just take some information from the lifecycle arguments and do something at their prescribed lifecycle point.&lt;/p&gt;
&lt;p&gt;Many of the hooks I am seeing in the wild are already more complicated and require the hooks author to utilize an &lt;code class=&quot;language-text&quot;&gt;__init__&lt;/code&gt; method and store data on the instance. If you were to do this on two pipelines simultaneously it would break.&lt;/p&gt;
&lt;h2&gt;Can my hook be auto-discovered&lt;/h2&gt;
&lt;p&gt;If your hook doesn&apos;t include a &lt;code class=&quot;language-text&quot;&gt;__init__&lt;/code&gt; method its a fairly easy yes, otherwise be aware of the potential dangers of passing singleton on to your users.&lt;/p&gt;
&lt;h2&gt;Use Virtual environments&lt;/h2&gt;
&lt;p&gt;Whatever virtual environment manager you use, it is more important than ever to make sure you &lt;strong&gt;DO NOT&lt;/strong&gt; install plugins in your global environment. Generally, you should always run projects &lt;em&gt;even toys or tests&lt;/em&gt; in a &lt;strong&gt;virtual&lt;/strong&gt;  &lt;strong&gt;environemnt&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I use conda&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n my-sample-env &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt; -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Overall&lt;/h2&gt;
&lt;p&gt;I think this is a really interesting direction for the project to go to. Hooks are still really early. The implementation is good, but I foresee us getting some more functionality that may require us to rely on the &lt;code class=&quot;language-text&quot;&gt;__init__&lt;/code&gt; method a little less.  I think there are going to be some really cool hooks that can leverage the simplicity of auto-discoverability.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/whats-new-in-kedro-0164.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/whats-new-in-kedro-0164/.png</cover_image></item><item><title><![CDATA[Integration testing with Python, TestProject.io, and GitHub Actions]]></title><description><![CDATA[As I continue to build out waylonwalker.com I sometimes run into some errors that are not caught because I do not have good testing…]]></description><link>https://waylonwalker.com/testproject-io-py-actions/</link><guid isPermaLink="false">https://waylonwalker.com/testproject-io-py-actions/</guid><pubDate>Mon, 27 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;As I continue to build out &lt;a href=&quot;https://waylonwalker.com/&quot;&gt;waylonwalker.com&lt;/a&gt; I sometimes run into some errors that are not caught because I do not have good testing implemented.  I want to explore some integration testing options using GitHub&apos;s actions.&lt;/p&gt;
&lt;p&gt;Running integration tests will not prevent bugs from happening completely, but it will allow me to quickly spot them and rollback.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🤔 What to test first?&lt;/h2&gt;
&lt;p&gt;The very first thing that comes to my mind is anything that is loaded or ran client-side.  Two things quickly came to mind here.  I run gatsby so most of my content is statically rendered, and it yells at me if something isn&apos;t as expected.  For performance reasons I lazy load cards on my blogroll, loading all of the header images gets heavy and kills lighthouse (if anyone actually cares). I am also loading some information from the top open-source libraries that I have created.  To prevent the need to rebuild the whole site to get the latest information I am just using the GitHub API client-side.&lt;/p&gt;
&lt;p&gt;things I was looking for from features to test&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;client-side interactions&lt;/li&gt;
&lt;li&gt;external API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;features on my blog to consider testing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lazy-loaded blog cards&lt;/li&gt;
&lt;li&gt;GitHub Repos&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Repo Cards&lt;/h2&gt;
&lt;p&gt;I chose to start with the GitHub repos as they seemed a bit more straight forward, and it&apos;s been a while since I have done any selenium.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;https://waylonwalker.com/open-source-cards.png&quot; style=&quot;width:600px; max-width:80%; margin: auto;&quot; alt=&quot;Open Source cards as they look on waylonwalker.com&quot;&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;here is what the GitHub repo cards look like&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;TestProject.io&lt;/h2&gt;
&lt;p&gt;I am trying out &lt;a href=&quot;https://TestProject.io&quot;&gt;TestProject.io&lt;/a&gt; for the first time on this project.  My experience so far has been top-notch.  There was an existing suite of docker images/files set up to run the TestProject agent in a docker container alongside headless chrome and firefox drivers.  The first thing that you are going to need is a &lt;a href=&quot;https://app.TestProject.io/#/integrations/sdk&quot;&gt;TP_DEV_TOKEN &lt;/a&gt; and &lt;a href=&quot;https://app.TestProject.io/#/integrations/api&quot;&gt;TP_API_KEY&lt;/a&gt;.  These will give TestProject access to your account so that it can automatically post results to your &lt;a href=&quot;https://app.TestProject.io/#/reports&quot;&gt;dashboard&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://app.TestProject.io/#/integrations/sdk&quot;&gt;TP_DEV_TOKEN &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://app.TestProject.io/#/integrations/api&quot;&gt;TP_API_KEY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Put these in secrets in your repo&lt;/h3&gt;
&lt;p&gt;In your GitHub repo go to &lt;code class=&quot;language-text&quot;&gt;settings&amp;gt;Secrets&lt;/code&gt;, or append &lt;code class=&quot;language-text&quot;&gt;settings/secrets&lt;/code&gt; to the URL to your repo, and add the tokens.  This will give GitHub safe access to them without them being available to the public, contributors, log files, or anything.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;https://waylonwalker.com/test-waylonwalker-com-secrets.png&quot; style=&quot;width:600px; max-width:80%; margin: auto;&quot; alt=&quot;Secrets panel in the GitHub Repo&quot;&gt;
&lt;/p&gt;
&lt;h2&gt;Setup Dev&lt;/h2&gt;
&lt;p&gt;To expedite development I went ahead and set up development environment that I could log into on Digital Ocean.  This allowed me to get all of my tests working a bit quicker than just running them through GitHub, but being as similar as possible.  This allowed me to learn the ins and outs of setting up TestProject without needing to do a full install every time through Github&apos;s actions.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/notes/new-machine-tpio&quot;&gt;
  &lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/new-machine-tpio-rm.png&quot; alt=&quot;Test Project Dev Machine setup notes card&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am not going to go into full dev machine setup here, but you can read my &lt;a href=&quot;https://waylonwalker.com/notes/new-machine-tpio&quot;&gt;setup notes&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;🐍 Pytest&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;you can see all of the tests ran with pytest on &lt;a href=&quot;https://github.com/waylonwalker/waylonwalker-com-tests/tree/master/tests&quot;&gt;github&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I chose to go down the route of using pytest.  I really liked the idea of utilizing fixtures, automatically running my test functions, and utilizing a bit of the pytest reporting capabilities.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; per pytest standard practice I named the directory containing tests &lt;code class=&quot;language-text&quot;&gt;tests&lt;/code&gt;.  While this works, TestProject.io uses this director as the default name for the project.  If I were to go back I would either rename the directory to what I want to show up on TestProject.io or configure the project name inside of the config.&lt;/p&gt;
&lt;h2&gt;conftest.py&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;You can see the &lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/tests/conftest.py&quot;&gt;conftest.py&lt;/a&gt; live on GitHub.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;pytest automatically imports &lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/tests/conftest.py&quot;&gt;conftest.py&lt;/a&gt; modules from the same directory that you are working from.  It&apos;s common to place fixtures used across multiple files here.  I placed a driver fixture in this module so that as I create more tests it will be available everywhere by default.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;conftest.py stores fixtures for all modules in a directory.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# tests/conftest.py&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; time
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pytest
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; src&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TestProject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sdk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;drivers &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; web driver

&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@pytest&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fixture&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;creates a webdriver and loads the homepage&quot;&lt;/span&gt;
    driver &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; webdriver&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Chrome&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    driver&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;https://waylonwalker.com/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;yield&lt;/span&gt; driver
    driver&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;quit&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Look at the full version of &lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/tests/conftest.py&quot;&gt;conftest.py&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The above sample is a bit &lt;strong&gt;simplified&lt;/strong&gt;.  I ran into some inconsistencies in the real version and found that some tests had a better pass rate if I added a wait.  I ended up with a &lt;code class=&quot;language-text&quot;&gt;driver&lt;/code&gt; and a &lt;code class=&quot;language-text&quot;&gt;slow_driver&lt;/code&gt; fixture.&lt;/p&gt;
&lt;h2&gt;test_repos.py&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;see the full [testrepos.py](&lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/tests/test&quot;&gt;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/tests/test&lt;/a&gt;&lt;/em&gt;repos.py) on GitHub_&lt;/p&gt;
&lt;p&gt;I have initially set up 3 different tests for the repo cards.  I set a list of repos that I expect to show up in the cards.  These tests are quite easy to do with TestProject.io as it is using selenium and a headless browser to execute javascript under the hood.&lt;/p&gt;
&lt;p&gt;If you are not familiar a &lt;strong&gt;headless browser&lt;/strong&gt; runs the engine as your browser without a graphical user interface.  JavaScript gets fully loaded and parsed, and the dom is completely interactive programmatically.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
Test that GitHub repo data dynamically loads the client-side.
&quot;&quot;&quot;&lt;/span&gt;

REPOS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;find-kedro&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;kedro-static-viz&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;kedro-action&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;steel-toes&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test_repos_loaded&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;slow_driver&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
    Test that each repo-name exists as a title in one of the repo cards.

    On waylonwalker.com repo cards have a title with a class of &quot;repo-name&quot;
    &quot;&quot;&quot;&lt;/span&gt;
    repos &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; slow_driver&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_elements_by_class_name&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;repo-name&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# get innertext from elements&lt;/span&gt;
    header_text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        header&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; header &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; repos
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; repo &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; REPOS&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; repo &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; header_text


&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test_repo_description_loaded&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;slow_driver&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
    Test that each repo has a description longer than 10 characters

    On waylonwalker.com repo cards have a descriptiion with a class of &quot;repo-description&quot;
    &quot;&quot;&quot;&lt;/span&gt;
    repo_elements &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; slow_driver&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_elements_by_class_name&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;repo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; el &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; repo_elements&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        desc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; el&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_element_by_class_name&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;repo-description&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;desc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test_repo_stars_loaded&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;slow_driver&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
    Ensure that stars are properly parsed from the API and loaded client-side

    On waylonwalker.com repo cards have a stars element with a class of &quot;repo-stars&quot; and
    is displayed as &quot;n stars&quot;
    &quot;&quot;&quot;&lt;/span&gt;
    repo_elements &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; slow_driver&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_elements_by_class_name&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;repo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; el &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; repo_elements&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        stars &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; el&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_element_by_class_name&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;repo-stars&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        num_stars&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stars&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num_stars&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; label &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;stars&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Forum&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://forum.TestProject.io/t/install-agent-inside-github-actions/2334/3&quot;&gt;forum.TestProject.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before jumping into the real action.  I quickly wanted to mention the &lt;strong&gt;amazing&lt;/strong&gt; ✨  discord server that they have going.&lt;/p&gt;
&lt;p&gt;I was a bit confused about how to set up TestProject.io inside of actions.  I was with a prompt response linking me to the exact example I needed.  The tests were written in java, but they had set up the docker-compose steps that I needed.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;GitHub Actions 🎬&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/.github/workflows/test-waylonwalker-com.yml&quot;&gt;test-waylonwalker-com.yml&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;GitHub actions are a continuous integration, continuous delivery service by GitHub that will spin up a VM and run a set of steps upon a number of triggers including push, pull request, and schedule.&lt;/h2&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https://waylonwalker.com/github-actions-syntax&quot;&gt;
  &lt;img style=&quot;width:500px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/github-actions-syntax-rm.png&quot; alt=&quot;GitHub Actions Syntax article card&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&apos;re new to actions check out this article on using actions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Now that I have my GitHub repo setup with my &lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/tree/master/tests&quot;&gt;tests&lt;/a&gt; successfully running in pytest, let&apos;s get it running inside of GitHub actions automatically.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Test WaylonWalker.com

&lt;span class=&quot;token comment&quot;&gt;# Controls when the action will run. Triggers the workflow on push or pull request&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# events but only for the master branch&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; main &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; main &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;*/10 * * * *&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see in the section above I have set up to run every time there is a push to or pull request open to main.  I also set a fairly aggressive test schedule to run every &lt;strong&gt;10&lt;/strong&gt; &lt;strong&gt;minutes&lt;/strong&gt;.  For now, this is just to build confidence in the tests and get more data in the reports to explore.  I will likely turn this down later.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest

    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@main
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/setup&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;python@v2
      &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;python-version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;3.8&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pip install &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;r requirements.txt
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Run TestProject Agent
      &lt;span class=&quot;token key atrule&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;TP_API_KEY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.TP_API_KEY &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# &amp;lt; Let Secrets handle your keys&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
        envsubst &amp;lt; .github/ci/docker-compose.yml &gt; docker-compose.yml
        cat docker-compose.yml
        docker-compose -f docker-compose.yml up -d&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Wait for Agent to Register
      &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bash .github/ci/wait_for_agent.sh
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pytest
      &lt;span class=&quot;token key atrule&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;TP_DEV_TOKEN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.TP_DEV_TOKEN &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# &amp;lt; Let Secrets handle your tokens&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;TP_AGENT_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; http&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//localhost&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8585&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the test job you can see that we have rendered the &lt;a href=&quot;https://app.TestProject.io/#/integrations/api&quot;&gt;TP_API_KEY&lt;/a&gt; into the &lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/.github/ci/docker-compose.yml&quot;&gt;docker-compose.yml&lt;/a&gt; using &lt;code class=&quot;language-text&quot;&gt;envsubst&lt;/code&gt; file so that TestProject has access to it.  We have also exposed our &lt;a href=&quot;https://app.TestProject.io/#/integrations/sdk&quot;&gt;TP_DEV_TOKEN &lt;/a&gt; to pytest.&lt;/p&gt;
&lt;h2&gt;docker-compose.yml&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/.github/ci/docker-compose.yml&quot;&gt;docker-compose.yml&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The following &lt;a href=&quot;https://github.com/WaylonWalker/waylonwalker-com-tests/blob/master/.github/ci/docker-compose.yml&quot;&gt;docker-compose.yml&lt;/a&gt; file was graciously contributed by &lt;a href=&quot;https://github.com/vitalybu&quot;&gt;@vitalybu&lt;/a&gt; in the &lt;a href=&quot;https://github.com/testproject-io/java-sdk/blob/master/.github/ci/docker-compose.yml&quot;&gt;testproject-io/java-sdk&lt;/a&gt; repo.  It sets up a template with the &lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;TP_API_KEY&lt;/code&gt;&lt;/strong&gt; as a variable for envsubst, headless browsers for chrome and firefox, and the TestProject.io agent.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;3.1&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;testproject-agent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; testproject/agent&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;latest
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; testproject&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;agent
    &lt;span class=&quot;token key atrule&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; chrome
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; firefox
    &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;TP_API_KEY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${TP_API_KEY}&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;TP_AGENT_TEMP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;true&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;TP_SDK_PORT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8686&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;CHROME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;chrome:4444&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;CHROME_EXT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;localhost:5555&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;FIREFOX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;firefox:4444&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;FIREFOX_EXT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;localhost:6666&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8585:8585&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8686:8686&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; selenium/standalone&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;chrome
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; /dev/shm&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/dev/shm
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;5555:4444&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;firefox&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; selenium/standalone&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;firefox
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; /dev/shm&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/dev/shm
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;6666:4444&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;⌚ Waiting for the Agent to register&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://waylonwalker.com/waitforagent.sh&quot;&gt;wait for agent.sh&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I think the most interesting part of the workflow above is how we wait for the agent to register.  The shell script is a bit terse, but it looks for exceeding the &lt;code class=&quot;language-text&quot;&gt;max_attempts&lt;/code&gt; allowed or that the agent has started by using its &lt;code class=&quot;language-text&quot;&gt;/api/status&lt;/code&gt; rest API.  This prevents us from wasting too much time by setting a big wait, or trying to move on too early and running pytest without a running agent.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;kill &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;jobs&lt;/span&gt; -p&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&apos;&lt;/span&gt; EXIT
&lt;span class=&quot;token assign-left variable&quot;&gt;attempt_counter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;max_attempts&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; -p build/reports/agent
docker-compose -f docker-compose.yml logs -f &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tee&lt;/span&gt; build/reports/agent/log.txt&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; -s http://localhost:8585/api/status &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;.registered&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;${attempt_counter}&lt;/span&gt; -eq &lt;span class=&quot;token variable&quot;&gt;${max_attempts}&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Agent failed to register. Terminating...&quot;&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;attempt_counter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$((&lt;/span&gt;$attempt_counter&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;TestProject.io Dashboard 〽&lt;/h2&gt;
&lt;p&gt;One one of the coolest features that you get from TestProject.io are the &lt;a href=&quot;https://app.testproject.io/#/reports&quot;&gt;reports&lt;/a&gt; dashboard.  To me, this felt like a premium feature for &lt;strong&gt;free&lt;/strong&gt;.  Here you can see a time-series plot of your tests success rate over time.  It gives you a bit of an ability to slice in, but not a lot.  Some of the filters are pre-canned, like the past 2 days are past 30 days cannot be customized.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
  &lt;img style=&quot;width:800px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/tpio-test-repos.png&quot; alt=&quot;My Dashboard for test_repos&quot;&gt;
&lt;/p&gt;
&lt;h2&gt;A single test flow in the dashboard&lt;/h2&gt;
&lt;p&gt;As you drill in you can see individual tests that have been run, select them, and see individual reports for each test.  Personally I really like the layout on the side.  It converts the steps ran by the driver into a human-readable &lt;em&gt;flowchart&lt;/em&gt;, and each step can be opened up to see their values.  It would be nice if it picked up my pytest assertions, but picking up what it did was great.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
  &lt;img style=&quot;width:350px; max-width:80%; margin: auto;&quot; src=&quot;https://waylonwalker.com/test_repo_stars_loaded.png&quot; alt=&quot;driver flow of test_repo_stars_loaded&quot;&gt;
&lt;/p&gt;
&lt;h2&gt;Overall 😄&lt;/h2&gt;
&lt;p&gt;The experience I had setting up TestProject.io to run inside GitHub&apos;s actions was great.  It was fairly simple to set up and get running with many of the greatest integration testing tools of today, selenium, chrome, firefox.&lt;/p&gt;
&lt;p&gt;Now I am going to turn the test frequency down a bit.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;More Actions&lt;/h2&gt;
&lt;p&gt;If you&apos;re new to actions check out this article on using actions.&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
   &lt;td&gt;
      &lt;a href=&quot;https://waylonwalker.com/four-github-actions-website&quot;&gt;
      &lt;img style=&quot;margin: auto; float: left&quot; src=&quot;https://waylonwalker.com/four-github-actions-website-rm.png&quot; alt=&quot;GitHub Actions Syntax article card&quot;&gt;
      &lt;/a&gt;
   &lt;/td&gt;
   &lt;td&gt;
      &lt;a href=&quot;https://waylonwalker.com/four-github-actions-python&quot;&gt;
      &lt;img style=&quot;margin: auto; float: right;&quot; src=&quot;https://waylonwalker.com/four-github-actions-python-rm.png&quot; alt=&quot;GitHub Actions Syntax article card&quot;&gt;
      &lt;/a&gt;
   &lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/testproject-io-py-actions.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/testproject-io-py-actions/.png</cover_image></item><item><title><![CDATA[New Machine for developing Tests with TestProject.io]]></title><description><![CDATA[Today I setup a new machine on Digital Ocean to use with TestProject.io,  Here are my installation notes. envsubst < .github/ci/docker…]]></description><link>https://waylonwalker.com/new-machine-tpio/</link><guid isPermaLink="false">https://waylonwalker.com/new-machine-tpio/</guid><pubDate>Sat, 25 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Today I setup a new machine on Digital Ocean to use with TestProject.io,  Here are my installation notes.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; update &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; upgrade -y

&lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;zsh&lt;/span&gt;
chsh &lt;span class=&quot;token function&quot;&gt;zsh&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; -c &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; -fsSL https://starship.rs/install.sh &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;eval &quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;starship init &lt;span class=&quot;token function&quot;&gt;zsh&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.zshrc

&lt;span class=&quot;token comment&quot;&gt;# python&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; update
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python3-pip -y
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;alias python=python3&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.zshrc
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;alias pip=pip3&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.zshrc

&lt;span class=&quot;token comment&quot;&gt;# pipx&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python3-venv
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pipx
pipx &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; black
pipx &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; shell-functools
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; ipython


&lt;span class=&quot;token comment&quot;&gt;# docker&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; update
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; apt-transport-https ca-certificates &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; gnupg-agent software-properties-common
&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; -fsSL https://download.docker.com/linux/ubuntu/gpg &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; apt-key &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; -
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; add-apt-repository &lt;span class=&quot;token string&quot;&gt;&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;lsb_release -cs&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt; stable&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; update
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; docker-ce

&lt;span class=&quot;token comment&quot;&gt;# docker-compose&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; -L &lt;span class=&quot;token string&quot;&gt;&quot;https://github.com/docker/compose/releases/download/1.25.5/docker-compose-&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;uname&lt;/span&gt; -s&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;-&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;uname&lt;/span&gt; -m&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; -o /usr/local/bin/docker-compose
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; +x /usr/local/bin/docker-compose

&lt;span class=&quot;token comment&quot;&gt;# configure git&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global user.name &lt;span class=&quot;token string&quot;&gt;&quot;Waylon Walker&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global user.email waylon@waylonwalker.com

&lt;span class=&quot;token comment&quot;&gt;# fzf&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone --depth &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

&lt;span class=&quot;token comment&quot;&gt;# forgit&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone https://github.com/wfxr/forgit ~/.forgit
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;. ~/.forgit/forgit.plugin.zsh&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.zshrc

&lt;span class=&quot;token comment&quot;&gt;# ag&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; silversearcher-ag

&lt;span class=&quot;token comment&quot;&gt;# bat&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; bat
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alias cat=batcat&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.zshrc

&lt;span class=&quot;token comment&quot;&gt;# testproject.io tokens&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;export TP_AGENT_ALIAS=&quot;Digital Ocean Agent&quot;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; ~/.zshrc
echo &quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;TP_AGENT_API_KEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;your-key&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; ~/.zshrc
echo &quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;TP_DEV_TOKEN&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;your-token&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&quot; ~/.zshrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;envsubst &amp;#x3C; .github/ci/docker-compose.yml &gt; docker-compose.yml&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# .github/ci/docker-compose.yml&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;3.1&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;testproject-agent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; testproject/agent&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;latest
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; testproject&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;agent
    &lt;span class=&quot;token key atrule&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; chrome
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; firefox
    &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;TP_API_KEY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${TP_API_KEY}&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;TP_AGENT_ALIAS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;GitHub Action Agent&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;TP_AGENT_TEMP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;true&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;TP_SDK_PORT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8686&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;CHROME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;chrome:4444&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;CHROME_EXT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;localhost:5555&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;FIREFOX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;firefox:4444&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;FIREFOX_EXT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;localhost:6666&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8585:8585&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8686:8686&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; selenium/standalone&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;chrome
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; /dev/shm&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/dev/shm
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;5555:4444&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;firefox&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; selenium/standalone&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;firefox
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; /dev/shm&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/dev/shm
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;6666:4444&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose -f docker-compose.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/new-machine-tpio.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/new-machine-tpio/.png</cover_image></item><item><title><![CDATA[🐍 Practice Python Online]]></title><description><![CDATA[When learning a new skill it's important to practice along the way. In order for me to show up to practice I need to make it easy to show up…]]></description><link>https://waylonwalker.com/practice-python-online/</link><guid isPermaLink="false">https://waylonwalker.com/practice-python-online/</guid><pubDate>Sat, 25 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;When learning a new skill it&apos;s important to practice along the way. In order for me to show up to practice I need to make it easy to show up. An easy way to show up to practice with python is to use an online repl. With these, you can try out something quick. Sometimes I see snippets from blogs or tweets and I need to try them out for myself to really understand.&lt;/p&gt;
&lt;h2&gt;Three online REPLS&lt;/h2&gt;
&lt;p&gt;Here are three different options that I have used in the past to try out something at some various levels. I am sure there are plenty more, but these are three that I have tried. I am not covering all of them, because It&apos;s been a while since I have used one other than &lt;a href=&quot;https://repl.it&quot;&gt;repl.it&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://python.org/shell/&quot;&gt;python.org/shell/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://repl.it&quot;&gt;repl.it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pythonanywhere.com&quot;&gt;pythonanywhere.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;repl.it&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://repl.it&quot;&gt;repl.it&lt;/a&gt; has been my go-to place to practice python away from my local machine. It&apos;s super quick to spin up a new &quot;project&quot; add files, install libraries, and run a script. It&apos;s not quite as nice as having all of my personal keyboard shortcuts and extensions, but its the closest thing I have found.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/repl-it.gif&quot; alt=&quot;repl.it example&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Show up for Practice&lt;/h2&gt;
&lt;p&gt;The best way to learn something new in tech is to get your own fingers on the keyboard and start trying new things. Reading and watching videos is great to start, but to get a deep understanding for yourself you need to get your fingers on the keyboard. Make it easy for yourself and find several options that work well for you. &lt;a href=&quot;https://repl.it&quot;&gt;repl.it&lt;/a&gt; is one tool that works well for me.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/practice-python-online.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/practice-python-online/.png</cover_image></item><item><title><![CDATA[Kedro Catalog]]></title><description><![CDATA[I am exploring a kedro catalog meta data hook, these are some notes about what I am thinking. Process metadata will be attached to the…]]></description><link>https://waylonwalker.com/kedro-catalog/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-catalog/</guid><pubDate>Fri, 24 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I am exploring a kedro catalog meta data hook, these are some notes about what I am thinking.&lt;/p&gt;
&lt;h2&gt;Process&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;metadata will be attached to the dataset object under a &lt;code class=&quot;language-text&quot;&gt;.metadata&lt;/code&gt; attribute&lt;/li&gt;
&lt;li&gt;metadata will be updated &lt;code class=&quot;language-text&quot;&gt;after_node_run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;metadata will be empty until a pipeline is ran with the hook on&lt;/li&gt;
&lt;li&gt;optionally a function to add metadata will be added&lt;/li&gt;
&lt;li&gt;metadata will be stored in a file next to the &lt;code class=&quot;language-text&quot;&gt;filepath&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;meta&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Problems This Hook Should solve&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;what datasets have a columns with &lt;code class=&quot;language-text&quot;&gt;sales&lt;/code&gt; in the name&lt;/li&gt;
&lt;li&gt;what datasets were updated after last tuesday&lt;/li&gt;
&lt;li&gt;which pipeline node created this dataset&lt;/li&gt;
&lt;li&gt;how many rows are in this dataset (without reloading all datasets)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;implementation details&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;metadata will be attached to each dataset as a dictionary&lt;/li&gt;
&lt;li&gt;list/dict comprehensions can be used to make queries&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Metadata to Capture&lt;/h2&gt;
&lt;p&gt;try pandas method -&gt; try spark -&gt; try dict/list -&gt; none&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;column names&lt;/li&gt;
&lt;li&gt;length&lt;/li&gt;
&lt;li&gt;Null count&lt;/li&gt;
&lt;li&gt;created_by node name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Database?&lt;/h2&gt;
&lt;p&gt;Is there an easy way to create a nosql database in memory from a a list of dictionaries?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.org/project/list-dict-DB/&quot;&gt;list-dict-DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dataset.readthedocs.io/en/latest/&quot;&gt;dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tinydb.readthedocs.io/en/latest/&quot;&gt;TinyDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-catalog.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-catalog/.png</cover_image></item><item><title><![CDATA[Refactoring your blog urls]]></title><description><![CDATA[mypy Mypy's config parser seems to be one of the most complex.  This is likely in part to it having the largest backwards compatability of…]]></description><link>https://waylonwalker.com/how-python-tools-config/</link><guid isPermaLink="false">https://waylonwalker.com/how-python-tools-config/</guid><pubDate>Tue, 21 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;mypy&lt;/h2&gt;
&lt;p&gt;Mypy&apos;s config parser seems to be one of the most complex.  This is likely in part to it having the largest backwards compatability of all projects that I looked at.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/python/mypy/blob/master/mypy/config_parser.py&quot;&gt;mypy/config_parser&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;flake8&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/PyCQA/flake8/blob/master/src/flake8/options/config.py&quot;&gt;options/config.py&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;black&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/psf/black/blob/master/src/black/__init__.py#L277-L331&quot;&gt;black&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;portray&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;only uses pyproject.toml&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/timothycrosley/portray/blob/master/portray/config.py&quot;&gt;portray/config.py&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;interrogate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;only uses pyproject.toml&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/how-python-tools-config.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/how-python-tools-config/.png</cover_image></item><item><title><![CDATA[Edit On GitHub]]></title><description><![CDATA[I recently added a button to my blog, and subsequently my posts on DEV.to.  It's the best thing that I have done for it in a while.  It…]]></description><link>https://waylonwalker.com/edit-on-github/</link><guid isPermaLink="false">https://waylonwalker.com/edit-on-github/</guid><pubDate>Sat, 18 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I recently added a button to my blog, and subsequently my posts on &lt;a href=&quot;https://dev.to/waylonwalker&quot;&gt;DEV.to&lt;/a&gt;.  It&apos;s the best thing that I have done for it in a while.  It makes it so easy to do quick edits.  &lt;/p&gt;
&lt;h2&gt;finding errors&lt;/h2&gt;
&lt;p&gt;I refer back to my old posts quite a bit, sometimes I find errors in them.  Honestly most of the time its too much effort to load up my editor make the change and &lt;code class=&quot;language-text&quot;&gt;git add&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;git commit&lt;/code&gt;.  It&apos;s not much, but when I am referring to my own post generally I am just trying to get something done and don&apos;t have time for that.&lt;/p&gt;
&lt;h2&gt;The slug&lt;/h2&gt;
&lt;p&gt;The slug that I am getting from gatsby is formatted as &lt;code class=&quot;language-text&quot;&gt;/blog/this-post/&lt;/code&gt;.  Note the trailing slash and missing file extension, thats where the &lt;code class=&quot;language-text&quot;&gt;${slug.slice(0, -1)}.md&lt;/code&gt; comes in.  &lt;/p&gt;
&lt;h2&gt;The Full Link&lt;/h2&gt;
&lt;p&gt;GitHub makes it super easy to form a URL that puts you right into edit mode on the exact post you are looking for.  This is format for the URL... you can always figure it out easily by clicking edit on one.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;https://github.com/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt;/edit/&amp;lt;branch&amp;gt;/&amp;lt;filepath&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The Final Result&lt;/h2&gt;
&lt;p&gt;Wrapping that URL up in a short snippet gave me the following result.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; display&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;flex&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; justify&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;center&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; textAlign&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;center&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; margin&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;3rem auto&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;img&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;👀&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
  see an issue, edit this post on 
  &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; 
    &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.md&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; 
    &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;edit post url&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; 
    &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;edit this post&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;FiGithub&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt; 
  GitHub
  &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/sgqd23rbbusjpfxqr7bl.PNG&quot; alt=&quot;Edit on GitHub&quot;&gt;&lt;/p&gt;
&lt;p&gt;I know better than hard coding the GitHub url in, but I did it anyway, my personal site gets to be a bit of a rats nest of hotfixes over time.&lt;/p&gt;
&lt;p&gt;This was a super quick change that brought me a lot of value without much effort.  I will probably change up the styling/layout of it in the future. For now I have something that functions, and I can get back to creating content.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/edit-on-github.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/edit-on-github/.png</cover_image></item><item><title><![CDATA[Why use a cms]]></title><description><![CDATA[When first learning to code its very common to hard code everything right into the code. This happens with most folks in just about any…]]></description><link>https://waylonwalker.com/why-use-cms/</link><guid isPermaLink="false">https://waylonwalker.com/why-use-cms/</guid><pubDate>Tue, 14 Jul 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;When first learning to code its very common to hard code everything right into the code. This happens with most folks in just about any language. Whether its HTML or markdown for front end content, or even hardcoding parameters in our backend languages like python, or node.js.&lt;/p&gt;
&lt;h2&gt;🤷‍♀️ What&apos;s wrong with hard coding everything?&lt;/h2&gt;
&lt;p&gt;Hard coding everything right into your code makes it really hard for non-technical collaborators to join. It makes it nearly impossible to hand websites off to clients without needing to come back for routine updates.&lt;/p&gt;
&lt;p&gt;The cms generally come with a rich content editor that feels more like something most folks are used to. There are buttons for changing the font, font-size, adding images, bold, italics, etc.&lt;/p&gt;
&lt;h2&gt;Sometimes I don&apos;t feel technical&lt;/h2&gt;
&lt;p&gt;Even when you are developing for a technical audience there is a layer of polish that comes from giving them a nice interface to edit their content in. YouTube doesn&apos;t have you manually inserting records into the database to add a comment, or upload a new video, nor would anyone expect you to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/sgqd23rbbusjpfxqr7bl.PNG&quot; alt=&quot;Edit on GitHub&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I recently added an edit button on my posts that allows me to jump right into edit on GitHub.  I have used this so much, I should have done this long ago!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are times when I want to edit my blog on the go from my phone while on the go. I use &lt;a href=&quot;https://forestry.io&quot;&gt;forestry.io&lt;/a&gt; to do this for the most part. It gives me an image uploader, and a markdown editor to edit this blog right from my phone.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/2019-05-09%2010-40-11_forestry.io.png&quot; alt=&quot;forestry editor&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My Blog on forestry.io&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;What do they output&lt;/h2&gt;
&lt;p&gt;There are a number of different CMS&apos;s out there, and I haven&apos;t touched most of them. Some write content into a MySQL database while others kick out HTML or markdown to a git repo. I prefer the ones built off of a git repo for my site because I am cheap and I am not making anything from this blog yet, but you might want to check into some of the other options if you plan on handing your site off to a client.&lt;/p&gt;
&lt;h2&gt;🤑 pricing&lt;/h2&gt;
&lt;p&gt;Be aware of the various pricing models. They are priced every which way, per content editor, per site, per number of edits. Some offer free versions. Some are open source but require you to host it somewhere. Before you pick one make sure that you know your requirements.&lt;/p&gt;
&lt;h2&gt;CMS&apos;s are more norm than I realized&lt;/h2&gt;
&lt;p&gt;When I was first starting into web development, I was completely unaware of the concept of a CMS. I had thought that content needs to be in HTML, or markdown, with a few specific places that users could edit. This may have been the case many years ago, but not anymore. The first time I ever designed a website for someone other than myself I got quite a shock when I realized how many edits they wanted, and how un-appealing markdown is for most.&lt;/p&gt;
&lt;h2&gt;Where CMS&apos;s fall short 🍂&lt;/h2&gt;
&lt;p&gt;Please correct me if I am wrong here, I would love to be wrong on this. CMS&apos;s are not for developing the whole site. They hold data for content like site title, description, menu items, or blog posts. They don&apos;t necessarily give the user a full website designer, with drag and drop, and every widget imaginable. The web developer still needs to implement the site design and data integration.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/why-use-cms.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/why-use-cms/.png</cover_image></item><item><title><![CDATA[🐍 Parsing RSS feeds with Python]]></title><description><![CDATA[I am looking into a way to replace my google reader experience that I had back in 2013 before google took it from us.  I am starting by…]]></description><link>https://waylonwalker.com/parsing-rss-python/</link><guid isPermaLink="false">https://waylonwalker.com/parsing-rss-python/</guid><pubDate>Mon, 13 Jul 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I am looking into a way to replace my google reader experience that I had back in 2013 before google took it from us.  I am starting by learning how to parse feeds with python, and without much previous knowledge, it proved to be much easier than anticipated thanks to the &lt;code class=&quot;language-text&quot;&gt;feedparser&lt;/code&gt; library.&lt;/p&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;Install the feedparser library.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n reader &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt; -y
&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; activate reader
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; feedparser&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Get the content&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; feedparser
feed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedparser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parse&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://waylonwalker.com/rss.xml&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The feed object&lt;/h2&gt;
&lt;p&gt;The feed is a feedparser.FeedParserDict.  For all intents and purposes this seems to just behave like a dict with the following &lt;code class=&quot;language-text&quot;&gt;keys()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;feed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;keys&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;feed&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;entries&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;bozo&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;headers&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;etag&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;href&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;status&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;encoding&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;version&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;namespaces&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;content&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;feed&lt;/strong&gt; has some general information about the rss feed, but the meat of the feed is in &lt;strong&gt;entries&lt;/strong&gt;.  The rest of the keys weren&apos;t all that useful for me at the moment.&lt;/p&gt;
&lt;h2&gt;pulling multiple feeds&lt;/h2&gt;
&lt;p&gt;I grabbed a few popular RSS feeds that I was familiar with to get started.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;urls &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://waylonwalker.com/rss&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;https://joelhooks.com/rss.xml&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;https://swyx.io/rss.xml&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
feeds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;feedparser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parse&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;entries&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; url &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; urls&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I checked out the keys, all three had the following keys.  Mine also had the full post under &lt;code class=&quot;language-text&quot;&gt;&amp;#39;content&amp;#39;&lt;/code&gt;, this is because I added an extra &lt;code class=&quot;language-text&quot;&gt;custom_element&lt;/code&gt; for publishing to &lt;code class=&quot;language-text&quot;&gt;dev.to&lt;/code&gt; from an RSS feed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;feeds&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;keys&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; dict_keys&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;title_detail&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;summary&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;summary_detail&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;links&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;id&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;guidislink&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;published&apos;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;published_parsed&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;NOTE: dev.to/feed&lt;/h2&gt;
&lt;p&gt;I also pulled the &lt;a href=&quot;https://dev.to/feed&quot;&gt;dev.to/feed&lt;/a&gt;.  Since is it setup for more Authors it had a few extra keys.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;feedparser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parse&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://dev.to/feed&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;keys&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; dict_keys&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;title_detail&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;authors&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;author&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;author_detail&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;published&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;published_parsed&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &apos;links
&lt;span class=&quot;token string&quot;&gt;&apos;, &apos;&lt;/span&gt;link&lt;span class=&quot;token string&quot;&gt;&apos;, &apos;&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;, &apos;&lt;/span&gt;guidislink&lt;span class=&quot;token string&quot;&gt;&apos;, &apos;&lt;/span&gt;summary&lt;span class=&quot;token string&quot;&gt;&apos;, &apos;&lt;/span&gt;summary_detail&lt;span class=&quot;token string&quot;&gt;&apos;, &apos;&lt;/span&gt;tags&apos;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Combining Feeds&lt;/h2&gt;
&lt;p&gt;Now that I have a list of feeds, I can create a single feed sorted by date with a list comprehension.  Note I did need to pull in &lt;code class=&quot;language-text&quot;&gt;dateutil.parser&lt;/code&gt; to convert the date strings to datetime objects to be sorted.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; dateutil&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parser

feed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;item &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; feed &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; feeds &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; feed&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
feed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sort&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; dateutil&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parse&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;published&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reverse&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;115&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;published&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; feed&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;🙋\u200d♂️ Can Anyone Explain Twitter Cards to me?&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Sat, 11 Jul 2020 03:00:00 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://waylonwalker.com/explain-twitter-cards/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;How I Built My GitHub Profile&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Fri, 10 Jul 2020 03:00:00 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://waylonwalker.com/my-github-profile/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Lessons and Regrets from My $25000 Launch&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Fri, 03 Jul 2020 04:06:47 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://swyx.io/writing/coding-career-launch&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;SLIDES - understanding python *args and **kwargs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Thu, 02 Jul 2020 05:00:00 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://waylonwalker.com/python-args-kwargs-slides/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Launching the Coding Career Handbook!&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Wed, 01 Jul 2020 13:08:37 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://swyx.io/writing/launching-coding-career&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Gracefully adopt kedro, the catalog&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Mon, 29 Jun 2020 03:00:00 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://waylonwalker.com/graceful-kedro-catalog/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;🤓 What&apos;s on your GitHub Profile&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Mon, 29 Jun 2020 03:00:00 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://waylonwalker.com/whats-on-your-github-profile/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Versioned Docs in 30 Seconds with Amplify Console&apos;s Branch Subdomains&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Fri, 26 Jun 2020 16:34:09 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://swyx.io/writing/amplify-console-branch-subdomains&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;What&apos;s New in React&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Wed, 24 Jun 2020 00:00:00 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://swyx.io/speaking/react-whats-new&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Coding Careers - Vincit&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Wed, 24 Jun 2020 00:00:00 GMT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;link&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://swyx.io/speaking/coding-careers-vincit&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Decentralized Feed&lt;/h2&gt;
&lt;p&gt;I think the idea of RSS is super cool, and the idea that I can potentially create my own custom platform-agnostic decentralized feed is pretty cool.  I would love to have a google reader like experience back.&lt;/p&gt;
&lt;p&gt;This post was super fun to explore.  I used an external library (&lt;code class=&quot;language-text&quot;&gt;feedparser&lt;/code&gt;) to pull in the feeds, but other than that It was all vanilla python 3.8.  In DataScience we tend to get very &lt;code class=&quot;language-text&quot;&gt;DataFrame&lt;/code&gt; heavy and I miss working with vanilla datatypes sometimes.&lt;/p&gt;
&lt;h2&gt;Trying to step up your python game&lt;/h2&gt;
&lt;p&gt;While trying to step up your skills you will need lots of practice.  Its good to have several options to try out ideas quickly.  I often use repl.it, check out this post to see how I use it.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/practice-python-online/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/23d87d1abfcca3cc870dbd47fbdbc34e/630fb/practice-python-online-xmas2020.png&quot; alt=&quot;article cover for &amp;#x1F40D; Practice Python Online&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;&amp;#x1F40D; Practice Python Online&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    When learning a new skill it&amp;apos;s important to practice along the way. In order for me to show up to practice I need to make it easy to show up. An easy way to show up to practice with python is to use an online repl. With these you can try out something quick. Sometimes I see snippets from blogs or tweets and I need to try the out for myself to really understand.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;Not a sponsor REPL.it is a great way to practice.&lt;/p&gt;
&lt;/blockquote&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/parsing-rss-python.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/parsing-rss-python/.png</cover_image></item><item><title><![CDATA[Reader]]></title><description><![CDATA[Inputs The input will be a yaml file containing a list of  you want to stay up to date with.  Inside each item will be a url, and weight…]]></description><link>https://waylonwalker.com/reader/</link><guid isPermaLink="false">https://waylonwalker.com/reader/</guid><pubDate>Sun, 12 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Inputs&lt;/h1&gt;
&lt;p&gt;The input will be a yaml file containing a list of &lt;code class=&quot;language-text&quot;&gt;Items&lt;/code&gt; you want to stay up to date with.  Inside each item will be a url, and weight.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;max-entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;recipients&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; waylon@waylonwalker.com
&lt;span class=&quot;token key atrule&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;max-entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; README.md
&lt;span class=&quot;token key atrule&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;max-entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; feeds/feed.json
&lt;span class=&quot;token key atrule&quot;&gt;rss&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;max-entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; feeds/feed.xml
&lt;span class=&quot;token key atrule&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;max-entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        index.html

&lt;span class=&quot;token key atrule&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;Waylon Walker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//waylonwalker.com/rss.xml
    @_WaylonWalker&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;twitter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//twitter.com/_waylonwalker
    &lt;span class=&quot;token key atrule&quot;&gt;DEV Waylon Walker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//dev.to/waylonwalker
    &lt;span class=&quot;token key atrule&quot;&gt;Stack Overflow Kedro&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//stackoverflow.com/questions/tagged/kedro
    &lt;span class=&quot;token key atrule&quot;&gt;Kedro GitHub&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/quantumblacklabs/kedro
    Kedro Pypi
        &lt;span class=&quot;token key atrule&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//pypi.org/project/kedro/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Types&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;rss feed (primary source)&lt;/li&gt;
&lt;li&gt;youtube feed&lt;/li&gt;
&lt;li&gt;Stack Overflow tags&lt;/li&gt;
&lt;li&gt;GitHub repo activity&lt;/li&gt;
&lt;li&gt;pypi release&lt;/li&gt;
&lt;li&gt;dev.to post&lt;/li&gt;
&lt;li&gt;Twitter Search # user will need an api key&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Methodology&lt;/h1&gt;
&lt;p&gt;Each url will be pulled in and parsed into a standard data scructure.  Some items may yield special feaures, a schemaless/nosql datastructure may be best.  Pipeline will decide to how to weight posts based on users weight, recent position on feed, .&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a_raw (raw plain text / json items) -&amp;gt; b_int (cleaned items) -&amp;gt; c_pri (single feed of items) -&amp;gt; d_fea (weighted feed of items) -&amp;gt; e_out (requested output formats)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;output&lt;/h2&gt;
&lt;p&gt;Pipeline outputs will be email, json, markdown, xml, html.  Each will be able to be configured by the config file (max-entries, output location).&lt;/p&gt;
&lt;h2&gt;Running&lt;/h2&gt;
&lt;p&gt;Users will be able to create their own reader.  Here is a list of possiblilites.  Users will not have the pipeline inside their repo. It will pull the pipeline from a package repo, pypi, dockerhub, GitHub.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fork a template repo (might be cumbersome to update)&lt;/li&gt;
&lt;li&gt;use a GitHub action from the Marketplace (easier to update)&lt;/li&gt;
&lt;li&gt;GH actions will run the pipeline on a schedule&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/reader.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/reader/.png</cover_image></item><item><title><![CDATA[🙋‍♂️ Can Anyone Explain Twitter Cards to me?]]></title><description><![CDATA[Can someone explain how or why twitter cards render differently from device to device?  I do understand that twitter cards a built from meta…]]></description><link>https://waylonwalker.com/explain-twitter-cards/</link><guid isPermaLink="false">https://waylonwalker.com/explain-twitter-cards/</guid><pubDate>Sat, 11 Jul 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Can someone explain how or why twitter cards render differently from device to device?  I do understand that twitter cards a built from meta tags, the full list can be found in their &lt;a href=&quot;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/markup&quot;&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Rendered on Mobile&lt;/h2&gt;
&lt;p&gt;Mobile Looks fine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/twitter-card-rendered.png&quot; alt=&quot;rendered card&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Not Rendered on Desktop&lt;/h2&gt;
&lt;p&gt;On Desktop it is not picking up the image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/twitter-card-rendered.png&quot; alt=&quot;not rendered card&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Twitter Card Validator&lt;/h2&gt;
&lt;p&gt;The Validator renders the card correctly.  I tried the official &lt;a href=&quot;https://cards-dev.twitter.com/validator&quot;&gt;twitter card validator&lt;/a&gt;, as well as &lt;a href=&quot;https://www.heymeta.com/url/waylonwalker.com/latest&quot;&gt;heymeta.com&lt;/a&gt;, and &lt;a href=&quot;https://metatags.io/&quot;&gt;metatags.io&lt;/a&gt;.  All look good.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/twitter-card-rendered.png&quot; alt=&quot;rendered card with validator&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Can Cards be updated?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;even with a redirect?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I tried seting up a pinned tweet that uses a netlify redirect to always keep my latest post up to date.  Again this one looks good in the validator, doesnt render the image on desktop, does render the image on mobile, but does not update.  I have heard that you need to hit the card validator to update cards?  I am not sure if this is true, but for me this is not even upating the card.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;👋 Hello,&lt;br&gt;&lt;br&gt;―――――― I&amp;#39;m Waylon Walker ――――――&lt;br&gt;&lt;br&gt;I work with data using 🐍 &lt;a href=&quot;https://twitter.com/hashtag/python?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#python&lt;/a&gt; and utilize &lt;a href=&quot;https://twitter.com/hashtag/webdev?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#webdev&lt;/a&gt; to 〽visualize it.&lt;br&gt;&lt;br&gt;――――――&lt;br&gt;&lt;br&gt;I write about things on my 🌱 digital garden&lt;a href=&quot;https://t.co/rAvD9iw05g&quot;&gt;https://t.co/rAvD9iw05g&lt;/a&gt;&lt;br&gt;&lt;br&gt;👨‍💻Some are cross-posted to &lt;a href=&quot;https://t.co/oRWk7MgUD5&quot;&gt;https://t.co/oRWk7MgUD5&lt;/a&gt;&lt;br&gt;&lt;br&gt;――――――&lt;br&gt;💌&lt;a href=&quot;https://t.co/PilOTWQ9ub&quot;&gt;https://t.co/PilOTWQ9ub&lt;/a&gt;&lt;/p&gt;&amp;mdash; 𝚆𝚊𝚢𝚕𝚘𝚗 𝚆𝚊𝚕𝚔𝚎𝚛 (@_WaylonWalker) &lt;a href=&quot;https://twitter.com/_WaylonWalker/status/1282000623299371008?ref_src=twsrc%5Etfw&quot;&gt;July 11, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/explain-twitter-cards.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/explain-twitter-cards/.png</cover_image></item><item><title><![CDATA[🤓 What's on your GitHub Profile]]></title><description><![CDATA[I ran this post on dev.to and got a great response of great examples, check it out. dev.to whats-on-your-github-profile The GitHub profile…]]></description><link>https://waylonwalker.com/whats-on-your-github-profile/</link><guid isPermaLink="false">https://waylonwalker.com/whats-on-your-github-profile/</guid><pubDate>Sat, 11 Jul 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I ran this post on dev.to and got a great response of great examples, &lt;a href=&quot;https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3&quot;&gt;check it out&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/whats-on-your-github-profile.png&quot; alt=&quot;dev.to whats-on-your-github-profile&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The GitHub profile feature just went live for a subset of users.  Simply creating a repo named after your username, and clicking share to Profile on the sidebar will create a custom profile that shows up just above your pinned projects.&lt;/p&gt;
&lt;p&gt;I am still trying to figure out what to put on mine, but this is what I have so far.  I feel like mine is a bit big at the moment, I don&apos;t like that my pinned repos end up blow the fold.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/waylonwalker&quot;&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/pk1ostnnpn9dmlbs4emv.png&quot; alt=&quot;my github profile&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;updated&lt;/h1&gt;
&lt;p&gt;I tightened mine up and took inspiration from a few others.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/waylonwalker&quot;&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/zl9o2kmxoy2c7xv16pbz.png&quot; alt=&quot;Alt Text&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Share a screenshot and link of yours &lt;a href=&quot;https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3&quot;&gt;on dev&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;updated again&lt;/h1&gt;
&lt;p&gt;Updated with a list of latest Twitter followers, using GitHub actions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/f8fcm9dvvozj4rzh4376.png&quot; alt=&quot;waylonwalkers GitHub profile&quot;&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/whats-on-your-github-profile.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/whats-on-your-github-profile/.png</cover_image></item><item><title><![CDATA[How I Built My GitHub Profile]]></title><description><![CDATA[I ran a discussion on dev that collected quite a list of examples in the comment section.  So many great calls to action, animations, memes…]]></description><link>https://waylonwalker.com/my-github-profile/</link><guid isPermaLink="false">https://waylonwalker.com/my-github-profile/</guid><pubDate>Fri, 10 Jul 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I ran a discussion on dev that collected quite a list of examples in the comment section.  So many great calls to action, animations, memes, and weird tricks.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/whats-on-your-github-profile.png&quot; alt=&quot;dev.to whats-on-your-github-profile&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;My current profile&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/waylonwalker/&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/github-profile.png&quot; alt=&quot;Waylon Walkers GitHub profile&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;social icons&lt;/h2&gt;
&lt;p&gt;Upload all of your icons to the repo in a directory such as &lt;code class=&quot;language-text&quot;&gt;icons&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;assets&lt;/code&gt;, then link them with a &lt;code class=&quot;language-text&quot;&gt;height&lt;/code&gt; attribute like below.  I used html for mine, not sure if you can set the &lt;code class=&quot;language-text&quot;&gt;height&lt;/code&gt; in markdown.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://dev.to/waylonwalker&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;30&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://raw.githubusercontent.com/WaylonWalker/WaylonWalker/main/icon/dev.png&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token entity named-entity&quot; title=&quot;&amp;nbsp;&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;token entity named-entity&quot; title=&quot;&amp;nbsp;&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; I did add a bit of &lt;code class=&quot;language-text&quot;&gt;&amp;amp;nbsp;&lt;/code&gt; (non-breaking-whitespace) between my icons.  Without adding css this seemed like the simplest way to do it.&lt;/p&gt;
&lt;h2&gt;Center&lt;/h2&gt;
&lt;p&gt;Aligning things in the center of the readme is super simple.  I used this trick to align my social icons in the middle.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;align&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;center&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
 ...html
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;right&lt;/h2&gt;
&lt;p&gt;For my &lt;a href=&quot;https://waylonwalker.com/latest&quot;&gt;latest post&lt;/a&gt; I floated it to the right with a little bit of &lt;code class=&quot;language-text&quot;&gt;align=&amp;#39;right&amp;#39;&lt;/code&gt; action.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/latest&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;400&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;align&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;right&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/latest.png?raw=true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may need to play with where you put this in the document, and the size of elements to get things to flow right.&lt;/p&gt;
&lt;h2&gt;redirects&lt;/h2&gt;
&lt;p&gt;In order to keep my latest post always up to date on my readme I implemented a netlify redirect to always point to my latest post.  As a digital gardener this helps me keep pointed to a the best one in my opinion.  Any automated way would pick up half finished posts.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# /static/_redirects
# netlify redirects

# latest post
/latest            /blog/kedro-catalog-search/
/latest.png        /kedro-catalog-search.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I can reference both the post and the post cover image.&lt;/p&gt;
&lt;h2&gt;summary/details&lt;/h2&gt;
&lt;p&gt;I also wanted to list out a few of my favorite posts without taking up a ton of space, so I used &lt;code class=&quot;language-text&quot;&gt;details&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;summary&lt;/code&gt; tags so that it would collapse.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
 &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;summary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;other favorite posts&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;summary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
 &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/eight-years-cat/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;400&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/eight-years-cat.png?raw=true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
 &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/keyboard-driven-vscode/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;400&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/alt%20b.png?raw=true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
 &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/what-are-github-actions/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;400&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://waylonwalker.com/what-are-github-actions.png?raw=true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go ham on your profile, its your own slice of GitHub to completely personalize and speak your brand.  Give a powerfule call to action, share a funny meme, record a wicked cool GIF, its your space.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/my-github-profile.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/my-github-profile/.png</cover_image></item><item><title><![CDATA[SLIDES - understanding python *args and **kwargs]]></title><description><![CDATA[I generally post these as a carousel on LinkedIn based on a full article.  Let mw know what you think of it shown inside of a blog…]]></description><link>https://waylonwalker.com/python-args-kwargs-slides/</link><guid isPermaLink="false">https://waylonwalker.com/python-args-kwargs-slides/</guid><pubDate>Thu, 02 Jul 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I generally post these as a carousel on LinkedIn based on a full article.  Let mw know what you think of it shown inside of a blog &lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;@_waylonwalker&lt;/a&gt;.&lt;/p&gt;
&lt;iframe src=&quot;https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:6678285914826911744&quot; height=&quot;587&quot; width=&quot;504&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; title=&quot;Embedded post&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/python-args-kwargs&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/python-args-kwargs.png&quot; alt=&quot;python args and kwargs&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See the full article &lt;a href=&quot;https://waylonwalker.com/python-args-kwargs&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Slides&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-2.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-3.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-4.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-5.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-6.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-7.png&quot; alt=&quot;7&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-8.png&quot; alt=&quot;8&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-9.png&quot; alt=&quot;9&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;../../args-kwargs-slide-10.png&quot; alt=&quot;10&quot;&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/python-args-kwargs-slides.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/python-args-kwargs-slides/.png</cover_image></item><item><title><![CDATA[Gracefully adopt kedro, the catalog]]></title><description><![CDATA[Why use kedro catalog? While using the catalog alone will not reap all of the benefits of the framework, it does get you and your project…]]></description><link>https://waylonwalker.com/graceful-kedro-catalog/</link><guid isPermaLink="false">https://waylonwalker.com/graceful-kedro-catalog/</guid><pubDate>Mon, 29 Jun 2020 03:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Why use kedro catalog?&lt;/h2&gt;
&lt;p&gt;While using the catalog alone will not reap all of the benefits of the framework, it does get you and your project ready for the full framework eventually.  For me the full benefit of the catalog comes when you combine it with the pipeline and dont even touch read/write steps at all.&lt;/p&gt;
&lt;p&gt;Taking a step into kedro by adopting the catalog first will give you a way to organize all of your data loads in one place, and stop manually writing read/write code, which can be different for each data and storage type. You just don&apos;t need to think about it.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;iperitive loading style&lt;/li&gt;
&lt;li&gt;organizes your data&lt;/li&gt;
&lt;li&gt;all file locations can be quickly identified&lt;/li&gt;
&lt;li&gt;can be dropped into kedro later&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;can be dropped into kedro later&quot;
Let&apos;s talk a bit more about that&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;2 Ways to Gracefully adopt the catalog&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;How do I get started with the kedro catalog&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add with the code api&lt;/li&gt;
&lt;li&gt;load from yaml (&lt;strong&gt;recommended&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;1. Adding to the catalog with the code api&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;how to use the kedro catalog code api&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It is possible to keep everything inside of one single file if you want by utilizing the code api, which defines the kedro catalog inside of your script with python.  I personally like this method as it is a bit more scriptable to create many layers of datasets with a for loop.  It can still be carried right into a kedro project, but is not the normal way that other kedro users will be used to seeing.  I&apos;ll leave it up to you which technique to use.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; DataCatalog
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;extras&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pandas &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; CSVDataSet

io &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; DataCatalog&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;bikes&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; CSVDataSet&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;../data/01_raw/bikes.csv&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;taken right from the kedro &lt;a href=&quot;https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html&quot;&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;👆 This can be done inside of a single Jupyter cell, and pulled out later.&lt;/p&gt;
&lt;h2&gt;2. Creating a catalog config file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;recommended&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This reccommended method it great since it will simply drop right in to a full kedro project if you were ever ready to adopt the framework as a whole.  The downside to gracefully adopting the framework is that you need to have a bit of an understanding of the internals to do it.  When using the framework as a whole it seemlessly takes care of everything for you.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# conf/base/catalog.yml&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Example 1: Loads / saves a CSV file from / to a local file system&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;bikes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/bikes.csv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; ConfigLoader
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; DataCatalog

conf_loader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ConfLoader&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;conf/base&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
conf_catalog &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; conf_loader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;catalog*&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;catalog/**&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
catalog &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; DataCatalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;from_config&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;conf_catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You can even do this 👆 from a Jupyter notebook&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you do happen to be in a module deeper into an existing library I tend to leverage the use of the &lt;code class=&quot;language-text&quot;&gt;__file__&lt;/code&gt; magic.  &lt;code class=&quot;language-text&quot;&gt;__file__&lt;/code&gt; is a string containing the location of the current file.  You can initiate a &lt;code class=&quot;language-text&quot;&gt;Path&lt;/code&gt; object from this and roll up the necessary number of directories with the &lt;code class=&quot;language-text&quot;&gt;parents&lt;/code&gt; attribute then into the &lt;code class=&quot;language-text&quot;&gt;conf/base&lt;/code&gt; directory.  I find this more &lt;strong&gt;more robust&lt;/strong&gt; as it does not depend on your current working directory.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Path
conf_loader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ConfLoader&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__file__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parents&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;conf/base&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
conf_catalog &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; conf_loader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;catalog*&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;catalog/**&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
new_catalog &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; DataCatalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;from_config&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;conf_catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;I find leveraging the &lt;code class=&quot;language-text&quot;&gt;__file__&lt;/code&gt; magic a bit more robust when possible as it does not depend on your current working directory.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Adhoc adding to an existing kedro catalog&lt;/h2&gt;
&lt;p&gt;Let&apos;s say that you are already using a kedro project, but you are wanting to develop new features entirely in the context of a notebook.  You can easily create a catalog as shown above.  Since the kedro catalog variable is typically &lt;code class=&quot;language-text&quot;&gt;catalog&lt;/code&gt;, we will call it &lt;code class=&quot;language-text&quot;&gt;new_catalog&lt;/code&gt; and add it to the existing &lt;code class=&quot;language-text&quot;&gt;catalog&lt;/code&gt; below.  If you are not quite sure what that &lt;code class=&quot;language-text&quot;&gt;**catalog&lt;/code&gt; syntax is doing check out my article on &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add_feed_dict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;new_catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__dict__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/python-args-kwargs&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/python-args-kwargs.png&quot; alt=&quot;python args and kwargs&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/python-args-kwargs&quot;&gt;python args and kwargs&lt;/a&gt; article by &lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;@_waylonwalker&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The framework makes appending&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;catalog &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; DataCatalog&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__dict__&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;new_catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__dict__&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
``



&lt;span class=&quot;token comment&quot;&gt;## One word of caution&lt;/span&gt;


If you have &lt;span class=&quot;token builtin&quot;&gt;any&lt;/span&gt; hooks running `after_catalog_created`&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; they will &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; be run on the appended catalog entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/graceful-kedro-catalog.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/graceful-kedro-catalog/.png</cover_image></item><item><title><![CDATA[Upcoming Posts]]></title><description><![CDATA[🧠 How I manage Environments My Data Workflow. Daily Schedule desk keeb Material Shell Why blog search with fuse.js Testing a blog with…]]></description><link>https://waylonwalker.com/upcoming-posts/</link><guid isPermaLink="false">https://waylonwalker.com/upcoming-posts/</guid><pubDate>Sat, 27 Jun 2020 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;🧠&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How I manage Environments&lt;/li&gt;
&lt;li&gt;My Data Workflow.&lt;/li&gt;
&lt;li&gt;Daily Schedule&lt;/li&gt;
&lt;li&gt;desk&lt;/li&gt;
&lt;li&gt;keeb&lt;/li&gt;
&lt;li&gt;Material Shell&lt;/li&gt;
&lt;li&gt;Why blog&lt;/li&gt;
&lt;li&gt;search with fuse.js&lt;/li&gt;
&lt;li&gt;Testing a blog with ahrefs&lt;/li&gt;
&lt;li&gt;Think like a Senior Dev&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Editor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;shortcuts&lt;/li&gt;
&lt;li&gt;gitui&lt;/li&gt;
&lt;li&gt;fzf&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Core&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;gracefully adopt kedro&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;catalog - in progress&lt;/li&gt;
&lt;li&gt;pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;kedro&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10 reasons you shouldnt use kedro&lt;/li&gt;
&lt;li&gt;10 reasons to use &lt;/li&gt;
&lt;li&gt;filter viz&lt;/li&gt;
&lt;li&gt;Steel-toes env&lt;/li&gt;
&lt;li&gt;Why framework&lt;/li&gt;
&lt;li&gt;How I write pipelines&lt;/li&gt;
&lt;li&gt;when I write pipelines&lt;/li&gt;
&lt;li&gt;pipeline node templates&lt;/li&gt;
&lt;li&gt;Convert a notebooks to pipelines&lt;/li&gt;
&lt;li&gt;Testing Pipelines&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;professional python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cookiecutter&lt;/li&gt;
&lt;li&gt;flake8&lt;/li&gt;
&lt;li&gt;black&lt;/li&gt;
&lt;li&gt;mypy&lt;/li&gt;
&lt;li&gt;pre-commit&lt;/li&gt;
&lt;li&gt;click&lt;/li&gt;
&lt;li&gt;pytest&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;parametrize&lt;/li&gt;
&lt;li&gt;environment variables&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;My top pandas methods&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Actions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How I cut my gatsby deployment in half&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VSCODE update&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plugins I use&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;uses&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;python&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/419163/what-does-if-name-main-do&quot;&gt;What does if &lt;strong&gt;name&lt;/strong&gt; == “&lt;strong&gt;main&lt;/strong&gt;”: do?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator&quot;&gt;ternary operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-without-exceptions&quot;&gt;check if file exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/89228/calling-an-external-command-from-python&quot;&gt;calling external commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38987/how-do-i-merge-two-dictionaries-in-a-single-expression-in-python-taking-union-o&quot;&gt;merging dictionaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;learning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;mdx&lt;/li&gt;
&lt;li&gt;touch typing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Newsletter&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Don&apos;t jump too early&lt;/li&gt;
&lt;li&gt;keep a pulse on new things&lt;/li&gt;
&lt;li&gt;be nice&lt;/li&gt;
&lt;li&gt;take breaks&lt;/li&gt;
&lt;li&gt;push at the right time&lt;/li&gt;
&lt;li&gt;practice&lt;/li&gt;
&lt;li&gt;optimize the hard things&lt;/li&gt;
&lt;li&gt;failure&lt;/li&gt;
&lt;li&gt;dont listen to the haters&lt;/li&gt;
&lt;li&gt;Just start (make 20 minutes)&lt;/li&gt;
&lt;li&gt;Mistakes Happen&lt;/li&gt;
&lt;li&gt;Accountability&lt;/li&gt;
&lt;li&gt;Giving without Expectations&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/upcoming-posts.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/upcoming-posts/.png</cover_image></item><item><title><![CDATA[How to find things in your kedro catalog]]></title><description><![CDATA[kedro 0.16.2 just dropped last week with a long-awaited feature... catalog search!  I went as far as monkey patching this into each of my…]]></description><link>https://waylonwalker.com/kedro-catalog-search/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-catalog-search/</guid><pubDate>Mon, 22 Jun 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;kedro 0.16.2 just dropped last week with a long-awaited feature... &lt;strong&gt;catalog search&lt;/strong&gt;!  I went as far as monkey patching this into each of my projects.  I work jump between a few really big projects that have tons of datasets.  Being able to quickly search for what I need is so useful.&lt;/p&gt;
&lt;h2&gt;The Catalog&lt;/h2&gt;
&lt;p&gt;The kedro data catalog is a key component to the kedro framework.  It handles all data loading and saving for you.  It is configurable and hackable.  Having all your data connections listed in one place make it so easy to pick your project up and move it to a completely new environment.  That sweet imperative loading style saves so much read/write overhead.  I can load all my data with a single command whether it&apos;s in amazon s3, google cloud platform, or a local file.&lt;/p&gt;
&lt;h2&gt;Kick start a toy project&lt;/h2&gt;
&lt;p&gt;Just like with most of these articles, I am going to create a conda environment so that I don&apos;t break any existing projects and scaffold up a toy project to learn from.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n kedro0162 &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt; -y
activate kedro0162
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro
kedro new &lt;span class=&quot;token comment&quot;&gt;# call it Kedro 0162 and click-through&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; kedro-0162
kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Expect this set of commands to take a few minutes depending on your system, connection speed, and amount of packages already in your local cache.&lt;/p&gt;
&lt;h2&gt;Create some catalog&lt;/h2&gt;
&lt;p&gt;Now the power of the catalog search really starts to shine when your projects grow legs.  You have groups of many datasets containing patterns of data including &lt;code class=&quot;language-text&quot;&gt;layer&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;source&lt;/code&gt; among other things.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;vim&lt;/span&gt; conf/base/catalog.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the catalog, you will see a few lines of instructions followed by&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yml&quot;&gt;&lt;pre class=&quot;language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;example_iris_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/iris.csv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives us one stored catalog entry called &lt;code class=&quot;language-text&quot;&gt;example_iris_data&lt;/code&gt;, it is a CSV file stored in &lt;code class=&quot;language-text&quot;&gt;data/01_raw/iris.csv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let&apos;s make up a transportation company that is siloed into three different divisions and it is our job to bring their sales and product metadata into a single report.  This company makes &lt;code class=&quot;language-text&quot;&gt;lifted-trucks&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;primium-scoots&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;luxy-yahts&lt;/code&gt;.  and we know that we will want &lt;code class=&quot;language-text&quot;&gt;raw&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;int&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;pri&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;modin&lt;/code&gt; layers to start our project so let&apos;s scaffold up that catalog real quick.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yml&quot;&gt;&lt;pre class=&quot;language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ――――――――― lifted-truck ―――――――――&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;raw_lifted_truck_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/sales/lifted&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;truck.csv

&lt;span class=&quot;token key atrule&quot;&gt;int_lifted_truck_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_int/sales/lifted&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;truck.csv

&lt;span class=&quot;token key atrule&quot;&gt;pri_lifted_truck_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/sales/lifted&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;truck.csv

&lt;span class=&quot;token key atrule&quot;&gt;raw_lifted_truck_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/info/lifted&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;truck.csv

&lt;span class=&quot;token key atrule&quot;&gt;int_lifted_truck_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_int/info/lifted&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;truck.csv

&lt;span class=&quot;token key atrule&quot;&gt;pri_lifted_truck_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/info/lifted&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;truck.csv

&lt;span class=&quot;token comment&quot;&gt;# ――――――――― primium-scoot ―――――――――&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;raw_primium_scoot_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/sales/primium&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scoot.csv

&lt;span class=&quot;token key atrule&quot;&gt;int_primium_scoot_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_int/sales/primium&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scoot.csv

&lt;span class=&quot;token key atrule&quot;&gt;pri_primium_scoot_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/sales/primium&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scoot.csv

&lt;span class=&quot;token key atrule&quot;&gt;raw_primium_scoot_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/info/primium&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scoot.csv

&lt;span class=&quot;token key atrule&quot;&gt;int_primium_scoot_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_int/info/primium&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scoot.csv

&lt;span class=&quot;token key atrule&quot;&gt;pri_primium_scoot_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/info/primium&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scoot.csv

&lt;span class=&quot;token comment&quot;&gt;# ――――――――― luxy-yaht ―――――――――&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;raw_luxy_yaht_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/sales/luxy&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;yaht.csv

&lt;span class=&quot;token key atrule&quot;&gt;int_luxy_yaht_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_int/sales/luxy&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;yaht.csv

&lt;span class=&quot;token key atrule&quot;&gt;pri_luxy_yaht_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/sales/luxy&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;yaht.csv

&lt;span class=&quot;token key atrule&quot;&gt;raw_luxy_yaht_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_raw/info/luxy&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;yaht.csv

&lt;span class=&quot;token key atrule&quot;&gt;int_luxy_yaht_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_int/info/luxy&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;yaht.csv

&lt;span class=&quot;token key atrule&quot;&gt;pri_luxy_yaht_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/info/luxy&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;yaht.csv


&lt;span class=&quot;token comment&quot;&gt;# ――――――――― combined ―――――――――&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;pri_combined_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/sales/combined.csv

&lt;span class=&quot;token key atrule&quot;&gt;pri_combined_info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/info/combined.csv

&lt;span class=&quot;token comment&quot;&gt;# ――――――――― modin ―――――――――&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;modin_main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pandas.CSVDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data/01_pri/info/combined.csv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Some examples of common regex uses&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;regex&lt;/code&gt; gets really complicated fast, but these basic examples are very common use cases and will get you a long way without being very complicated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;term&lt;/code&gt; - all catalog entries that include &lt;code class=&quot;language-text&quot;&gt;term&lt;/code&gt; in the catalog entry&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;^term&lt;/code&gt; - all catalog entries that include &lt;code class=&quot;language-text&quot;&gt;term&lt;/code&gt; at the &lt;strong&gt;beginning&lt;/strong&gt; of the catalog entry&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;term$&lt;/code&gt; - all catalog entries that include &lt;code class=&quot;language-text&quot;&gt;term&lt;/code&gt; at the &lt;strong&gt;end&lt;/strong&gt; of the catalog entry&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;term1.*term2&lt;/code&gt; - include anything in between &lt;code class=&quot;language-text&quot;&gt;term1&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;term2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;term1|term2&lt;/code&gt; - all catalog entries that include &lt;code class=&quot;language-text&quot;&gt;term1&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;term2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Let&apos;s Search this thing&lt;/h2&gt;
&lt;p&gt;kedro has long included the &lt;code class=&quot;language-text&quot;&gt;catalog.list()&lt;/code&gt; feature that returns a list of all datasets.  Now the &lt;code class=&quot;language-text&quot;&gt;list&lt;/code&gt; command takes in a &lt;code class=&quot;language-text&quot;&gt;regex_search&lt;/code&gt; keyword argument.  By default, it is empty and returns the entire catalog.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro ipython&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;list out all of the luxy-yahts&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&apos;luxy_yaht`&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_luxy_yaht_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_luxy_yaht_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;List out data by layer&lt;/h2&gt;
&lt;p&gt;Easy just search for the layer name.&lt;/p&gt;
&lt;h3&gt;raw&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;pri&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;pri&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;pri_lifted_truck_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_luxy_yaht_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_combined_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_combined_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;😲 We just included every &lt;code class=&quot;language-text&quot;&gt;primium-scoot&lt;/code&gt; dataset!&lt;/p&gt;
&lt;p&gt;Here we just encountered our first need for &lt;code class=&quot;language-text&quot;&gt;regex&lt;/code&gt;.  I&apos;ll be the first to admit that I am really bad at regex, it&apos;s incredibly confusing, becomes read-only with much complexity, but is super powerful and used in a lot of places.&lt;/p&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;^term&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;beginning of catalog entry&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;^&lt;/code&gt; regex operator searches for catalog entries that include the search term at the very beginning.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;^pri&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;pri_lifted_truck_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_luxy_yaht_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_combined_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_combined_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;term$&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;end of catalog entry&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;$&lt;/code&gt; operator is the opposite of the &lt;code class=&quot;language-text&quot;&gt;^&lt;/code&gt; operator.  It means give me all that matches that occur at the end of the catalog entry.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;info$&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_combined_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;term1.*term2&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;.*&lt;/code&gt; operator in regex means give me all the datasets that include the two terms no matter what is between them.  There is also a &lt;code class=&quot;language-text&quot;&gt;.?&lt;/code&gt; to only allow one character between them.  More often than not I really just want the two patterns to exist in the dataset entry.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw.*info$&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Some real things that we can do with search&lt;/h2&gt;
&lt;p&gt;Let&apos;s look at a few examples beyond the obvious of just searching for the dataset that we want to load.&lt;/p&gt;
&lt;h2&gt;Check Raw Data&lt;/h2&gt;
&lt;p&gt;While migrating pipelines between environments it&apos;s important to know if your raw datasets are available.  I will argue that you should also consider looking at &lt;code class=&quot;language-text&quot;&gt;pipeline.inputs&lt;/code&gt; as it cannot lie and gives you a true reading of the pipeline inputs.  But another easy check might be to check all the datasets that the Data Engineers have labeled raw.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exists&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; dataset &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;^raw&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_luxy_yaht_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we just created a dummy catalog the data does not exist in this example.&lt;/p&gt;
&lt;h2&gt;Create a new catalog&lt;/h2&gt;
&lt;p&gt;Let&apos;s say that we have someone on the team who is from the land division of our company and they want a simplified catalog readily available that does not include any marine data.&lt;/p&gt;
&lt;p&gt;To do this we will need to reach a bit into the kedro internals for the &lt;code class=&quot;language-text&quot;&gt;DataCatalog&lt;/code&gt; class and utilize a new regex operator &lt;code class=&quot;language-text&quot;&gt;|&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; DataCatalog
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; land_catalog &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; DataCatalog&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        dataset&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; dataset &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;truck|scoot&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; land_catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_lifted_truck_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_lifted_truck_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_lifted_truck_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_primium_scoot_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;raw_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;int_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;token string&quot;&gt;&apos;pri_primium_scoot_info&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;regex recap&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;^term&lt;/code&gt; - beginning&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;term$&lt;/code&gt; - end&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;term1.*term2&lt;/code&gt; - anything in between&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;term1|term2&lt;/code&gt; - or&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-catalog-search.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-catalog-search/.png</cover_image></item><item><title><![CDATA[My first eight years as a working professional.]]></title><description><![CDATA[This day 8 years ago I started my first day as a Mechanical Engineer. I am so grateful for this journey that I have been able to have. There…]]></description><link>https://waylonwalker.com/eight-years-cat/</link><guid isPermaLink="false">https://waylonwalker.com/eight-years-cat/</guid><pubDate>Fri, 19 Jun 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This day 8 years ago I started my first day as a Mechanical Engineer. I am so grateful for this journey that I have been able to have. There is no way that I could have planned this journey from the beginning.&lt;/p&gt;
&lt;h2&gt;Keep Learning&lt;/h2&gt;
&lt;p&gt;My initial career plans were down a completely different path. I have been very flexible in taking on a new career path. I have been eager to learn new things and respond to life changes that I never would have imagined.&lt;/p&gt;
&lt;h2&gt;Life Changes&lt;/h2&gt;
&lt;p&gt;Very severe chronic health issues from my family restricted my ability to travel to the facilities I served as a Mechanical Engineer. I was able to stay strong and make it work. But in the meantime, I was learning new skills that enabled me to be more effective remotely.&lt;/p&gt;
&lt;h2&gt;I was scared.&lt;/h2&gt;
&lt;p&gt;It was in these times that I found a love for data, and taking action from insights I found with data. I learned how to use python to enable me to be more effective. I did this primarily from hospital waiting rooms and many overnight stays. This gave my mind a break from some of the really difficult things in life but also catapulted my career in a new direction.&lt;/p&gt;
&lt;p&gt;🔼 Be flexible&lt;/p&gt;
&lt;p&gt;🔼 Always be open and ready for change&lt;/p&gt;
&lt;p&gt;🔼 Never stop learning&lt;/p&gt;
&lt;p&gt;🔼 Keep a positive attitude&lt;/p&gt;
&lt;p&gt;🔼 Be kind to others&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This was originally posted on my LinkedIn, if you enjoy it please connect with me and give the post a 👍&lt;/p&gt;
&lt;iframe src=&quot;https://www.linkedin.com/embed/feed/update/urn:li:share:6679445409351393280&quot; height=&quot;813&quot; width=&quot;504&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; title=&quot;Embedded post&quot;&gt;&lt;/iframe&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/eight-years-cat.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/eight-years-cat/.png</cover_image></item><item><title><![CDATA[How Kedro handles your inputs]]></title><description><![CDATA[Passing inputs into kedro is a key concept.  Understanding how it accepts a single catalog key as input is quite trivial that easily makes…]]></description><link>https://waylonwalker.com/kedro-inputs/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-inputs/</guid><pubDate>Fri, 19 Jun 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Passing inputs into kedro is a key concept.  Understanding how it accepts a single catalog key as input is quite trivial that easily makes sense, but passing a list or dictionary of catalog entries can be a bit confusing.&lt;/p&gt;
&lt;h2&gt;*args/**args review&lt;/h2&gt;
&lt;p&gt;Check out this post for a review of how &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; work in python.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/python-args-kwargs&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/python-args-kwargs.png&quot; alt=&quot;python args and kwargs&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/python-args-kwargs&quot;&gt;python args and kwargs&lt;/a&gt; article by &lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;@_waylonwalker&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;All Kedro inputs are catalog Entries&lt;/h2&gt;
&lt;p&gt;When kedro runs your pipeline it uses the catalog to imperatively load your data, meaning that you don&apos;t tell kedro how to load your data, you tell it where your data is and what type it is.  These catalog entries are like a &lt;code class=&quot;language-text&quot;&gt;key-value&lt;/code&gt; store.  You just need to give the key when setting up a node.&lt;/p&gt;
&lt;h2&gt;Single Inputs&lt;/h2&gt;
&lt;p&gt;These are fairly straightforward to understand.  In the example below when &lt;code class=&quot;language-text&quot;&gt;kedro&lt;/code&gt; runs the pipeline it will load the input from the catalog, then pass that input to the func, then save the returned value to the output catalog entry.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create_int_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;cleans up raw sales data&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; cleaned_sales

my_node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    func&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;create_int_sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;int_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;List of inputs&lt;/h2&gt;
&lt;p&gt;Let&apos;s look at an example node that combines more than one dataset. When kedro has sees a list of catalog entries it will load up each catalog entry sequentially then pass them in order to the &lt;code class=&quot;language-text&quot;&gt;create_sales_report&lt;/code&gt; function.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create_sales_report&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; products&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;adds product metadata to the sales data&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;


my_node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    func&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;create_sales_report&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;pri_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pri_products&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales_report&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;simulating pipeline run using 2 inputs&lt;/h2&gt;
&lt;p&gt;Here We can simulate what kedro does during the pipeline run by using &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# inputs you gave kedro&lt;/span&gt;
inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;pri_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pri_products&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# load data&lt;/span&gt;
input_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;  inputs&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# run the node&lt;/span&gt;
sales_report &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; create_sales_report&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;input_data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# save the data to the output&lt;/span&gt;
catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sales_report&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales_report&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;More generalizable functions&lt;/h2&gt;
&lt;p&gt;We can also use &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; to make our functions a little bit more generalizable. The first that
comes to my mind is a unioner. The second&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;unioner&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dfs&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame
    pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;concat&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dfs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can pass any number of DataFrames into our kedro node to get unioned together, but
do we really need a function for a one-liner... No we can use an inline function for this case.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;my_node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    func&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dfs&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;concat&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dfs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token builtin&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales_2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;sales_2018&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; scares the crap out of me!&lt;/h2&gt;
&lt;p&gt;It&apos;s great for the &lt;code class=&quot;language-text&quot;&gt;unioner&lt;/code&gt; example where its a collection of similar things where order
does not matter.  But for the &lt;code class=&quot;language-text&quot;&gt;create_sales_report&lt;/code&gt; function.  Those are distinctly different
inputs.  If someone does some refactoring and changes the order in one place or another it&apos;s
going to turn into a bad day real fast.&lt;/p&gt;
&lt;h2&gt;**kwargs are a bit better&lt;/h2&gt;
&lt;p&gt;Let&apos;s refactor the &lt;code class=&quot;language-text&quot;&gt;create_sales_report&lt;/code&gt; before someone tries to ruin our day.  We can easily
do this by passing a dictionary (keys are the argument name, values are the catalog key)
of arguments to kedro instead of a list.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create_sales_report&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; products&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;adds product metadata to the sales data&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

my_node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    func&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;create_sales_report&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pri_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;products&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pri_products&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales_report&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now if someone tries to refactor the order of arguments we are safe!&lt;/p&gt;
&lt;h2&gt;Simulating the pipeline run with &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Pretty much the same as before, except with &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;dictionaries&lt;/code&gt; keeping us a bit
safer.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# inputs you gave kedro&lt;/span&gt;
inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pri_sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;products&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pri_products&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# load data&lt;/span&gt;
input_data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;arg&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; arg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# run the node&lt;/span&gt;
sales_report &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; create_sales_report&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;input_data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# save the data to the output&lt;/span&gt;
catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sales_report&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales_report&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Stay Safe&lt;/h2&gt;
&lt;p&gt;Kedro inputs are quite easy to understand if you already have a grasp of &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt;
and if you don&apos;t it is still fairly intuitive to pick up.  Stay on the safe side, if your
collection of inputs are clearly different things, use a dictionary for safety.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-inputs.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-inputs/.png</cover_image></item><item><title><![CDATA[Refactoring your blog urls]]></title><description><![CDATA[I just did a quick refactoring of my JAMStack blog urls.  Some didn't fit with
my style, some had  that I wanted to switch to , and others…]]></description><link>https://waylonwalker.com/gracefully-redirect/</link><guid isPermaLink="false">https://waylonwalker.com/gracefully-redirect/</guid><pubDate>Thu, 11 Jun 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I just did a quick refactoring of my JAMStack blog urls.  Some didn&apos;t fit with
my style, some had &lt;code class=&quot;language-text&quot;&gt;_&lt;/code&gt; that I wanted to switch to &lt;code class=&quot;language-text&quot;&gt;-&lt;/code&gt;, and others were
rediculously long.  I&apos;ve been using forestry as my CMS, I write many of my
posts there, and sometimes it picks some crazy file names (based on my titles).
It was time to refactor.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/refactor-in-cli/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/caee54c45632d974fe802bdbb34f8b54/630fb/refactor-in-cli-xmas2020.png&quot; alt=&quot;article cover for Large Refactor At The Command Line&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Large Refactor At The Command Line&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    As projects grow patterns that worked early on break and we need to change things to make the project easier to work wit
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;When refactorings similar to this get really big I often need to do some
project wide find an replace, I usually do this right from the command line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;🖊 Rename posts &lt;em&gt;change the filename&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;My post urls are based on the file name of my markdown file, so I can simply go
through my filesystem and rename anything I want.  From here its probably best
to only commit the addition of the new file name, until the redirects clear,
but these are all low traffic posts for me so I just commited both at once.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Safely redirect without breaking links&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;em&gt;redirects ⤴ _/redirects&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;I am hosted on netlify, which automatically puts very ⚡ performant redirects
on the edge based on a &lt;code class=&quot;language-text&quot;&gt;/_redirects&lt;/code&gt; route on your site.  So I added a redirect
from the old route to the new route there.&lt;/p&gt;
&lt;h2&gt;rename long posts&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;/blog/i-finally-fixed-my-styled-components-in-gatsby-js
/blog/fix-styled-components-in-gatsby
/blog/interrogate-is-a-pretty-awesome-brand-new-cli-for-python-packages
/blog/interrogate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;pedantic 🤔 &lt;em&gt;probably&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;This is probably being a bit pedantic.  Realistically my urls were probably ok.
These posts probably aren&apos;t going to be topping the google search charts
anyways, but I wanted to do it without killing off any links that I may have
happened to post somewhere.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/gracefully-redirect.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/gracefully-redirect/.png</cover_image></item><item><title><![CDATA[Master No More]]></title><description><![CDATA[It's been a long time coming.  We use some very harsh language within tech so much sometimes that we become numb to it.  It's time to do my…]]></description><link>https://waylonwalker.com/master-no-more/</link><guid isPermaLink="false">https://waylonwalker.com/master-no-more/</guid><pubDate>Thu, 11 Jun 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;It&apos;s been a long time coming.  We use some very harsh language within tech so much sometimes that we become numb to it.  It&apos;s time to do my very small part in this movement and purge this language from my active repos starting with this blog right here.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/refactor-in-cli/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/caee54c45632d974fe802bdbb34f8b54/630fb/refactor-in-cli-xmas2020.png&quot; alt=&quot;article cover for Large Refactor At The Command Line&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Large Refactor At The Command Line&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    As projects grow patterns that worked early on break and we need to change things to make the project easier to work wit
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;this post follows my method of refactoring code bases from the command line,
read more about that in this article.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;c-s-f&lt;/h2&gt;
&lt;p&gt;First off browsing through the content of my blog I found many references to master.  I cannot completely whole-sale find and replace each one of them, because some of them are links that I do not own.  Any set of instructions got upgraded from &lt;code class=&quot;language-text&quot;&gt;master&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;  git checkout master
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;  git checkout main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There were countless cases of examples like this to comb through, but it feels good to have them purged of old language.&lt;/p&gt;
&lt;h2&gt;rename routes&lt;/h2&gt;
&lt;p&gt;Following yesterdays post, I am going to rename my markdown files&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/static/_redirects&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;shorteners&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt; /gdfm              /blog/today-i-learned-git-diff-feature-master/
&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt; /blog/gdfm         /blog/today-i-learned-git-diff-feature-master/
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; /gdfm              /blog/today-i-learned-git-diff-feature-main/
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; /blog/gdfm         /blog/today-i-learned-git-diff-feature-main/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;redirect posts&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; # master -&gt; main
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; /blog/today-i-learned-git-diff-feature-master/   /blog/git-diff-feature-main/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;redirect external links to repo&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt; /redirects      https://github.com/WaylonWalker/waylonwalkerv2/edit/master/static/_redirects
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; /redirects      https://github.com/WaylonWalker/waylonwalkerv2/edit/main/static/_redirects&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More info on refactoring your blog routes with netlify here.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/gracefully-redirect/&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/gracefully-redirect.png&quot; alt=&quot;gracefully redirect cover image&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;em&gt;&quot;Edit This post&quot;&lt;/em&gt; Links&lt;/h2&gt;
&lt;p&gt;I literally just added &lt;em&gt;&quot;edit this post&quot;&lt;/em&gt; links to my rss feed and my blog feed.  This was a simple find and replace inside of my blog template and &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Don&apos;t Forget about CI&lt;/h2&gt;
&lt;p&gt;If you have build/deploy processes that specifically run on master or not on master dont forget to change those to main.  I did everything in a single commit and as soon as I pushed to main it started deploying gloriously.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;name: 🌱 Deploy site

on:
&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; push:
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   branches:
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;      - master
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;      - main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Now the fun part&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;removing &lt;strong&gt;master&lt;/strong&gt; completely&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I mostly just followed this &lt;a href=&quot;https://www.hanselman.com/blog/EasilyRenameYourGitDefaultBranchFromMasterToMain.aspx&quot;&gt;post by Scott Hanselman&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; branch -m master main
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push -u origin main&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then from GitHub go to settings&gt;default branch&gt; select main and accept the risk involved.&lt;/p&gt;
&lt;p&gt;After your default is set to main, you have no use for master in your life anymore, time to purge it completely once and for all.  Go to &lt;repo&gt;/branches and trash it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/delete-master.png&quot; alt=&quot;delete master&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Stop the Bleeding&lt;/h2&gt;
&lt;p&gt;I like how Scott included this nice alias for starting from main from the beginning.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.new &lt;span class=&quot;token string&quot;&gt;&apos;!git init &amp;amp;&amp;amp; git symbolic-ref HEAD refs/heads/main&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;See the Full Diff&lt;/h2&gt;
&lt;p&gt;If you happen to want to see the full diff of my change you can see it &lt;a href=&quot;https://github.com/WaylonWalker/waylonwalkerv2/commit/4bd26ba8faaf7c72e01cc4946d989e3284302cd0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/master-no-more.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/master-no-more/.png</cover_image></item><item><title><![CDATA[understanding python *args and **kwargs]]></title><description><![CDATA[Python  and  are super useful tools, that when used properly can make you code much simpler and easier to maintain.  Large manual…]]></description><link>https://waylonwalker.com/python-args-kwargs/</link><guid isPermaLink="false">https://waylonwalker.com/python-args-kwargs/</guid><pubDate>Wed, 10 Jun 2020 05:00:00 GMT</pubDate><content:encoded>&lt;style&gt;
/* h2 {display: block;} */
h2&gt;img { margin: auto; width: 100%;}
&lt;/style&gt;
&lt;p&gt;Python &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; are super useful tools, that when used properly can make you code much simpler and easier to maintain.  Large manual conversions from a dataset to function arguments can be packed and unpacked into lists or dictionaries. Beware though, this power &lt;strong&gt;can&lt;/strong&gt; lead to some really unreadable/unusable code if done wrong.&lt;/p&gt;
&lt;h2&gt;*args are for lists&lt;/h2&gt;
&lt;p&gt;*args are some magical syntax that will collect function arguments into a list, or unpack a list into individual arguments.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/args-kwargs/1.png&quot; alt=&quot;recieving *args&quot; title=&quot;sending *args collects all arguments into a list inside of the function&quot;&gt;&lt;/h2&gt;
&lt;p&gt;When recieving variables as a &lt;code class=&quot;language-text&quot;&gt;*&amp;lt;varname&amp;gt;&lt;/code&gt;, commonly &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt;, the arguments get &lt;strong&gt;packed&lt;/strong&gt; into an ordered list.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Never add *args to your function definition (almost never)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Generally I find &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; poor naming and it only drives confusion to the user looking at your function trying to decide what exactly it does.  Here I have chosen the name &lt;code class=&quot;language-text&quot;&gt;printrows&lt;/code&gt; since we are printing each item as a row.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;printer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;printrows&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; row &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;printrows&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; row&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; printer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;eggs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;spam&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;ham&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; eggs
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; spam
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; ham&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Be Aware of AntiPatterns&lt;/h2&gt;
&lt;p&gt;If your &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; collection is distictly different things, then make them separate variables.  Using &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; as a crutch can lead to a really confusing api for your users, even yourself.&lt;/p&gt;
&lt;h2&gt;❌&lt;/h2&gt;
&lt;p&gt;Here &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; is confusing as we are a bit unsure of what to pass to &lt;code class=&quot;language-text&quot;&gt;get_user_data&lt;/code&gt;, or which order it needs to be in without reading the code.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_user_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;does stuff given a users GitHub and DevTo username&quot;&lt;/span&gt;
  github &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; reuqests&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;https://api.github.com/users/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  devto &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; requests&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;https://dev.to/api/users/by_username?url=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;✔&lt;/h2&gt;
&lt;p&gt;Here the function signature makes it clear what &lt;code class=&quot;language-text&quot;&gt;get_user_data&lt;/code&gt; expects.  Users will not have to read your docstring or worse your source code to understand it each time the reference it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_user_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;github_username&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; devto_username&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;does stuff given a users GitHub and DevTo username&quot;&lt;/span&gt;
  github &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; reuqests&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;https://api.github.com/users/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;github_username&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  devto &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; requests&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;https://dev.to/api/users/by_username?url=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;devto_username&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/args-kwargs/2.png&quot; alt=&quot;sending *args&quot; title=&quot;sending *args unpacks a list into individual arguments to be used in the function&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Inversely we can send a list of things as individual arguments by &lt;strong&gt;unpacking&lt;/strong&gt; them into the function call.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; things_to_print &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;eggs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;spam&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;ham&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; printer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;things_to_print&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; eggs
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; spam
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; ham&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;**kwargs are for dictionaries&lt;/h2&gt;
&lt;p&gt;Just like &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; being for lists, &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; are for dictionaries.  When packing them up inside of a function. The argument name passed in becomes the key, then invers happens when unpacking, the key becomes the argument for the function.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/args-kwargs/3.png&quot; alt=&quot;recieving **kwargs&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Here is a function accepting &lt;code class=&quot;language-text&quot;&gt;**printrows&lt;/code&gt; as it&apos;s only input. Any keyword argument that you pass into the function will get packed into a dictionary.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;printer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;printrows&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; printrows&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; printrows&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; printer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;breakfast&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;eggs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lunch&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;spam&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dinner&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;ham&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
breakfast eggs
lunch spam
dinner ham&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any arguments passed in will throw a &lt;code class=&quot;language-text&quot;&gt;TypeError&lt;/code&gt;, since this &lt;code class=&quot;language-text&quot;&gt;printer&lt;/code&gt; does not accept any positional arguments.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;printer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;one&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;
TypeError                                 Traceback &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ipython&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;f03e96cb5e14&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; printer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

TypeError&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; printer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; takes &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; positional arguments but &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; was given&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Avoid Anti-Patterns&lt;/h2&gt;
&lt;p&gt;Just as above, if your items are clearly separate things, make them separate things and do not use &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt;.  &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; are great when you have collections of things that all get treated exactly the sam, if they get treated differently, or you are expecting certain keys to always exist it will be very confusing to your users what they need to pass in.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/args-kwargs/4.png&quot; alt=&quot;sending **kwargs&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Sending &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; is quite useful.  Especially when combining various libraries together.  Often times you can coerse objects into a dictionary, often with something like &lt;code class=&quot;language-text&quot;&gt;.to_dict()&lt;/code&gt;, then pass that whole dictionary to another function.  This makes gluing different libraries together a breeze at times.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; things_to_print &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;breakfast&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;eggs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lunch&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;spam&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dinner&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;ham&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; printer&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;things_to_print&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
breakfast eggs
lunch spam
dinner ham&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;I setup a repl.it with these examples so that you can quickly jump in, run it, break it, fix it, add breakpoints and really get a feel for them yourself. Check it out 👉 &lt;a href=&quot;https://repl.it/@WaylonWalker/args#main.py&quot;&gt;https://repl.it/@WaylonWalker/args#main.py&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I hope this helps you understand &lt;code class=&quot;language-text&quot;&gt;*args&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;**kwargs&lt;/code&gt; just a bit more.  They can be quite handy to greatly simplify repetative code, expecially if we already have the data setup in the right data structure.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/python-args-kwargs.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/python-args-kwargs/.png</cover_image></item><item><title><![CDATA[Building kedro.dev]]></title><description><![CDATA[Follow along the Journey as I build out kedro.dev. Building a Community I have really enjoyed my own personal journey as I have started to…]]></description><link>https://waylonwalker.com/building-kedro-dev/</link><guid isPermaLink="false">https://waylonwalker.com/building-kedro-dev/</guid><pubDate>Fri, 05 Jun 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Follow along the Journey as I build out &lt;a href=&quot;https://kedro.dev&quot;&gt;kedro.dev&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Building a Community&lt;/h2&gt;
&lt;p&gt;I have really enjoyed my own personal journey as I have started to build all of my data pipeline projects with the kedro framework.  I want to start building a place to share resources with the community.  I want to see this community grow and flourish.  They say in front end web development if you are not using a framework you end up building one.  That&apos;s exactly what I was doing before I started using kedro.  I want to build out a set of resources that this community can learn from and start to use the framework at their own pace without needing to develop their own from scratch.&lt;/p&gt;
&lt;h2&gt;research&lt;/h2&gt;
&lt;p&gt;Looking into the front end frameworks to see how they welcome their community.  Much of my inspiration is from them, bringing lessons learned to data.&lt;/p&gt;
&lt;h3&gt;pages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;banner&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nav&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docs -&gt; readthedocs&lt;/li&gt;
&lt;li&gt;tutorial -&gt; kedro-examples&lt;/li&gt;
&lt;li&gt;blog -&gt; medium&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;community&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;support&lt;/li&gt;
&lt;li&gt;team&lt;/li&gt;
&lt;li&gt;courses&lt;/li&gt;
&lt;li&gt;examples&lt;/li&gt;
&lt;li&gt;meetups&lt;/li&gt;
&lt;li&gt;conferences&lt;/li&gt;
&lt;li&gt;articles&lt;/li&gt;
&lt;li&gt;podcasts&lt;/li&gt;
&lt;li&gt;videos&lt;/li&gt;
&lt;li&gt;external resources&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;search&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;examples&lt;/li&gt;
&lt;li&gt;footer&lt;/li&gt;
&lt;li&gt;sponsors&lt;/li&gt;
&lt;li&gt;newsletter&lt;/li&gt;
&lt;li&gt;copyright&lt;/li&gt;
&lt;li&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;components&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;edit this page&lt;/li&gt;
&lt;li&gt;scrolling toc&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Stack Overflow Api&lt;/h2&gt;
&lt;p&gt;fetch last 5 posts.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;https://api.stackexchange.com/2.2/questions?order=desc&amp;amp;sort=activity&amp;amp;site=stackoverflow&amp;amp;tagged=kedro&amp;amp;pagesize=5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;DEV.to api&lt;/h2&gt;
&lt;p&gt;fetch last 5 posts&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;https://dev.to/api/articles?tag=kedro&amp;amp;per_page=5&amp;amp;page=1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/building-kedro-dev.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/building-kedro-dev/.png</cover_image></item><item><title><![CDATA[pre-commit is awesome]]></title><description><![CDATA[I recently discovered the ✨ awesomeness that is pre-commit. I steered away from it for so long because it seemed like a big daunting thing…]]></description><link>https://waylonwalker.com/pre-commit-is-awesome/</link><guid isPermaLink="false">https://waylonwalker.com/pre-commit-is-awesome/</guid><pubDate>Fri, 05 Jun 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I recently discovered the ✨ awesomeness that is pre-commit. I steered away from it for so long because it seemed like a big daunting thing to set up, but really it&apos;s easy. It will automatically run checks for you. In some cases, it will even automatically fix them for you. Out of the box, it will do things like automatically trim extra whitespace, fix file endings, and ensure file sizes are not too large for git.&lt;/p&gt;
&lt;h2&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;It comes with a &lt;code class=&quot;language-text&quot;&gt;sample-config&lt;/code&gt; that is pretty general purpose and use for just about any project in git.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip instal pre-commit
pre-commit sample-config &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; .pre-commit-config.yaml
pre-commit &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;added pre-commit&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Cloned Repo&lt;/h2&gt;
&lt;p&gt;Once someone has created the &lt;code class=&quot;language-text&quot;&gt;.pre-commit-config.yaml&lt;/code&gt; everyone on the team will want to be running it for consistency&apos;s sake. (make sure everyone agrees with the config you have chosen first). Simply install the existing config.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pre-commit
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;repo&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
pre-commit &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;added pre-commit&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;sample-config&lt;/h2&gt;
&lt;p&gt;The sample configuration does some really basic, file ending, trailing-whitespace fixing. And checks for files too large for git. This one saved me when I tried to commit linux &lt;code class=&quot;language-text&quot;&gt;rpm&lt;/code&gt; once 🤦‍♀️.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# See https://pre-commit.com for more information&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# See https://pre-commit.com/hooks.html for more hooks&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;repos&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/pre&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;commit/pre&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;commit&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;hooks
    &lt;span class=&quot;token key atrule&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v2.4.0
    &lt;span class=&quot;token key atrule&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; trailing&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;whitespace
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; end&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;of&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;fixer
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; check&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;yaml
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; check&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;added&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;large&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;files&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Adding some extras from pre-commit themselves&lt;/h2&gt;
&lt;p&gt;Here I have added a couple of extra ones form pre-commit&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; check&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;case&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;conflict &lt;span class=&quot;token comment&quot;&gt;# Check for files that would conflict in case-insensitive filesystems&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; check&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;merge&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;conflict &lt;span class=&quot;token comment&quot;&gt;# Check for files that contain merge conflict strings.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; debug&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;statements &lt;span class=&quot;token comment&quot;&gt;# Check for debugger imports and py37+ `breakpoint()` calls in python source.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; requirements&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;txt&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;fixer &lt;span class=&quot;token comment&quot;&gt;# Sorts entries in requirements.txt&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; forbid&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;new&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;submodules &lt;span class=&quot;token comment&quot;&gt;# Check for git submodules&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flake8 &lt;span class=&quot;token comment&quot;&gt;# runs python flake8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The submodules one is big. I have seen several folks trying to learn git for the first time mistakenly start nesting all of their projects underneath each other and eventually losing a lot of work. Trying to learn the command line and git all at once can be really confusing.&lt;/p&gt;
&lt;h2&gt;skip pre-commit&lt;/h2&gt;
&lt;p&gt;So you have a big codebase and you are trying to get pre-commit ready, but you just need your changes in.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;git commit &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;m &quot;commiting wihout pre&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;commit&quot; &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;no&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;verify&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;manually run pre-commit&lt;/h2&gt;
&lt;p&gt;If you have an existing repo and want to run pre-commit on everything, since it was pre-existing, you can do that manually.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;pre&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;commit run &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;all&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;files&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;So pre-commit changed some files&lt;/h2&gt;
&lt;p&gt;Since &lt;code class=&quot;language-text&quot;&gt;pre-commit&lt;/code&gt; only runs against staged files, but makes changes to the local files you need to add them.&lt;/p&gt;
&lt;p&gt;Here is a git status after committing with some trailing whitespace issues.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; status
On branch main
Changes to be committed:
  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;token string&quot;&gt;&quot;git restore --staged &amp;lt;file&gt;...&quot;&lt;/span&gt; to unstage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        modified: README.md

Changes not staged &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; commit:
  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;token string&quot;&gt;&quot;git add &amp;lt;file&gt;...&quot;&lt;/span&gt; to update what will be committed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;token string&quot;&gt;&quot;git restore &amp;lt;file&gt;...&quot;&lt;/span&gt; to discard changes &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; working directory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        modified: README.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pre-commit&lt;/code&gt; will keep yelling at you about &lt;code class=&quot;language-text&quot;&gt;trailing whitespace&lt;/code&gt; until you add the files.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; README.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Community Developed plugins&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;give me more&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;These almost make it &lt;strong&gt;too&lt;/strong&gt; easy. Sharing your process to get up and running without &lt;code class=&quot;language-text&quot;&gt;pre-commit&lt;/code&gt; can involve a lot of instructions. Installing several different tools, then running them manually, probably forgetting to do so sometimes. These will automatically install and only run scoped to the files that have changed, not on the whole repo.&lt;/p&gt;
&lt;h3&gt;isort&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/asottile/seed&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;isort&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;config
&lt;span class=&quot;token key atrule&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v2.1.1
&lt;span class=&quot;token key atrule&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; seed&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;isort&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;config
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/pre&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;commit/mirrors&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;isort
&lt;span class=&quot;token key atrule&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v4.3.21
&lt;span class=&quot;token key atrule&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; isort&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;.isort.cfg&lt;/h3&gt;
&lt;p&gt;In order to get isort to play nicely with black, I found great success with the following config placed in the root of the repo at &lt;code class=&quot;language-text&quot;&gt;.isort.cfg&lt;/code&gt;. Without these settings, I found that you commits will consistently fail checks because &lt;code class=&quot;language-text&quot;&gt;isort&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;black&lt;/code&gt; are fighting each other.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;toml&quot;&gt;&lt;pre class=&quot;language-toml&quot;&gt;&lt;code class=&quot;language-toml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token table class-name&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token key property&quot;&gt;multi_line_output&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;token key property&quot;&gt;include_trailing_comma&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;True
&lt;span class=&quot;token key property&quot;&gt;force_grid_wrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token key property&quot;&gt;use_parentheses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;True
&lt;span class=&quot;token key property&quot;&gt;line_length&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;88&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;.flake8&lt;/h3&gt;
&lt;p&gt;Just as with &lt;code class=&quot;language-text&quot;&gt;isort&lt;/code&gt; flake8 tends to complain about a few things that black does. To get them to play nicely together place this file in the root of the repo at &lt;code class=&quot;language-text&quot;&gt;.flake8&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;toml&quot;&gt;&lt;pre class=&quot;language-toml&quot;&gt;&lt;code class=&quot;language-toml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# taken from black&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# added E231 as is conflicts with black formatting&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token table class-name&quot;&gt;flake8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token key property&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; E203&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; E266&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; E501&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; W503&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; E231&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; F541
&lt;span class=&quot;token key property&quot;&gt;max-line-length&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;88&lt;/span&gt;
&lt;span class=&quot;token key property&quot;&gt;max-complexity&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt;
&lt;span class=&quot;token key property&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; B&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;C&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;E&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;F&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;W&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;T4&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;B9&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;black&lt;/h3&gt;
&lt;p&gt;Black is an amazing CLI tool the python community has been blessed with. It was developed by python core dev Lukasz Langa after deep research of real python projects. It will autoformat your project and will check that the AST before and after remains the same ensuring that the code will run exactly the same. It only makes it more readable. I keep black installed and set to run on save. Many times I will bang out some sloppy code with long lines or poor indentation hit save and let black take care of the easy work.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/asottile/blacken&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;docs
    &lt;span class=&quot;token key atrule&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v1.7.0
    &lt;span class=&quot;token key atrule&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; blacken&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;docs
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;additional_dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;black&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/psf/black
    &lt;span class=&quot;token key atrule&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 19.3b0
    &lt;span class=&quot;token key atrule&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; black&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;mypy&lt;/h3&gt;
&lt;p&gt;I have recently fallen in love with mypy. It has saved me from shipping some bugs that would not have been caught with tests, even with 100% coverage. I don&apos;t have 100% coverage across every possible type entered.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/pre&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;commit/mirrors&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;mypy
      &lt;span class=&quot;token key atrule&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v0.720
      &lt;span class=&quot;token key atrule&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; mypy
            &lt;span class=&quot;token key atrule&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; tests/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Your own plugin&lt;/h2&gt;
&lt;p&gt;Sometimes you have a CLI tool that you want to run, but there is no plugin. No worries, you can install manually set the repo to local, and add an entry for your CLI command to run.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; local
      &lt;span class=&quot;token key atrule&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; interrogate
   		  &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Interrogate docstring coverage check&quot;&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; python&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; interrogate &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;f 100 &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;vv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;I have been writing short snippets about my mentality breaking into the tech/data industry in my newsletter, 👇 check it out and lets get the conversation started.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/pre-commit-is-awesome.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/pre-commit-is-awesome/.png</cover_image></item><item><title><![CDATA[Kedro Static Viz 0.3.0 is out with Hooks Support]]></title><description><![CDATA[kedro-static-viz is out with support for the newly released hooks feature.  This means that you can have  automatically deploy a full gatsby…]]></description><link>https://waylonwalker.com/kedro-static-viz-0-3-0/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-static-viz-0-3-0/</guid><pubDate>Thu, 28 May 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.com/WaylonWalker/kedro-static-viz&quot;&gt;kedro-static-viz&lt;/a&gt; is out with support for the newly released hooks feature.  This means that you can have &lt;code class=&quot;language-text&quot;&gt;kedro-static-viz&lt;/code&gt; automatically deploy a full gatsby site &lt;code class=&quot;language-text&quot;&gt;before_pipeline_run&lt;/code&gt; keeping your visualization always up to date.&lt;/p&gt;
&lt;p&gt;Even though it is a static site there is no functionality lost.  The only thing that&apos;s missing is the flask server.  With &lt;a href=&quot;https://github.com/WaylonWalker/kedro-static-viz&quot;&gt;kedro-static-viz&lt;/a&gt; you can deploy your visualization to a number of static hosting providers such as GitHub pages free of charge with wicked fast performance&lt;/p&gt;
&lt;h2&gt;⚡ It&apos;s Fast&lt;/h2&gt;
&lt;p&gt;Even though it&apos;s built on gatsbyjs the full site builds in under 2s even on slower hardware.  This is because the site is already pre-rendered and stripped of any excess.  It&apos;s zipped up right into the python package and is typically used with the cli, but now can be used with python, or as a hook as well.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; 🤔&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kedro viz is a fantastic kedro plugin that allows you to visualize your data pipeline.  Kedro allows you to quickly build production-ready pipelines where you just configure a catalog, then toss python functions into a big pile.  Kedro figures out the order everything needs ran in for you, allows you to run a datasets dependencies or dependents only.  &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; gives you a great way to see this ordering visually.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/pipeline_visualisation-1.png&quot; alt=&quot;a visualization of a kedro data pipeline featuring data and functions flowing together.&quot; title=&quot;kedro visualization&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;kedro visualization from the projects readme&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Check out a live running example&lt;/h2&gt;
&lt;p&gt;Using the power of GitHub actions the I have built a kedro iris pipeline visualization that can be found on &lt;a href=&quot;https://static-viz.kedro.dev/&quot;&gt;https://static-viz.kedro.dev/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Itching to get started with kedro&lt;/h2&gt;
&lt;p&gt;You can be up and running in a matter of minutes if you already have python running on your machine.&lt;/p&gt;
&lt;p&gt;Make a virtual environment with your environment manager of choice.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;conda create &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;n kedro&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;practice python&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;y
conda activate kedro&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;practice&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install kedro. Then create a new project with their awesome cli template built on cookiecutter. Make sure to answer &lt;code class=&quot;language-text&quot;&gt;y&lt;/code&gt; to get a prebuilt example pipeline with data.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;pip install kedro kedro-static-viz
kedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Vizualize your pipeline with the cli 〽&lt;/h2&gt;
&lt;p&gt;For local use when you already have the full project &lt;code class=&quot;language-text&quot;&gt;kedro viz&lt;/code&gt; is a great tool to use, but this is an article about kedro-static-viz.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;kedro&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;static&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;viz static&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;viz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we used &lt;code class=&quot;language-text&quot;&gt;kedro-static-viz&lt;/code&gt; you will have a new directory called &lt;code class=&quot;language-text&quot;&gt;public&lt;/code&gt; that you can host on any static web hosting service, like GitHub pages or Netlify.&lt;/p&gt;
&lt;h2&gt;Ready to try out the new hooks feature 🙋‍♀️&lt;/h2&gt;
&lt;p&gt;Open up your &lt;code class=&quot;language-text&quot;&gt;&amp;lt;project&amp;gt;/src/run.py&lt;/code&gt; and add the hook to your &lt;code class=&quot;language-text&quot;&gt;ProjectContext&lt;/code&gt; class.  Next time you run your pipeline you will have an updated pipeline.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro_static_viz&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hooks &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; StaticViz

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;KedroContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   project_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro0160&quot;&lt;/span&gt;
   project_version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.16.1&quot;&lt;/span&gt;
   package_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro0160&quot;&lt;/span&gt;
   hooks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; StaticViz&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Now Run that pipeline 🏃‍♀️&lt;/h2&gt;
&lt;p&gt;Run your pipeline and enjoy that fresh kedro viz each and every time you run your pipeline.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Want to make your own hooks 🎣&lt;/h2&gt;
&lt;p&gt;Check out some of my other articles on building kedro hooks.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/kedro-class-hooks/&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/configurable-kedro-hooks.png&quot; alt=&quot;creating customizable kedro hooks&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/creating-the-kedro-preflight-hook/&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/kedro-hooks.png&quot; alt=&quot;creating the kedro preflight hook&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Check out the example 👉 &lt;a href=&quot;https://static-viz.kedro.dev/&quot;&gt;https://static-viz.kedro.dev/&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-static-viz-0-3-0.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-static-viz-0-3-0/.png</cover_image></item><item><title><![CDATA[Create Configurable Kedro Hooks]]></title><description><![CDATA[There are two main ways to create kedro hooks, with modules and classes.  Each one still uses the same verbiage as the function/method names…]]></description><link>https://waylonwalker.com/kedro-class-hooks/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-class-hooks/</guid><pubDate>Sat, 23 May 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;There are two main ways to create kedro hooks, with modules and classes.  Each one still uses the same verbiage as the function/method names.&lt;/p&gt;
&lt;p&gt;Class hooks seem a bit special as they give you a way to configure them so that they are a bit more generally useful.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is Kedro 🤔&lt;/h3&gt;
&lt;p&gt;If you are completely unsure what kedro is be sure to check out my &lt;a href=&quot;https://waylonwalker.com/wike&quot;&gt;what is kedro&lt;/a&gt; post&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;.create a new environment manager of choice.  Here I will use &lt;code class=&quot;language-text&quot;&gt;conda&lt;/code&gt;. Then we will install &lt;code class=&quot;language-text&quot;&gt;kedro&lt;/code&gt; from pypi.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n kedro_class_hooks -y
conda activate kedro_class_hooks &lt;span class=&quot;token comment&quot;&gt;# may also be source activate kedro_class_hooks or activate kedro_class_hooks&lt;/span&gt;
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create a sample project&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h3&gt;Kedro new&lt;/h3&gt;
&lt;p&gt;For more details check out my full post on &lt;a href=&quot;https://waylonwalker.com/knew&quot;&gt;kedro new&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For this post I really just want a working pipeline as fast as possible.  For this I am going to use iris pipeline that is generated from the &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; command in the cli.  It&apos;s &lt;strong&gt;important&lt;/strong&gt; that you answer &lt;code class=&quot;language-text&quot;&gt;y&lt;/code&gt; to create an example pipeline.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;Hold On ✋&lt;/h3&gt;
&lt;p&gt;Did you create a separate environment for this?  Please do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you run the &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; command it will ask a series of questions.  👇 Here is how I answered them.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Project Name:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
Please enter a human readable name &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your new project.
Spaces and punctuation are allowed.
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;New Kedro Project&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Kedro Class Hooks
Repository Name:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;
Please enter a directory name &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your new project repository.
Alphanumeric characters, hyphens and underscores are allowed.
Lowercase is recommended.
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;kedro-class-hooks&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;:
Python Package Name:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;
Please enter a valid Python package name &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your project package.
Alphanumeric characters and underscores are allowed.
Lowercase is recommended. Package name must start with a letter or underscore.
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;kedro_class_hooks&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;:
Generate Example Pipeline:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;
Do you want to generate an example pipeline &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; your project?
Good &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; first-time users. &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;y/N&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: y
Change directory to the project generated &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /mnt/c/temp/kedro-hooks/
A best-practice setup includes initialising &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; and creating a virtual environment before running &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt; to &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; project-specific dependencies. Refer to the Kedro documentation: https://kedro.readthedocs.io/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Install the Project&lt;/h3&gt;
&lt;p&gt;Next install the project itself and all of its dependencies with the &lt;code class=&quot;language-text&quot;&gt;kedro install&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; kedro-hooks
kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;🏃‍♀️ Run the pipeline&lt;/h3&gt;
&lt;p&gt;Before we start developing any hooks lets make sure everything is set up correctly by running the pipeline with &lt;code class=&quot;language-text&quot;&gt;kedro run&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;class hook without &lt;code class=&quot;language-text&quot;&gt;self&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A kedro class-based hook is a class with methods using the kedro lifecycle names, decorated with &lt;code class=&quot;language-text&quot;&gt;@hook_impl&lt;/code&gt;, If we create a class-based kedro hook without &lt;code class=&quot;language-text&quot;&gt;self&lt;/code&gt; in the method calls, we simply pass the hook class itself into the hooks list. And we are off.  Kedro will call each method as it hits that point in its lifecycle.  It will pass any of the possible arguments, see arguments below.  Each method has a different set of possible arguments.  You don&apos;t need to ask for all of them, but I did here so that you could see them.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;framework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hooks &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; hook_impl

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;debug_hook&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;debugs all kedro hook points&quot;&quot;&quot;&lt;/span&gt;

	&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@staticmethod&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;before_pipeline_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger before pipeline run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked in right before the pipeline run&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_before_pipeline_run&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@staticmethod&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;after_pipeline_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger after pipeline run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked in right after the pipeline run&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@staticmethod&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;on_pipeline_error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger on pipeline error&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked into the pipeline during an error&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@staticmethod&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;after_catalog_created&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; conf_catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; conf_creds&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; feed_dict&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; save_version&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; load_versions&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger after catalog created&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked in right after the catalog created&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@staticmethod&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;before_node_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_async&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger before node run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked in right before the node run&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@staticmethod&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;after_node_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_async&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger after node run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked in right after the node run&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@staticmethod&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;on_node_error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_async&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger on node error&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked into the node during an error&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Implement the hook object&lt;/h4&gt;
&lt;p&gt;With this version of the hook it gets added to the &lt;code class=&quot;language-text&quot;&gt;ProjectContext&lt;/code&gt; as the class itself, not an instance.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;KedroContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Users can override the remaining methods from the parent class here,
    or create new ones (e.g. as required by plugins)
    &quot;&quot;&quot;&lt;/span&gt;

    project_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro_class_hooks&quot;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# `project_version` is the version of kedro used to generate the project&lt;/span&gt;
    project_version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.16.1&quot;&lt;/span&gt;
    package_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro_class_hooks&quot;&lt;/span&gt;

    hooks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        debug_hook
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Generalizing debug_hook&lt;/h2&gt;
&lt;p&gt;If we want to generalize the debug hook and make it a bit more re-usable across all of our projects, we can include the &lt;code class=&quot;language-text&quot;&gt;self&lt;/code&gt; argument, on each method and a &lt;code class=&quot;language-text&quot;&gt;__init__&lt;/code&gt; method in which we can configure our hook.  This will make the hook configurable.  We can now create an instance of the &lt;code class=&quot;language-text&quot;&gt;debug_hook&lt;/code&gt; class, and tell it which lifecycle points should trigger the debugger.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot; Kedro Debug Hook module &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;framework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hooks &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; hook_impl

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;debug_hook&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot; Kedro Debug Hook

    Opens a debugger at any hook-able point of your kedro projects lifecycle.
    debug_hook is applied by adding it to the pipeline and setting the desired
    debug points to true.

    Examples:

        &gt;&gt;&gt; hooks = [debug_hook(should_debug_all=True)]
        &gt;&gt;&gt; hooks = [debug_hook(should_debug_before_pipeline_run=True)]

    Args:
        should_debug_all (bool): overrides all points Defaults to False
        should_debug_before_pipeline_run (bool): opens a debugger
            before_pipeline_run if True Defaults to False
        should_debug_after_pipeline_run (bool): opens a debugger
            after_pipeline_run if True Defaults to False
        should_debug_on_pipeline_error (bool): opens a debugger
            on_pipeline_error if True Defaults to False
        should_debug_before_node_run (bool): opens a debugger
            before_node_run if True Defaults to False
        should_debug_after_node_run (bool): opens a debugger
            after_node_run if True Defaults to False
        should_debug_on_node_error (bool): opens a debugger
            on_node_error if True Defaults to False
        should_debug_after_catalog_created (bool): opens a debugger
            after_catalog_created if True Defaults to False

    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_all&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_before_pipeline_run&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_after_pipeline_run&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_on_pipeline_error&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_before_node_run&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_after_node_run&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_on_node_error&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        should_debug_after_catalog_created&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_before_pipeline_run &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            should_debug_before_pipeline_run &lt;span class=&quot;token keyword&quot;&gt;or&lt;/span&gt; should_debug_all
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_after_pipeline_run &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            should_debug_after_pipeline_run &lt;span class=&quot;token keyword&quot;&gt;or&lt;/span&gt; should_debug_all
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_on_pipeline_error &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            should_debug_on_pipeline_error &lt;span class=&quot;token keyword&quot;&gt;or&lt;/span&gt; should_debug_all
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_before_node_run &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            should_debug_before_node_run &lt;span class=&quot;token keyword&quot;&gt;or&lt;/span&gt; should_debug_all
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_after_node_run &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            should_debug_after_node_run &lt;span class=&quot;token keyword&quot;&gt;or&lt;/span&gt; should_debug_all
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_on_node_error &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; should_debug_on_node_error &lt;span class=&quot;token keyword&quot;&gt;or&lt;/span&gt; should_debug_all
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_after_catalog_created &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            should_debug_after_catalog_created &lt;span class=&quot;token keyword&quot;&gt;or&lt;/span&gt; should_debug_all
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;before_pipeline_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger before pipeline run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_before_pipeline_run&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;after_pipeline_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger after pipeline run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_after_pipeline_run&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;on_pipeline_error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger on pipeline error&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_on_pipeline_error&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;after_catalog_created&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        conf_catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        conf_creds&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        feed_dict&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        save_version&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        load_versions&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        run_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger after catalog created&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_after_catalog_created&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;before_node_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_async&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger before node run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_before_node_run&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;after_node_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_async&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger after node run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_after_node_run&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;on_node_error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_async&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; run_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger on node error&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;should_debug_on_node_error&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;implement the hook instance&lt;/h4&gt;
&lt;p&gt;When &lt;code class=&quot;language-text&quot;&gt;self&lt;/code&gt; is used in the method calls we must pass an instance of the &lt;code class=&quot;language-text&quot;&gt;debug_hook&lt;/code&gt; into the hooks list, not the class itself.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;KedroContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Users can override the remaining methods from the parent class here,
    or create new ones (e.g. as required by plugins)
    &quot;&quot;&quot;&lt;/span&gt;

    project_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro_class_hooks&quot;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# `project_version` is the version of kedro used to generate the project&lt;/span&gt;
    project_version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.16.1&quot;&lt;/span&gt;
    package_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro_class_hooks&quot;&lt;/span&gt;

    hooks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;debug_hook&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;should_debug_all&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;Hooks are an amazing addition to the kedro framework that will allow the community to make big changes to how their kedro project gets ran without needing to change kedro itself.  Using a hook class with self can make them so much more configurable, and reusable across different projects without a lot of extra code. Personally I still really like the module method that we used in &lt;a href=&quot;https://waylonwalker.com/creating-the-kedro-preflight-hook/&quot;&gt;kedro-preflight&lt;/a&gt;.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-class-hooks.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-class-hooks/.png</cover_image></item><item><title><![CDATA[Brainstorming Kedro Hooks]]></title><description><![CDATA[This post is a 🧠 branstorming work in progress. What is Kedro 🤔 If you are completely unsure what kedro is be sure to check out my what is…]]></description><link>https://waylonwalker.com/brainstorming-kedro-hooks/</link><guid isPermaLink="false">https://waylonwalker.com/brainstorming-kedro-hooks/</guid><pubDate>Fri, 22 May 2020 22:02:00 GMT</pubDate><content:encoded>&lt;p&gt;This post is a 🧠 branstorming work in progress.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;What is Kedro 🤔&lt;/h3&gt;
&lt;p&gt;If you are completely unsure what kedro is be sure to check out my &lt;a href=&quot;https://waylonwalker.com/wike&quot;&gt;what is kedro&lt;/a&gt; post&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;after&lt;em&gt;catalog&lt;/em&gt;created&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;filepath replacer&lt;/li&gt;
&lt;li&gt;bucket replacer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;before&lt;em&gt;pipeline&lt;/em&gt;run&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;preflight&lt;/li&gt;
&lt;li&gt;check that data exists&lt;/li&gt;
&lt;li&gt;run &lt;code class=&quot;language-text&quot;&gt;kedro_static_viz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;run mypy&lt;/li&gt;
&lt;li&gt;run interrogate&lt;/li&gt;
&lt;li&gt;run flake8&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;after&lt;em&gt;pipeline&lt;/em&gt;run&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Great Expectations&lt;/li&gt;
&lt;li&gt;send email&lt;/li&gt;
&lt;li&gt;send slack&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;before&lt;em&gt;node&lt;/em&gt;run&lt;/h2&gt;
&lt;h2&gt;after&lt;em&gt;node&lt;/em&gt;run&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Great Expectations&lt;/li&gt;
&lt;li&gt;save stats/meta data&lt;/li&gt;
&lt;li&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Execution Order&lt;/h2&gt;
&lt;p&gt;hooks are executed in reverse order of the hooks list.&lt;/p&gt;
&lt;p&gt;hooks with &lt;code class=&quot;language-text&quot;&gt;tryfirst&lt;/code&gt; will be moved to the end of the list
hooks with &lt;code class=&quot;language-text&quot;&gt;trylast&lt;/code&gt; will be moved to the end of the list&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;after&lt;em&gt;catalog&lt;/em&gt;created&lt;/li&gt;
&lt;li&gt;before&lt;em&gt;pipeline&lt;/em&gt;run&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;args&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;run&lt;em&gt;params = run&lt;/em&gt;params = {&apos;run&lt;em&gt;id&apos;: &apos;2020-05-23T15.24.23.958Z&apos;, &apos;project&lt;/em&gt;path&apos;: &apos;/mnt/c/temp/kedro0160&apos;, &apos;env&apos;: &apos;local&apos;, &apos;kedro&lt;em&gt;version&apos;: &apos;0.15.9&apos;, &apos;tags&apos;: (), &apos;from&lt;/em&gt;nodes&apos;: [], &apos;to&lt;em&gt;nodes&apos;: [], &apos;node&lt;/em&gt;names&apos;: (), &apos;from&lt;em&gt;inputs&apos;: [], &apos;load&lt;/em&gt;versions&apos;: {}, &apos;pipeline&lt;em&gt;name&apos;: None, &apos;extra&lt;/em&gt;params&apos;: {}, &apos;git_sha&apos;: None}&lt;/li&gt;
&lt;li&gt;pipeline&lt;/li&gt;
&lt;li&gt;catalog&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;before&lt;em&gt;node&lt;/em&gt;run&lt;/li&gt;
&lt;li&gt;after&lt;em&gt;node&lt;/em&gt;run&lt;/li&gt;
&lt;li&gt;3.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;When does data get saved???&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;before or after node hook?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;??Unsure??&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;does before  catalog load have access to parameters?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;[steel toes](&lt;a href=&quot;https://github.com/waylonwalker/steel-toes/&quot;&gt;https://github.com/waylonwalker/steel-toes/&lt;/a&gt;)6&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;I was way too excited about this one and already created it&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;prevents pain from stepping on your teammates toes&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kedro is so amazing at promoting collaboration between team members.  Each team member can check out the code, branch, and start work on their own section of the pipeline.  Issues can arrise if the team members section of the pipeline happen to cross.  Breaking changes happen, BREAKS during development happen and can completely kill a teammates workflow.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is there a way to prevent toe stepping?&lt;/li&gt;
&lt;li&gt;try to load &lt;code class=&quot;language-text&quot;&gt;filepath_&amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;if load fails try &lt;code class=&quot;language-text&quot;&gt;filepath&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;save data to &lt;code class=&quot;language-text&quot;&gt;filepath_&amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;how&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;on after&lt;em&gt;catalog&lt;/em&gt;load check for existing &quot;branch&quot; data&lt;/li&gt;
&lt;li&gt;if &quot;branch&quot; data exists load that&lt;/li&gt;
&lt;li&gt;otherwise keep default&lt;/li&gt;
&lt;li&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Run only nodes that have changed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;store a deephash of functions code&lt;/li&gt;
&lt;li&gt;store a hash of the inputs&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if neither code or inputs changed run function, otherwise skip.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How could a hook choose to skip the node?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Static viz hook&lt;/h2&gt;
&lt;p&gt;Before pipeline run&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make site&lt;/li&gt;
&lt;li&gt;Set node status to queued&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before node run&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set running status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After node run&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set running status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On pipeline error&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set run status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On node error&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set error status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After pipeline run&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set complete status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After node run&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set complete&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/brainstorming-kedro-hooks.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/brainstorming-kedro-hooks/.png</cover_image></item><item><title><![CDATA[Gatsby Scripts with onload]]></title><description><![CDATA[This might be useful https://github.com/nfl/react-helmet/issues/146 https://github.com/gatsbyjs/gatsby/issues/13136]]></description><link>https://waylonwalker.com/gatsby-scripts-with-onload/</link><guid isPermaLink="false">https://waylonwalker.com/gatsby-scripts-with-onload/</guid><pubDate>Fri, 22 May 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This might be useful&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nfl/react-helmet/issues/146&quot; title=&quot;https://github.com/nfl/react-helmet/issues/146&quot;&gt;https://github.com/nfl/react-helmet/issues/146&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/13136&quot; title=&quot;https://github.com/gatsbyjs/gatsby/issues/13136&quot;&gt;https://github.com/gatsbyjs/gatsby/issues/13136&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/gatsby-scripts-with-onload.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/gatsby-scripts-with-onload/.png</cover_image></item><item><title><![CDATA[How to get Dev Comments from an article Url]]></title><description><![CDATA[I want to incorporate some of the wonderful comments, 💕, 🦄, and 🔖's that I have been getting on dev.to on my website.  I have dabbled…]]></description><link>https://waylonwalker.com/devto-comments-from-url/</link><guid isPermaLink="false">https://waylonwalker.com/devto-comments-from-url/</guid><pubDate>Wed, 20 May 2020 10:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I want to incorporate some of the wonderful comments, 💕, 🦄, and 🔖&apos;s that I have been getting on &lt;strong&gt;dev.to&lt;/strong&gt; on my website.  I have dabbled once or twice with no avail this time I am taking notes on my journey, so follow along and let&apos;s get there together.  By the end of this post, I will have a way to get comments from posts on the client-side thanks to the wonderfully open dev.to API.&lt;/p&gt;
&lt;h2&gt;The API&lt;/h2&gt;
&lt;p&gt;dev.to has an open API that allows us to easily get comments as HTML.  They have their API hosted at &lt;a href=&quot;https://docs.dev.to/api/#tag/comments&quot;&gt;https://docs.dev.to/api/#tag/comments&lt;/a&gt;, let&apos;s take a look at it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/dev-to-api-comments.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here we can see that going to &lt;a href=&quot;https://dev.to/api/comments?a_id=270180&quot;&gt;https://dev.to/api/comments?a_id=270180&lt;/a&gt; returns us some json, that contains an array of comments.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;body_html&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &apos;&amp;lt;the comment rendered as html&gt;&apos;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   user&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&amp;lt;an array with quite a bit of information about the commenting user&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   children&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&amp;lt;an array of child comment objects&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
   &amp;lt;other stuff we don&apos;t care about&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &amp;lt;more comments&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;What the heck is that a_id&lt;/h2&gt;
&lt;p&gt;That is an &lt;code class=&quot;language-text&quot;&gt;article_id&lt;/code&gt;.  Though a bit of searching I found that it occurs in at least four places on every page as a data attribute.  Using chrome dev tools I found a good place to &quot;query&quot; it from.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/dev-to-article-id.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;With this knowledge, we can fetch the contents of an article and pull the &lt;code class=&quot;language-text&quot;&gt;articleId&lt;/code&gt; from it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDevToAId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// Gets the articleId of a dev.to article&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; root &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://dev.to/&apos;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; root &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; url
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; domparser &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DOMParser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; html &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; doc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; domparser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parseFromString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;text/html&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; articleId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; doc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;#article-body&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;articleId
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; articleId
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;  I do check to see if a full URL or slug was given, if it was just the slug I tack on &lt;code class=&quot;language-text&quot;&gt;https://dev.to/&lt;/code&gt; before fetching.&lt;/p&gt;
&lt;h2&gt;Now the comments&lt;/h2&gt;
&lt;p&gt;The main event is here, what you all have waited for, and it&apos;s by far the easiest part.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDevToComments&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; articleId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDevToAId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://dev.to/api/comments?a_id=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;articleId&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; comments &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; comments
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hardest part of this was figuring out what the &lt;code class=&quot;language-text&quot;&gt;a_id&lt;/code&gt; was and how I was going to get it from some more commonly known information about my articles, the URL, or the slug&lt;/p&gt;
&lt;h2&gt;Try it out&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;F12&lt;/strong&gt; pop open your console right in dev tools of this post and try it out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/dev-to-comments-in-devtools.png&quot;&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/devto-comments-from-url.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/devto-comments-from-url/.png</cover_image></item><item><title><![CDATA[Four github actions for your website]]></title><description><![CDATA[GitHub's actions are a new GitHub feature that will trigger GitHub to spin up a virtual machine and run some tasks with some special access…]]></description><link>https://waylonwalker.com/four-github-actions-website/</link><guid isPermaLink="false">https://waylonwalker.com/four-github-actions-website/</guid><pubDate>Mon, 18 May 2020 13:02:00 GMT</pubDate><content:encoded>&lt;p&gt;GitHub&apos;s actions are a new GitHub feature that will trigger GitHub to spin up a virtual machine and run some tasks with some special access to your repo. It can interact with comments/issues, it can clone your repo, You can explicitly pass in secrets so that it can commit back to the repo or deploy to another service. The environment may be a Linux, windows, or even a mac machine. I believe this is wildly incredible for the open-source community, putting these tools in the same place that we are already collaborating is so convenient.&lt;/p&gt;
&lt;h2&gt;What can they do for my personal website? 🤔&lt;/h2&gt;
&lt;p&gt;GitHub actions can give you confidence that your site is up and running, with the latest JavaScript packages, does not have broken links, and can even take screenshots of what your website looks like on different screen sizes and operating systems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;periodically check that the website is up&lt;/li&gt;
&lt;li&gt;update npm&lt;/li&gt;
&lt;li&gt;url checker&lt;/li&gt;
&lt;li&gt;screenshot website&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/srt32/uptime&quot;&gt;srt32/uptime&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/srt32/uptime&quot;&gt;srt32/uptime&lt;/a&gt; is an action that you can run on any public website. I run this one several times every day and it gives me confidence that my various sites are still up and running. It ensures that my build didn&apos;t break something, nothing is wrong with my hosting provider, or my DNS.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; check if site is up
&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;0 0 * * *&apos;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;ping_site&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Ping the site
    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Check the site
      &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hello
      &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; srt32/uptime@master
      &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;url-to-hit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://waylonwalker.com/&quot;&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;expected-statuses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;200,301&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/taichi/actions-package-update&quot;&gt;taichi/actions-package-update&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is another one to make sure that your package.json does not get too far out of date, or have any vulnerabilities. &lt;a href=&quot;https://github.com/taichi/actions-package-update&quot;&gt;taichi/actions-package-update&lt;/a&gt; will submit a PR back to your repo with any updated dependencies. Since it submits it as a pr, your tests triggered by PRs should also run. giving you confidence that you are ready to update.&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;https://github.com/taichi/actions-package-update/raw/master/docs/actions-package-update.png&quot; style=&quot;width:600px; max-width:80%; margin: auto;&quot; alt=&quot;image of a PR submitted by actions-package-update&quot;&gt;
&lt;/p&gt;
&lt;p&gt;Example to update &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; every Wednesday night at midnight.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0 0 * * 3
&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Update
&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;package-update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest
    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@master
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; set remote url
      &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; git remote set&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;url &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;push origin https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//$GITHUB_ACTOR&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;$&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.GITHUB_TOKEN &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;@github.com/$GITHUB_REPOSITORY
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; package&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;update
      &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; taichi/actions&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;package&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;update@master
      &lt;span class=&quot;token key atrule&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;AUTHOR_EMAIL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; john@example.com
        &lt;span class=&quot;token key atrule&quot;&gt;AUTHOR_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; john
        &lt;span class=&quot;token key atrule&quot;&gt;EXECUTE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;true&quot;&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.GITHUB_TOKEN &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;LOG_LEVEL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; debug
      &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;u &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;packageFile package.json &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;loglevel verbose&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/urlstechie/urlchecker-action&quot;&gt;urlstechie/urlchecker-action&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/urlstechie/urlchecker-action&quot;&gt;urlstechie/urlchecker-action&lt;/a&gt; is an action to collect and check URLs in a project and report on broken links. This is another one to give yourself some confidence that you are not linking out to a broken site, and can give you a heads up before you have frustrated users.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Check URLs

&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;push&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest

    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@v2
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; urls&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;checker
      &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; urlstechie/urlchecker&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;action@0.2.1
      &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# A subfolder or path to navigate to in the present or cloned repository&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;subfolder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; docs

        &lt;span class=&quot;token comment&quot;&gt;# A comma-separated list of file types to cover in the URL checks&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;file_types&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .md&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;.py&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;.rst

        &lt;span class=&quot;token comment&quot;&gt;# Choose whether to include file with no URLs in the prints.&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;print_all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;false&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# The timeout seconds to provide to requests, defaults to 5 seconds&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# How many times to retry a failed request (each is logged, defaults to 1)&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;retry_count&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# A comma separated links to exclude during URL checks&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;white_listed_urls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/SuperKogito/URLs&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;checker/issues/1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/SuperKogito/URLs&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;checker/issues/2

        &lt;span class=&quot;token comment&quot;&gt;# A comma separated patterns to exclude during URL checks&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;white_listed_patterns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/SuperKogito/Voice&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;based&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;gender&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;recognition/issues

        &lt;span class=&quot;token comment&quot;&gt;# choose if the force pass or not&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;force_pass&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/swinton/screenshot-website&quot;&gt;swinton/screenshot-website&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/swinton/screenshot-website&quot;&gt;swinton/screenshot-website&lt;/a&gt; will take a screenshot of your website. It can even run a matrix of sizes and os&apos;s to check how your site looks on various systems.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; screenshot&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;website
&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;0 0 0 * *&apos;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;screenshot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Screenshot
    &lt;span class=&quot;token key atrule&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; macos&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; windows&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;992&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;768&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; matrix.os &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Screenshot Website
      &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; swinton/screenshot&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;website@v1.x
      &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//waylonwalker.com/
        &lt;span class=&quot;token key atrule&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; screenshot&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;$&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; matrix.os &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;$&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; matrix.width &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;.png
        &lt;span class=&quot;token key atrule&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; matrix.width &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/four-github-actions-website.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/four-github-actions-website/.png</cover_image></item><item><title><![CDATA[Adding google fonts to a gatsbyjs site]]></title><description><![CDATA[stack overflow link]]></description><link>https://waylonwalker.com/adding-google-fonts-to-a-gatsbyjs-site/</link><guid isPermaLink="false">https://waylonwalker.com/adding-google-fonts-to-a-gatsbyjs-site/</guid><pubDate>Sun, 17 May 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/47488440/how-do-i-add-google-fonts-to-a-gatsby-site&quot;&gt;stack overflow link&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/adding-google-fonts-to-a-gatsbyjs-site.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/adding-google-fonts-to-a-gatsbyjs-site/.png</cover_image></item><item><title><![CDATA[Create Custom Kedro Dataset]]></title><description><![CDATA[Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and…]]></description><link>https://waylonwalker.com/create-custom-kedro-dataset/</link><guid isPermaLink="false">https://waylonwalker.com/create-custom-kedro-dataset/</guid><pubDate>Fri, 15 May 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and saving your data.  For the most part you just need to tell Kedro what connector to use and its filepath.  When running Kedro takes care of all of the read/write, you just reference the catalog key.&lt;/p&gt;
&lt;h2&gt;But what is happening behind the scenes&lt;/h2&gt;
&lt;p&gt;Under the hood there is an &lt;code class=&quot;language-text&quot;&gt;AbstractDataSet&lt;/code&gt; that each connector inherits from.  It sets up a lot of the behind the scenes structure for us so that we dont have to.  For the most part kedro has connectors for about anything that you want to load, csv, parquet, sql, json, from about anywhere, http, s3, localfile system are just some of the examples.&lt;/p&gt;
&lt;p&gt;Here is a DataSet implementation from their docs.  Here you can see the barebones example straight from the docs.  Parameters from the yaml catalog will get passed in&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Path

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd

&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; AbstractDataSet


&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyOwnDataSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;AbstractDataSet&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; param1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; param2&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; filepath&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; version&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__init__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; version&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_param1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; param1
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_param2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; param2

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_load&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        load_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_get_load_path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;load_path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; df&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        save_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_get_save_path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        df&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;save_path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

 	&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_exists&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_get_load_path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;is_file&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_describe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;version&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_version&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; param1&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_param1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; param2&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_param2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/create-custom-kedro-dataset.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/create-custom-kedro-dataset/.png</cover_image></item><item><title><![CDATA[Interrogate is a pretty awesome, brand new, cli for Python packages]]></title><description><![CDATA[As usual while listening to python bytes 181 I heard of a tool that I had to try out right away! This thing is 🔥 hot off the press folks…]]></description><link>https://waylonwalker.com/interrogate/</link><guid isPermaLink="false">https://waylonwalker.com/interrogate/</guid><pubDate>Fri, 15 May 2020 03:00:00 GMT</pubDate><content:encoded>&lt;p&gt;As usual while listening to &lt;a href=&quot;https://pythonbytes.fm/episodes/show/181/it-s-time-to-interrogate-your-python-code&quot;&gt;python bytes 181&lt;/a&gt; I heard of a tool that I had to try out right away!&lt;/p&gt;
&lt;p&gt;This thing is 🔥 hot off the press folks, we&apos;re talking the first release only 3 weeks ago. Its something that the python community needed years ago, and it belongs in your CI &lt;strong&gt;today&lt;/strong&gt;. I had tried several tools that tried to do docstring coverage in the past but they were a bit cumbersome and were quickly forgotten about. Not interrogate, its dead simple!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nothing I have tried has come close to being this good&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Interrogate&lt;/h2&gt;
&lt;p&gt;It runs documentation coverage for your python project. It allows you to set the minimum amount of docstring coverage for your project and has some great setup instructions right in the readme.&lt;/p&gt;
&lt;h2&gt;Install it&lt;/h2&gt;
&lt;p&gt;Interrogate is on pypi so it is super simple to install with &lt;code class=&quot;language-text&quot;&gt;pip&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;pip install interrogate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;run it&lt;/h2&gt;
&lt;p&gt;This is the best part, its super easy to run right from the command line! Just call it, and give it a path to run.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;interrogate -v &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;😲 I have some work to do&lt;/h2&gt;
&lt;p&gt;One of my new open source packages &lt;a href=&quot;https://find-kedro.waylonwalker.com/&quot;&gt;find-kedro&lt;/a&gt; only hit 71%.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;interrogate find-kedro -v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/interrogate-python-v.png&quot; alt=&quot;verbose interrogate on find-kedro&quot;&gt;&lt;/p&gt;
&lt;p&gt;Personally I really like the &lt;strong&gt;double verbose&lt;/strong&gt; output that gives you the names of everything missing a docstring and the line they occur on.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;interrogate find-kedro -vv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/interrogate-python-vv.png&quot; alt=&quot;double verbose interrogate on find-kedro&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Give it a ⭐&lt;/h2&gt;
&lt;p&gt;Every project this amazing deserves a big ol ⭐ on GitHub! Go over to &lt;a href=&quot;https://github.com/econchick/interrogate&quot;&gt;econchick/interrogate&lt;/a&gt; and give it a one... it deserves it! While you are there check out the &lt;strong&gt;wicked&lt;/strong&gt; good readme. It has great examples of how to run it from your command line, as a pre-commit hook, in your ci, with your code, or pyproject.toml.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While you are there check out the &lt;strong&gt;wicked&lt;/strong&gt; good readme!&lt;/p&gt;
&lt;/blockquote&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/interrogate.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/interrogate/.png</cover_image></item><item><title><![CDATA[drawing ascii boxes]]></title><description><![CDATA[When creating cli's I often want some nice full-width character.  I find it tough to find them, and when I do half the time it is an image…]]></description><link>https://waylonwalker.com/drawing-ascii-boxes/</link><guid isPermaLink="false">https://waylonwalker.com/drawing-ascii-boxes/</guid><pubDate>Tue, 12 May 2020 22:05:00 GMT</pubDate><content:encoded>&lt;p&gt;When creating cli&apos;s I often want some nice full-width character.  I find it tough to find them, and when I do half the time it is an image or something that cannot be copied 👿.&lt;/p&gt;
&lt;p&gt;I rarely get very complex with my semi-manual ASCII art.  I can do 98% of what I need with bars and corners.  Using some simple full-width characters can really give your cli a nice clean look.&lt;/p&gt;
&lt;h1&gt;Example&lt;/h1&gt;
&lt;p&gt;I&apos;d say 50% of what I need is just a full-width horizontal bar to give some visual flair or separation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../static/fw-bar-print.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Bars&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;― ⍽ ⎸ ⎹ ␣ ─ ━ │ ┃&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Square Corners&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;┌ ┍ ┎ ┏ ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Round Corners&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;╭ ╮ ╯ ╰ ╱ ╲ ╳&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Harpoons&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt; ⃑ ⃬ ⃭ ↼ ↽ ↾ ↿ ⇀ ⇁ ⇂ ⇃ ⇋ ⇌ ⥊ ⥋ ⥌ ⥍ ⥎ ⥏ ⥐ ⥑ ⥒ ⥓ ⥔ ⥕ ⥖ ⥗ ⥘ ⥙ ⥚ ⥛ ⥜ ⥝ ⥞ ⥟ ⥠ ⥡ ⥢ ⥣ ⥤ ⥥ ⥦ ⥧ ⥨ ⥩ ⥪ ⥫ ⥬ ⥭ ⥮ ⥯&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Double Boxes&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟ ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Dashed Boxes&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋╌ ╍ ╎ ╏&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Connectors&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;├ ┝ ┞ ┟ ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Others&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;☐ ☑ ☒ ⫍ ⫎ ⮹ ⮽ ⺆ ⼌ ⼐ ⼕&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Arrows&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt; ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↜ ↝ ↞ ↟ ↠ ↡ ↢ ↣ ↤ ↥ ↦ ↧ ↨ ↩ ↪ ↫ ↬ ↭ ↮ ↯ ↰ ↱ ↲ ↳ ↴ ↵ ↶ ↷ ↸ ↹ ↺ ↻ ⇄ ⇅ ⇆ ⇇ ⇈ ⇉ ⇊ ⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇕ ⇖ ⇗ ⇘ ⇙ ⇚ ⇛ ⇜ ⇝ ⇞ ⇟ ⇠ ⇡ ⇢ ⇣ ⇤ ⇥ ⇦ ⇧ ⇨ ⇩ ⇪&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Rounded Box&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;╭――――――――――――――――――╮
│                  │
│                  │
│                  │
╰――――――――――――――――――╯&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Resources&lt;/h1&gt;
&lt;p&gt;As I was putting this together I stumbled accross a good site to find ascii characters and copy them.
&lt;a href=&quot;!%5B%5D(/static/ascii-boxes.png)https://xahlee.info/comp/unicode_full-width_chars.html&quot;&gt;Unicode Full-Width Characters&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/drawing-ascii-boxes.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/drawing-ascii-boxes/.png</cover_image></item><item><title><![CDATA[creating the kedro-preflight hook]]></title><description><![CDATA[kedro hooks are an exciting upcoming feature of kedro .  They allow you to hook into ,, and (nouns). With a , or  (adjective).  This really…]]></description><link>https://waylonwalker.com/creating-the-kedro-preflight-hook/</link><guid isPermaLink="false">https://waylonwalker.com/creating-the-kedro-preflight-hook/</guid><pubDate>Sun, 10 May 2020 07:12:00 GMT</pubDate><content:encoded>&lt;p&gt;kedro hooks are an exciting upcoming feature of kedro &lt;code class=&quot;language-text&quot;&gt;0.16.0&lt;/code&gt;.  They allow you to hook into &lt;code class=&quot;language-text&quot;&gt;catalog_created&lt;/code&gt;,&lt;code class=&quot;language-text&quot;&gt;pipeline_run&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;node_run&lt;/code&gt;(nouns). With a &lt;code class=&quot;language-text&quot;&gt;before&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;after&lt;/code&gt; (adjective).  This really reminds me of reacts lifecycle hooks, that let you hook into various state of react web components.  This is going to make kedro so extendable by the community.  I am super pumped to see what the community is able to do with this ability.&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/what-is-kedro/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/27debd76b7282c6a93060e9eb66ba0b8/630fb/what-is-kedro-xmas2020.png&quot; alt=&quot;article cover for What is Kedro&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;What is Kedro&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Kedro is an open source data pipeline framework.  It provides guardrails to set your project up right from the start without needing to know deeply how to setup your own python library for data pipelining.  It includes really great ways to manipulate `catalogs` and `pipelines`.  This article will cover the 10K view of kedro, future articles will dive deper into each one.
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are completely unsure what kedro is be sure to check out my what is kedro post&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Docs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;a work in progress&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As this is a part of an upcoming release you will need to look in the &lt;code class=&quot;language-text&quot;&gt;latest&lt;/code&gt; docs, &lt;strong&gt;not&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;stable&lt;/code&gt; and you will find a &lt;a href=&quot;https://kedro.readthedocs.io/en/latest/04_user_guide/15_hooks.html?highlight=hooks&quot;&gt;15_hoooks&lt;/a&gt; page.  As these docs are still in development they are not very complete at this point and do require a bit more existing &lt;code class=&quot;language-text&quot;&gt;kedro&lt;/code&gt; knowledge to understand.  I am sure they will get much better as we approach the realease of hooks.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This doesn&apos;t mean that we can&apos;t still install the latest/unstable version and have some fun learning!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Straight from GitHub&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As this is part of an upcoming release you will need to get the library straight from github.  Since this is not a stable release of &lt;code class=&quot;language-text&quot;&gt;kedro&lt;/code&gt; I cannot express the importance of using a virtual environment enough.  Trying to install this version in the same place that you are trying to develop a pipeline potentially break your existing working development environment.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n kedro0160 -y
conda activate kedro0160 &lt;span class=&quot;token comment&quot;&gt;# may also be source activate kedro0160 or activate kedro0160&lt;/span&gt;
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; git+https://github.com/quantumblacklabs/kedro.git
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; colorama&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; the version is still somewhere between &lt;code class=&quot;language-text&quot;&gt;0.15.9&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;0,16.0&lt;/code&gt;.  &lt;code class=&quot;language-text&quot;&gt;kedro.__version__&lt;/code&gt; will still be &lt;code class=&quot;language-text&quot;&gt;0.15.9&lt;/code&gt; and wiill not roll until the official release.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Create a sample project&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h3&gt;Kedro new&lt;/h3&gt;
&lt;p&gt;For more details check out my full post on &lt;a href=&quot;https://waylonwalker.com/knew&quot;&gt;kedro new&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For this post I really just want a working pipeline as fast as possible.  For this I am going to use iris pipeline that is generated from the &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; command in the cli.  It&apos;s &lt;strong&gt;important&lt;/strong&gt; that you answer &lt;code class=&quot;language-text&quot;&gt;y&lt;/code&gt; to create an example pipeline.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;Hold On ✋&lt;/h3&gt;
&lt;p&gt;Did you create a separate environment for this?  Please do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you run the &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; command it will ask a series of questions.  👇 Here is how I answered them.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Project Name:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
Please enter a human readable name &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your new project.
Spaces and punctuation are allowed.
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;New Kedro Project&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Kedro Hooks
Repository Name:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;
Please enter a directory name &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your new project repository.
Alphanumeric characters, hyphens and underscores are allowed.
Lowercase is recommended.
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;kedro-hooks&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;:
Python Package Name:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;
Please enter a valid Python package name &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your project package.
Alphanumeric characters and underscores are allowed.
Lowercase is recommended. Package name must start with a letter or underscore.
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;kedro_hooks&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;:
Generate Example Pipeline:
&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;
Do you want to generate an example pipeline &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; your project?
Good &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; first-time users. &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;y/N&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: y
Change directory to the project generated &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /mnt/c/temp/kedro-hooks/
A best-practice setup includes initialising &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; and creating a virtual environment before running &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt; to &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; project-specific dependencies. Refer to the Kedro documentation: https://kedro.readthedocs.io/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Install the Project&lt;/h3&gt;
&lt;p&gt;Next install the project itself and all of its dependencies with the &lt;code class=&quot;language-text&quot;&gt;kedro install&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; kedro-hooks
kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;🏃‍♀️ Run the pipeline&lt;/h3&gt;
&lt;p&gt;Before we start developing any hooks lets make sure everything is setup correctly by running the pipeline with &lt;code class=&quot;language-text&quot;&gt;kedro run&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Let&apos;s make a hook&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;getting to the meat of the post&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now that we have a project scaffolded up and running we can develop a hook for it.  As far as I can tell hooks can be implemented one of &lt;strong&gt;two ways&lt;/strong&gt;.  As a &lt;strong&gt;function&lt;/strong&gt; inside of a module, then import that module and pass it into the hooks list, or implemented as a method on a &lt;strong&gt;class&lt;/strong&gt;, then the class is passed into the hooks list.  Either method must follow the naming convention with the &lt;code class=&quot;language-text&quot;&gt;@hook_impl&lt;/code&gt; decorator.  Each module/class can implement more than one hook, but not more than one of the same type. One of each kind will be created below.&lt;/p&gt;
&lt;h3&gt;Full list of hooks available&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;before_catalog_created&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;after_catalog_created&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;before_pipeline_run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;after_pipeline_run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;before_node_run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;after_node_run&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;debug_hook (class)&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;quick and dirty&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I highly recommend this as your first hook.  It&apos;s super easy to make and lets you explore the arguments passed into the hook.  For this one I am going to pop the following class right into &lt;code class=&quot;language-text&quot;&gt;kedro-hooks/src/kedro-hooks/run.py&lt;/code&gt;, remember that I chose &lt;code class=&quot;language-text&quot;&gt;kedro-hooks&lt;/code&gt; as my project name.  Your path might be slightly different.  If you wanted to make a real hook it might make sense to put it in its own module, but for simplicity of your first hook you can put it directly in the same module that it gets implemented.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;debug_hook&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;before_pipeline_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;pops into a debugger before pipeline run&quot;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;I hooked in right before the pipeline run&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        breakpoint&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is really that easy to create a kedro hook!  Now lets apply it to our project.  All we need to do is add one line (&lt;code class=&quot;language-text&quot;&gt;hooks = [debug_hook]&lt;/code&gt;) to the existing &lt;code class=&quot;language-text&quot;&gt;ProjectContext&lt;/code&gt; class within &lt;code class=&quot;language-text&quot;&gt;kedro-hooks/src/kedro-hooks/run.py&lt;/code&gt;.  Once we do that our &lt;code class=&quot;language-text&quot;&gt;ProjectContext&lt;/code&gt; will look like this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;KedroContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Users can override the remaining methods from the parent class here,
    or create new ones (e.g. as required by plugins)
    &quot;&quot;&quot;&lt;/span&gt;

    project_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro-hooks&quot;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# `project_version` is the version of kedro used to generate the project&lt;/span&gt;
    project_version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.15.9&quot;&lt;/span&gt;
    package_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;kedro-hooks&quot;&lt;/span&gt;

    hooks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; debug_hook &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# 👈 This is where you implement the hook&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_get_pipelines&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; create_pipelines&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run it!  While you are in the debugger, explore what the &lt;code class=&quot;language-text&quot;&gt;run_params&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;pipeine&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;catalog&lt;/code&gt; arguments give you.  This will give you some insight to what to expect when creating your next hook.&lt;/p&gt;
&lt;h2&gt;preflight hook (module)&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;giving it a bit more flair&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Create a new file &lt;code class=&quot;language-text&quot;&gt;kedro-hooks/src/kedro-hooks/preflight.py&lt;/code&gt; and place the following content into the file.  This will raise a &lt;code class=&quot;language-text&quot;&gt;DataSetNotFoundError&lt;/code&gt; before wasting time running any of the pipeline.  This could be useful to save some developer time for long running pipelines by warning them that they don&apos;t have all of the raw data they need before running.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# kedro-hooks/src/kedro-hooks/preflight.py&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hooks &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; hook_impl
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;core &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; DataSetNotFoundError
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; colorama &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Fore
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; textwrap


&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_impl&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;before_pipeline_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    missing_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;_exists&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;missing_input&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;raise&lt;/span&gt; DataSetNotFoundError&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;textwrap&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dedent&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;&apos;&apos;

    &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Fore&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;LIGHTBLACK_EX&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;――――――――  &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Fore&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RED&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;PREFLIGHT ERROR &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Fore&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;LIGHTBLACK_EX&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;―――――――――
    &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Fore&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RESET&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; preflight of pipeline failed due to &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Fore&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;YELLOW&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;missing datasets
    &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Fore&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;BLUE&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;missing_input&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Fore&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RESET&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
    &apos;&apos;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once we are happy with this hook, it can live anywhere.  It can be a module inside our project.  It can be a separate libarary that gets handed out as a back ally wheel, or we can even publish it as its own package to pypi so that anyone can easily pip install it.&lt;/p&gt;
&lt;h3&gt;One Step Back&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;a bit of explanation of preflight&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you are not familiar, &lt;code class=&quot;language-text&quot;&gt;pipeline.inputs()&lt;/code&gt; gives us all of the edge inputs into the pipeline.  kedro does also have a &lt;code class=&quot;language-text&quot;&gt;pipeline.all_inputs()&lt;/code&gt; that tells us all of the edge and internal pipeline inputs that will be called throughout the pipeline run.  For this hook we are just concerned with the edge inputs as internal inputs will be generated during the run.&lt;/p&gt;
&lt;p&gt;Also each one of the kedro datasets have an &lt;code class=&quot;language-text&quot;&gt;_exists()&lt;/code&gt; method attached to them to check if the dataset exists or not.  For a more robust implementation of &lt;code class=&quot;language-text&quot;&gt;preflight&lt;/code&gt; it would probably be best to ignore &lt;code class=&quot;language-text&quot;&gt;AttributeError&lt;/code&gt;s, i.e the dataset type does not have an implementation of &lt;code class=&quot;language-text&quot;&gt;_exists&lt;/code&gt;.  It would probably also be a good idea to filter for types such as &lt;code class=&quot;language-text&quot;&gt;SQLQueryDataSet&lt;/code&gt;s that assume &lt;code class=&quot;language-text&quot;&gt;_exists&lt;/code&gt; is False by default.&lt;/p&gt;
&lt;h2&gt;Ideas&lt;/h2&gt;
&lt;p&gt;Now that the juices are flowing what ideas do you have for &lt;code class=&quot;language-text&quot;&gt;kedro&lt;/code&gt; hooks?&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/creating-the-kedro-preflight-hook.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/creating-the-kedro-preflight-hook/.png</cover_image></item><item><title><![CDATA[Kedro Preflight]]></title><description><![CDATA[This is a very rough idea for a kedro package to prevent time lost to get partway through a pipeline run only to realize that you dont have…]]></description><link>https://waylonwalker.com/kedro-preflight/</link><guid isPermaLink="false">https://waylonwalker.com/kedro-preflight/</guid><pubDate>Sat, 09 May 2020 15:01:00 GMT</pubDate><content:encoded>&lt;p&gt;This is a very rough idea for a kedro package to prevent time lost to get partway through a pipeline run only to realize that you dont have access to data or resources.&lt;/p&gt;
&lt;h1&gt;Must Haves&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;check that inputs exist or are of a type to skip (sql)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Good to haves&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;check that all input and output databases are accessible with good credentials&lt;/li&gt;
&lt;li&gt;check for s3 bucket access&lt;/li&gt;
&lt;li&gt;check for spark install&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Implementation&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@hook_spec&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;before_pipeline_run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;run_params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;run params&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;run_id&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; str
  &lt;span class=&quot;token property&quot;&gt;&quot;project_path&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; str&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;env&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; str&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;kedro_version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; str&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Optional&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;from_nodes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Optional&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;to_nodes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Optional&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;node_names&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Optional&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;from_inputs&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Optional&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;load_versions&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Optional&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;pipeline_name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; str&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;extra_params&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Optional&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Any&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro-preflight.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro-preflight/.png</cover_image></item><item><title><![CDATA[Maintianing multiple git remotes]]></title><link>https://waylonwalker.com/maintianing-multiple-git-remotes/</link><guid isPermaLink="false">https://waylonwalker.com/maintianing-multiple-git-remotes/</guid><pubDate>Thu, 07 May 2020 11:56:00 GMT</pubDate><content:encoded>&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; remote -v
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; remote &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; gitlab &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;url&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push gitlab main&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/maintianing-multiple-git-remotes.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/maintianing-multiple-git-remotes/.png</cover_image></item><item><title><![CDATA[📢 Announcing find-kedro]]></title><description><![CDATA[is a small library to enhance your kedro experience.  It looks through your modules to find kedro pipelines, nodes, and iterables (lists…]]></description><link>https://waylonwalker.com/find-kedro-release/</link><guid isPermaLink="false">https://waylonwalker.com/find-kedro-release/</guid><pubDate>Mon, 04 May 2020 11:53:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;find-kedro&lt;/code&gt; is a small library to enhance your kedro experience.  It looks through your modules to find kedro pipelines, nodes, and iterables (lists, sets, tuples) of nodes.  It then assembles them into a dictionary of pipelines, each module will create a separate pipeline, and &lt;code class=&quot;language-text&quot;&gt;__default__&lt;/code&gt; being a combination of all pipelines.  This format is compatible with the kedro &lt;code class=&quot;language-text&quot;&gt;_create_pipelines&lt;/code&gt; format.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/WaylonWalker/find-kedro/workflows/Python%20package/badge.svg&quot; alt=&quot;Python package&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/WaylonWalker/find-kedro/workflows/Test/badge.svg&quot; alt=&quot;Test&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://find-kedro.waylonwalker.com&quot;&gt;&lt;img src=&quot;https://github.com/WaylonWalker/find-kedro/workflows/Build-Docs/badge.svg?branch=master&quot; alt=&quot;Build-Docs&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-1.png&quot; alt=&quot;Motivation&quot;&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;kedro&lt;/code&gt; is a ✨ fantastic project that allows for super-fast prototyping of data pipelines, while yielding production-ready pipelines. &lt;code class=&quot;language-text&quot;&gt;find-kedro&lt;/code&gt; enhances this experience by adding a pytest like node/pipeline discovery eliminating the need to bubble up pipelines through modules.&lt;/p&gt;
&lt;p&gt;When working on larger pipeline projects, it is advisable to break your project down into different sub-modules which requires knowledge of building python libraries, and knowing how to import each module correctly.  While this is not too difficult, in some cases, it can trip up even the most senior engineers, losing precious feature development time to debugging a library.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-2.png&quot; alt=&quot;Installation&quot;&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;find-kedro&lt;/code&gt; is deployed to pypi and can easily be &lt;code class=&quot;language-text&quot;&gt;pip&lt;/code&gt; installed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; find-kedro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-3.png&quot; alt=&quot;Python Usage&quot;&gt;&lt;/h2&gt;
&lt;p&gt;The recommended usage of &lt;code class=&quot;language-text&quot;&gt;find-kedro&lt;/code&gt; is to implement it directly into your projects &lt;code class=&quot;language-text&quot;&gt;run.py&lt;/code&gt; module&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; KedroContext
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; find_kedro &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; find_kedro

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProjectContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;KedroContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_get_pipelines&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; find_kedro&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Creating nodes&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;find-kedro&lt;/code&gt; will not execute any functions.  It will simply look for variables that match the &lt;code class=&quot;language-text&quot;&gt;pattern&lt;/code&gt; and identify if they are a &lt;code class=&quot;language-text&quot;&gt;kedro.pipeline.Pipeline&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;kedro.pipeline.nodes.Node&lt;/code&gt;, or a list of &lt;code class=&quot;language-text&quot;&gt;kedro.pipeline.nodes.  Node&lt;/code&gt;&apos;s.  If so, it will collect them into the dictionary of pipelines.&lt;/p&gt;
&lt;p&gt;There are typically &lt;strong&gt;three&lt;/strong&gt; ways that pipelines are constructed with &lt;code class=&quot;language-text&quot;&gt;find-kedro&lt;/code&gt;; &lt;strong&gt;lists&lt;/strong&gt;, &lt;strong&gt;single-nodes&lt;/strong&gt;, and &lt;strong&gt;pipelines&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Lists&lt;/h4&gt;
&lt;p&gt;Any pattern matched list will be flattened and collected into the pipeline.  Nodes can be created all at once in the list definition.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# my-proj/pipelinies/data_engineering/pipeline&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodes &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; split_data

pipeline &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        split_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_iris_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;params:example_test_data_ratio&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            train_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            train_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also convenient many times to keep the node definition close to the function definition.  Many times I define the list at the top of the file, then append to it as I go.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# my-proj/pipelinies/data_engineering/pipeline&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodes &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; split_data

nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        split_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_iris_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;params:example_test_data_ratio&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            train_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            train_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Nodes&lt;/h4&gt;
&lt;p&gt;All pattern matched &lt;code class=&quot;language-text&quot;&gt;kedro.pipeline.node.Node&lt;/code&gt; objects will get collected into the pipeline.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# my-proj/pipelinies/data_engineering/pipeline&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodes &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; split_data

split_node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        split_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_iris_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;params:example_test_data_ratio&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            train_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            train_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            test_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Pipeline&lt;/h4&gt;
&lt;p&gt;All pattern matched &lt;code class=&quot;language-text&quot;&gt;kedro.pipeline.Pipeline&lt;/code&gt; objects will get collected into the pipeline.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# my-project/pipelinies/data_engineering/pipeline&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Pipeline
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodes &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; split_data

split_node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            split_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_iris_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;params:example_test_data_ratio&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                train_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                train_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_train_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                test_x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                test_y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;example_test_y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Fully Qualified imports&lt;/h3&gt;
&lt;p&gt;When using fully qualified imports &lt;code class=&quot;language-text&quot;&gt;from my_proj.pipelines.data_science.nodes import split_data&lt;/code&gt; instead of
relative imports &lt;code class=&quot;language-text&quot;&gt;from .nodes split_data&lt;/code&gt; you will need to make sure that your project is installed, in your current path, or you set the directory&lt;/p&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-4.png&quot; alt=&quot;CLI Usage&quot;&gt;&lt;/h3&gt;
&lt;p&gt;The CLI provides a handy interface to search your project for nodes&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Usage: find-kedro [OPTIONS]

Options:
  --file-patterns TEXT       glob-style file patterns for Python node module
                             discovery

  --patterns TEXT            prefixes or glob names for Python pipeline, node,
                             or list object discovery

  -d, --directory DIRECTORY  Path to save the static site to
  --version                  Prints version and exits
  -v, --verbose              Prints extra information for debugging
  --help                     Show this message and exit.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example ran with a slightly modified default &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; project.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ find-kedro
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;__default__&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;split_data([example_iris_data,params:example_test_data_ratio]) -&gt; [example_test_x,example_test_y,example_train_x,example_train_y]&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;train_model([example_train_x,example_train_y,parameters]) -&gt; [example_model]&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;predict([example_model,example_test_x]) -&gt; [example_predictions]&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;report_accuracy([example_predictions,example_test_y]) -&gt; None&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;,
  &lt;span class=&quot;token string&quot;&gt;&quot;src.default_kedro_159.pipelines.data_engineering.pipeline&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;split_data([example_iris_data,params:example_test_data_ratio]) -&gt; [example_test_x,example_test_y,example_train_x,example_train_y]&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;,
  &lt;span class=&quot;token string&quot;&gt;&quot;src.default_kedro_159.pipelines.data_science.pipeline&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;train_model([example_train_x,example_train_y,parameters]) -&gt; [example_model]&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;predict([example_model,example_test_x]) -&gt; [example_predictions]&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;report_accuracy([example_predictions,example_test_y]) -&gt; None&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-5.png&quot; alt=&quot;Contributing&quot;&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;You&apos;re Awesome&lt;/strong&gt; for considering a contribution!  Contributions are welcome, please check out the &lt;a href=&quot;https://github.com/WaylonWalker/find-kedro/blob/master/contributing.md&quot;&gt;Contributing Guide&lt;/a&gt; for more information.  Please be a positive member of the community and embrace feedback&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-6.png&quot; alt=&quot;Versioning&quot;&gt;&lt;/h2&gt;
&lt;p&gt;We use &lt;a href=&quot;https://semver.org/&quot;&gt;SemVer&lt;/a&gt; for versioning. For the versions available, see the &lt;a href=&quot;https://github.com/WaylonWalker/find-kedro/releases&quot;&gt;tags on this repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-7.png&quot; alt=&quot;Authors&quot;&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WaylonWalker&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/22648375?s=120&amp;#x26;v=4&quot; alt=&quot;Waylon Walker&quot;&gt;&lt;/a&gt; - Waylon Walker - &lt;em&gt;Original Author&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mzjp2&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/30357972?s=120&amp;#x26;v=4&quot; alt=&quot;Zain Patel&quot;&gt;&lt;/a&gt; - Zain Patel&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/find-kedro-release-8.png&quot; alt=&quot;License&quot;&gt;&lt;/h2&gt;
&lt;p&gt;This project is licensed under the MIT License - see the LICENSE.md file for details&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/find-kedro-release.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/find-kedro-release/.png</cover_image></item><item><title><![CDATA[Explicit vs Implicit Returns in Javascript]]></title><description><![CDATA[Often when reading through javascript examples you will find some arrow functions use parentheses  while others use braces .  This key…]]></description><link>https://waylonwalker.com/explicit-vs-implicit-returns-in-javascript/</link><guid isPermaLink="false">https://waylonwalker.com/explicit-vs-implicit-returns-in-javascript/</guid><pubDate>Sun, 03 May 2020 11:55:00 GMT</pubDate><content:encoded>&lt;p&gt;Often when reading through javascript examples you will find some arrow functions use parentheses &lt;code class=&quot;language-text&quot;&gt;()&lt;/code&gt; while others use braces &lt;code class=&quot;language-text&quot;&gt;{}&lt;/code&gt;.  This key difference is that parentheses will implicitly return the last statement while braces require an explicit return statement.  It is important to understand the difference between them because it is likely that you will find code examples of both and trying to edit code written differently than you&apos;re used to may have unintended consequences.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/explicit-vs-implicit-returns-in-javascript-1.png&quot; alt=&quot;Arrow functions&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Arrow functions are one-liner functions in javascript that have two main syntactical ways to create the code block.  with parentheses and braces.  Let&apos;s take a look at both ways of creating arrow functions so that when we come accross them in the wild it will all make sense.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/explicit-vs-implicit-returns-in-javascript-2.png&quot; alt=&quot;implicit returns&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Here is an example of an arrow function that will implicitly return the last
statement without the return keyword.  I believe that these are a bit more restricted
in that you cannot set variables inside them.  They are a little bit more concise
and great for &lt;strong&gt;one-liners.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;thing&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;hi&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that the parentheses are not required for this example and not having
parentheses or braces are implicitly returned as well.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// same as above&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; thing
&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;hi&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/explicit-vs-implicit-returns-in-javascript-3.png&quot; alt=&quot;explicit returns&quot;&gt;&lt;/h2&gt;
&lt;p&gt;In the following example, the curly braces create an arrow function that must
explicitly return anything that you want to return from the function. Since the
return keyword is never used the function returns &lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt; by default.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// missing return statement&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;explicit&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;thing&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;explicit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;hi&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example using the return keyword will cause the function to return &lt;code class=&quot;language-text&quot;&gt;thing&lt;/code&gt;
and behave similarly to our implicit return.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// same as original&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;explicit_return&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; thing&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;explicit_return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;hi&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/explicit-vs-implicit-returns-in-javascript-4.png&quot; alt=&quot;Multiline arrow functions&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Until writing this article I was unaware that you could not have a multiline arrow function with an implicit return statement.  I tried myself and ran into some issues. I also tried to find examples online and could not find one.  If it is possible to write something like below, let me know.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// more complex example&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// only possible with an explicit return&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;sayHello&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;who&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; greeting &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Hello &apos;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; message &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; greeting &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; who
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; message
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;Waylon&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&quot;Hello Waylon&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/explicit-vs-implicit-returns-in-javascript.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/explicit-vs-implicit-returns-in-javascript/.png</cover_image></item><item><title><![CDATA[Twitter deepdives]]></title><description><![CDATA[Inspired by Chris Achard My ideas Python List comps Classes Inheritance Background Click Lambdas Kedro Cataloging Custom datasets Reusable…]]></description><link>https://waylonwalker.com/twitter-deepdives/</link><guid isPermaLink="false">https://waylonwalker.com/twitter-deepdives/</guid><pubDate>Fri, 01 May 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Inspired by Chris Achard&lt;/p&gt;
&lt;h2&gt;My ideas&lt;/h2&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List comps&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;Inheritance&lt;/li&gt;
&lt;li&gt;Background&lt;/li&gt;
&lt;li&gt;Click&lt;/li&gt;
&lt;li&gt;Lambdas&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Kedro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Cataloging&lt;/li&gt;
&lt;li&gt;Custom datasets&lt;/li&gt;
&lt;li&gt;Reusable pipelines&lt;/li&gt;
&lt;li&gt;find-kedro&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Learn kedro in 5 days&lt;/h3&gt;
&lt;p&gt;Email course inspired by learn d3 in 5 days&lt;/p&gt;
&lt;h3&gt;Mail&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Share your knowledge&lt;/li&gt;
&lt;li&gt;Practice&lt;/li&gt;
&lt;li&gt;Practice in public&lt;/li&gt;
&lt;li&gt;Make practice easy&lt;/li&gt;
&lt;li&gt;Share your notes&lt;/li&gt;
&lt;li&gt;Digital Gardening&lt;/li&gt;
&lt;li&gt;Own your content&lt;/li&gt;
&lt;li&gt;Build your audience&lt;/li&gt;
&lt;li&gt;Be nice&lt;/li&gt;
&lt;li&gt;Have empathy&lt;/li&gt;
&lt;li&gt;Learn your way&lt;/li&gt;
&lt;li&gt;Continuous learning&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/twitter-deepdives.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/twitter-deepdives/.png</cover_image></item><item><title><![CDATA[TIL: Bind arguments to dynamically generated lambdas in python]]></title><description><![CDATA[This past week I had a really weird bug in my kedro pipeline.  For some reason data running through my pipeline was coming out completely…]]></description><link>https://waylonwalker.com/bind-dynamic-lambdas/</link><guid isPermaLink="false">https://waylonwalker.com/bind-dynamic-lambdas/</guid><pubDate>Mon, 27 Apr 2020 12:13:00 GMT</pubDate><content:encoded>&lt;p&gt;This past week I had a really weird bug in my &lt;a href=&quot;https://kedro.readthedocs.io/&quot;&gt;kedro&lt;/a&gt; pipeline.  For some reason data running through my pipeline was coming out completely made no sense, but if I manually request raw data outside of the pipeline it matched expectations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; While this story is about a kedro pipeline, it can be applied anywhere closures are put into an iterable.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/bind-dynamic-lambdas-1.png&quot; alt=&quot;Debugger to the rescue&quot;&gt;&lt;/h2&gt;
&lt;p&gt;After a few days of looking at it off and on, I pinpointed that it was all the way down in the raw layer. Right as data is coming off of the database.  For this I already had existing &lt;code class=&quot;language-text&quot;&gt;sql&lt;/code&gt; files stored and a &lt;code class=&quot;language-text&quot;&gt;read_sql&lt;/code&gt; function to get the data so I opted to just set up the pipeline to utilize the existing code as much as possible, leaning on the &lt;a href=&quot;https://kedro.readthedocs.io/&quot;&gt;kedro&lt;/a&gt; framework a bit less.&lt;/p&gt;
&lt;p&gt;I have dynamically created lists of pipeline nodes many times in the past, but typically I take data from &lt;a href=&quot;https://kedro.readthedocs.io/&quot;&gt;kedro&lt;/a&gt; input and use it in the lambda.  I prefer the simplicity of using lambdas over &lt;code class=&quot;language-text&quot;&gt;functools.partial&lt;/code&gt;.  It typically looks something like this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 👍  I do this all the time&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; my_generic_project_lib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; clean

datasets_to_clean &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;production&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;inventory&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; dataset &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; datasets_to_clean&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
         func&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; clean&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
         inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;raw_&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
         outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;int_&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
         tags&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataset&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
         name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;create_int_&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What was different this time is that I needed to pass in the name of the dataset to my read_sql function, not the data loaded in the framework.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ❌ This does not work&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; my_generic_project_lib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; read_sql

datasets_to_read &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;production&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;inventory&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; dataset &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; datasets_to_clean&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
         func&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; read_sql&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# 💥 The major issue&lt;/span&gt;
         inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;dummy&apos;&lt;/span&gt;&lt;/span&gt;
         outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;int_&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
         tags&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataset&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
         name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;create_int_&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/bind-dynamic-lambdas-2.png&quot; alt=&quot;Seriously&quot;&gt;&lt;/h2&gt;
&lt;p&gt;As I am still oblivious to what has happened I pop in a &lt;code class=&quot;language-text&quot;&gt;breakpoint()&lt;/code&gt; and quickly see that during the first run the dataset passed into &lt;code class=&quot;language-text&quot;&gt;read_sql&lt;/code&gt; was &lt;code class=&quot;language-text&quot;&gt;&amp;#39;inventory&amp;#39;&lt;/code&gt;, in fact, every single one was &lt;code class=&quot;language-text&quot;&gt;&amp;#39;inventory&amp;#39;&lt;/code&gt;.  The lambda is just using the latest value of dataset from outside and has no &lt;code class=&quot;language-text&quot;&gt;local&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;dataset&lt;/code&gt; attached to it.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/bind-dynamic-lambdas-3.png&quot; alt=&quot;The simple fix &quot;&gt;&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 👍 Much Better&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; my_generic_project_lib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; read_sql

datasets_to_read &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sales&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;production&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;inventory&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; dataset &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; datasets_to_clean&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
         func&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; dataset&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; read_sql&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# dataset is now bound to the lambda ✨&lt;/span&gt;
         inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;dummy&apos;&lt;/span&gt;&lt;/span&gt;
         outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;int_&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
         tags&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;int&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataset&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
         name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;create_int_&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/bind-dynamic-lambdas-4.png&quot; alt=&quot;Try it yourself&quot;&gt;&lt;/h2&gt;
&lt;p&gt;I made a slightly more simple example so that you can try it and play with it yourself, edit it, share it with your friends, laugh at my mistake, whatever you like.&lt;/p&gt;
&lt;iframe height=&quot;400px&quot; width=&quot;100%&quot; src=&quot;https://repl.it/@WaylonWalker/BindDynamicLambdas?lite=true&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; sandbox=&quot;allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals&quot;&gt;&lt;/iframe&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/bind-dynamic-lambdas.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/bind-dynamic-lambdas/.png</cover_image></item><item><title><![CDATA[python-deepwatch]]></title><description><![CDATA[Is it possible to deep watch a single python function for changes? Shallow Watch keeping track of a python functions hash is quite simple…]]></description><link>https://waylonwalker.com/python-deepwatch/</link><guid isPermaLink="false">https://waylonwalker.com/python-deepwatch/</guid><pubDate>Mon, 27 Apr 2020 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Is it possible to deep watch a single python function for changes?&lt;/p&gt;
&lt;h2&gt;Shallow Watch&lt;/h2&gt;
&lt;p&gt;keeping track of a python functions hash is quite simple.  There is a&lt;code class=&quot;language-text&quot;&gt;__hash__&lt;/code&gt; method attached to every python function.  Calling it will return a hash of the function. If the function changes the hash will change.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__hash__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8760526380347&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__hash__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8760526380347&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__hash__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8760525617988&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__hash__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8760526380491&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using hashlib provides a consistent hash.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; inspect
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; hashlib
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getsource&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;sha256 HASH &lt;span class=&quot;token builtin&quot;&gt;object&lt;/span&gt; @ &lt;span class=&quot;token number&quot;&gt;0x7f7b7b70fde0&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hexdigest&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;1f2ff4c69eb69b545469686edd6f849136e104cd535785891586d90620328757&apos;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getsource&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hexdigest&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;93638f2c944f34a9069af9242657b7de556fcc63742f4c27c4c8deedeb976a5f&apos;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hashlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sha256&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getsource&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getsource&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hashlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sha256&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getsource&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hexdigest&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;1f2ff4c69eb69b545469686edd6f849136e104cd535785891586d90620328757&apos;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hashlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sha256&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getsource&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hexdigest&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;121fa3a3f295d49d4609505bc5e96d8b6a8ed3b496e4f3dc6c0ead73bef4e3c7&apos;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hashlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sha256&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getsource&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;ins&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; In &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hexdigest&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Out&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;1f2ff4c69eb69b545469686edd6f849136e104cd535785891586d90620328757&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we have a consistent way to hash function code.&lt;/p&gt;
&lt;h2&gt;Deep hashing&lt;/h2&gt;
&lt;h3&gt;Find dependencies&lt;/h3&gt;
&lt;p&gt;setup a function in a module with a dependency&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;       │ File&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; one&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;py
───────┼────────────────────────────────
   &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;   │ &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;   │     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
   &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;   │
   &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;   │ &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;   │     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; one&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; one&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; one
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; one&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;one&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__code__&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;co_names
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; one&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;two&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__code__&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;co_names
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;one&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create Generic module importer by filepath&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; importlib
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; importlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; os

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_import&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; directory&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;dynamically imports module given a path&quot;&quot;&quot;&lt;/span&gt;
    cwd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getcwd&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;chdir&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;directory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name
    &lt;span class=&quot;token comment&quot;&gt;# path = str(path).replace(str(directory) + &quot;/&quot;, &quot;&quot;)&lt;/span&gt;
    path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; _make_path_relative&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; directory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        spec &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; importlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;spec_from_file_location&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        module &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; importlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;module_from_spec&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;spec&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        spec&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;loader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exec_module&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;module&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ModuleNotFoundError&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ValueError&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        module &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; _use_importmodule&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sep&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.py&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;verbose
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;chdir&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cwd&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; module


&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_use_importmodule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
    relative imports do not work well with importlib.util.spec_from_file_location,
    and require a sys.path.append to be imported correctly.  For this reason
    importlib.import_module is the second option.
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Not sure if this is needed, but it was never hit in a test&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# if path[0] == &quot;.&quot;:&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;#     path = path[1:]&lt;/span&gt;

    sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getcwd&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    mod &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; importlib&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;import_module&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pop&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# clean up path, do not permananatly change users path&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; mod&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;get code of dependency&lt;/h3&gt;
&lt;p&gt;the inspect module can tell us the filename of our current module.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; inspect
module_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inspect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getfile&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;one&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;one&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
module &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; _import&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;module_path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;now we can hash the dependency&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;nested_function &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;f&apos;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;one&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;two&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__code__&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;co_names&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/python-deepwatch.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/python-deepwatch/.png</cover_image></item><item><title><![CDATA[Four Github Actions for Python]]></title><description><![CDATA[If you are developing python packages and using GitHub here are four actions that you can use today to automate your release workflow…]]></description><link>https://waylonwalker.com/four-github-actions-python/</link><guid isPermaLink="false">https://waylonwalker.com/four-github-actions-python/</guid><pubDate>Mon, 13 Apr 2020 06:23:00 GMT</pubDate><content:encoded>&lt;style&gt;
h2 img { width: 100%; box-shadow: .5rem .5rem 3rem #141F2D, -.5rem -.5rem 3rem rgba(255,255,255,.1);}
img{ max-width: 100% !important;}
&lt;/style&gt;
&lt;p&gt;If you are developing python packages and using GitHub here are four actions that you can use today to automate your release workflow.  Since python tools generally have such a simple cli I have opted to use the cli for most of these, that way I know exactly what is happening and have more control over it if I need.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lint&lt;/li&gt;
&lt;li&gt;Test&lt;/li&gt;
&lt;li&gt;Package&lt;/li&gt;
&lt;li&gt;Upload to PyPi&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-python-headers/1.png&quot; alt=&quot;Lint With flake8&quot;&gt;&lt;/h2&gt;
&lt;p&gt;flake8 is pythons quintessential linting tool to ensure that your code is up to the standards that you have set for the project, and to help prevent hidden bugs.  I am a heavy user of &lt;code class=&quot;language-text&quot;&gt;black&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;isort&lt;/code&gt; as well, but for ci flake8 is typically considered the gold standard. &lt;code class=&quot;language-text&quot;&gt;black&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;isort&lt;/code&gt; will help you automate many fixes suggested by flake8.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Lint with flake8
      &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
        pip install flake8 isort black
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-python-headers/2.png&quot; alt=&quot;Testing with pytest&quot;&gt;&lt;/h2&gt;
&lt;p&gt;pytest is such an amazing project, definitely one to check out and start using if you are not already doing so.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Test with pytest
      &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
         pip install pytest
         pytest&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-python-headers/3.png&quot; alt=&quot;Building with setuptools&quot;&gt;&lt;/h2&gt;
&lt;p&gt;I am still using the older, less hipster, setuptools to build my projects.  Primarily because I am used to to, partly because things such as editable installs are not possible with the newer build tools, and I am a &lt;strong&gt;HEAVY&lt;/strong&gt; user of editable installs.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    - name: build
      run: |
        pip install wheel
        python setup.py sdist bdist_wheel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-python-headers/4.png&quot; alt=&quot;Publishing to pypi&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Here I am going to use an amazing action from the GitHub marketplace by @webKnjaZ.  It is super simple.  First you need to log into your &lt;a href=&quot;https://pypi.org&quot;&gt;pypi.org&lt;/a&gt; account, go to account settings, enable 2FA, and add a Token, then paste that toke into a secret inside your repos settings.  Next just drop the name of that secret into the password field of the action and you are off.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;: I did put a check in to make sure that push event comes from main.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pypi&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;publish
      &lt;span class=&quot;token key atrule&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; github.ref == &apos;refs/heads/main&apos;
      &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pypa/gh&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;action&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;pypi&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;publish@v1.1.0
      &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# PyPI user&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# Password for your PyPI user or an access token&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.pypi_password &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# The repository URL to use&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# repository_url: # optional&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# The target directory for distribution&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# packages_dir: # optional, default is dist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;That&apos;s my four top python actions&lt;/h2&gt;
&lt;p&gt;These are the easiest and most basic four actions that every python project on GitHub should have.  Now that actions are available for free on any public repo there is no reason not to use GitHub Actions for any new project.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/four-github-actions-python.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/four-github-actions-python/.png</cover_image></item><item><title><![CDATA[Variables names don't need their type]]></title><description><![CDATA[So often I see a variables  inside of its name and it hurts me a little inside.  Tell me I'm right or prove me wrong below. Examples Pandas…]]></description><link>https://waylonwalker.com/variable-names-don-t-need-their-type/</link><guid isPermaLink="false">https://waylonwalker.com/variable-names-don-t-need-their-type/</guid><pubDate>Wed, 08 Apr 2020 11:03:00 GMT</pubDate><content:encoded>&lt;p&gt;So often I see a variables &lt;code class=&quot;language-text&quot;&gt;type()&lt;/code&gt; inside of its name and it hurts me a little inside.  Tell me I&apos;m right or prove me wrong below.&lt;/p&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;p&gt;Pandas &lt;code class=&quot;language-text&quot;&gt;DataFrames&lt;/code&gt; are probably the worst offender that I see&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# bad&lt;/span&gt;
sales_df &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_sales&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# good&lt;/span&gt;
sales &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_sales&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes vanilla structures too!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# bad&lt;/span&gt;
items_list &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sneakers&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pencils&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;paper&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# good&lt;/span&gt;
items &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sneakers&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pencils&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;paper&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Edge Cases?&lt;/h2&gt;
&lt;p&gt;It&apos;s so common when you need to get inside a data structure in a special way that itsn&apos;t provided by the library.... I am not exactly sure of a good way around it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# bad ??&lt;/span&gt;
sales &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_sales&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
sales_dict &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_dict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# good&lt;/span&gt;
🤷‍♀️&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Containers are plural&lt;/h2&gt;
&lt;p&gt;Always name your containers plural, so that naming while iterating is simple.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;prices &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
items &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sneakers&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pencils&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;paper&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; items&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   prices&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_price&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before I start fights 🥊 in code review, am I inline here or just being pedantic?&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/variable-names-don-t-need-their-type.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/variable-names-don-t-need-their-type/.png</cover_image></item><item><title><![CDATA[Send Emails with GitHub Actions]]></title><description><![CDATA[Here is one useful thing that you can do with GitHub actions no matter what language you use, send email.  You might want to know right away…]]></description><link>https://waylonwalker.com/send-email-with-github-actions/</link><guid isPermaLink="false">https://waylonwalker.com/send-email-with-github-actions/</guid><pubDate>Tue, 31 Mar 2020 03:39:00 GMT</pubDate><content:encoded>&lt;p&gt;Here is one useful thing that you can do with GitHub actions no matter what language you use, send email.  You might want to know right away when your ci passes.  You might want to give your team a nice pat on the back when a new release is deployed.  There might be subscribers wanting to see the latest release notes in their inbox as soon as the latest version is deployed.  Whatever it is, its pretty easy to do with an action right out of the actions marketplace.&lt;/p&gt;
&lt;h2&gt;Mail on Star&lt;/h2&gt;
&lt;p&gt;Here is a silly example that sends an email to yourself anytime someone stars your repo.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Mail on Star

&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; started &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# A workflow run is made up of one or more jobs that can run sequentially or in parallel&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;# This workflow contains a single job called &quot;email&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# The type of runner that the job will run on&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest

    &lt;span class=&quot;token comment&quot;&gt;# Steps represent a sequence of tasks that will be executed as part of the job&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ✨ Send email&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; you star
        &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; dawidd6/action&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;send&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;mail@v1.3.0
        &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;server_address&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; smtp.gmail.com
          &lt;span class=&quot;token key atrule&quot;&gt;server_port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;465&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; quadmx08
          &lt;span class=&quot;token key atrule&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.GMAIL_PASS &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Your a star ✨
          &lt;span class=&quot;token key atrule&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; github.actor &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; just starred your mail&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;on&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;star repo&lt;span class=&quot;token tag&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;!&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; github.repository &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.GMAIL_ADDRESS &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.GMAIL_ADDRESS &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/send-email-with-github-actions.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/send-email-with-github-actions/.png</cover_image></item><item><title><![CDATA[GitHub Actions Syntax]]></title><description><![CDATA[Github actions are written in configuration files using the YAML syntax.  YAML is a superset of JSON.  Most YAML can be expressed inline…]]></description><link>https://waylonwalker.com/github-actions-syntax/</link><guid isPermaLink="false">https://waylonwalker.com/github-actions-syntax/</guid><pubDate>Mon, 16 Mar 2020 05:00:00 GMT</pubDate><content:encoded>&lt;style&gt;
h2 img { width: 100%; box-shadow: .5rem .5rem 3rem #141F2D, -.5rem -.5rem 3rem rgba(255,255,255,.1);}
img{ max-width: 100% !important;}
&lt;/style&gt;
&lt;p&gt;Github actions are written in configuration files using the YAML syntax.  YAML is a superset of JSON.  Most YAML can be expressed inline with JSON syntax.  Similar to python YAML is whitespace driven by whitespace rather than brackets tags.  The argument for using YAML for configuration files such as actions is that it is more human-readable and editable.  It&apos;s much easier to see the whitespace layout than it is to get closing brackets correct.  For actions, I believe this is mostly true.  I don&apos;t see any use case to get past 3-5 indents, which is completely manageable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can I just say that I learned more than I realized about YAML by writing this article&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-headers/1.png&quot; alt=&quot;Arrays and Objects&quot;&gt;&lt;/h2&gt;
&lt;p&gt;In YAML or JSON, the most basic containers for data are &lt;strong&gt;arrays&lt;/strong&gt;, a 1D list of things, and &lt;strong&gt;objects&lt;/strong&gt;, for key-value pairs.&lt;/p&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-h3/1.png&quot; alt=&quot;Arrays&quot;&gt;&lt;/h3&gt;
&lt;p&gt;The start of an array container is signified with a leading &lt;code class=&quot;language-text&quot;&gt;-&lt;/code&gt;.  This is probably one of the big things I didn&apos;t understand about YAML before writing this post, but hats off to the GitHub actions editor as it took care of a lot of my misunderstanding for me.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; one
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; two
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; three&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&apos;one&apos;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &apos;two&apos;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &apos;three&apos;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-h3/2.png&quot; alt=&quot;Objects&quot;&gt;&lt;/h3&gt;
&lt;p&gt;Objects are just &lt;code class=&quot;language-text&quot;&gt;{key: &amp;quot;value&amp;quot;}&lt;/code&gt; pairs without any &lt;code class=&quot;language-text&quot;&gt;-&lt;/code&gt; before them.  I find that objects make 💯 sense to me.  Unlike arrays, they feel very intuitive.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; one
&lt;span class=&quot;token key atrule&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; me&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&apos;name&apos;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &apos;one&apos;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &apos;who&apos;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &apos;me&apos;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-headers/2.png&quot; alt=&quot;Example Combining arrays and objects&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Let&apos;s start writing something that looks a bit more like a GitHub action.  GitHub actions are built from an object containing name, on, jobs.  Where jobs is a list of jobs, that contain a list of steps.  Simple actions will only need a single job, but commonly a list of steps.&lt;/p&gt;
&lt;h4&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-h3/4.png&quot; alt=&quot;Shortlist of GitHub action keys&quot;&gt;&lt;/h4&gt;
&lt;p&gt;These are the keys, with their parents, that I found most useful.  You can find a complete list on &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions&quot;&gt;workflow-syntax-for-github-actions&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push&lt;/li&gt;
&lt;li&gt;pull_request&lt;/li&gt;
&lt;li&gt;schedule&lt;/li&gt;
&lt;li&gt;watch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;env&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jobs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;needs&lt;/li&gt;
&lt;li&gt;env&lt;/li&gt;
&lt;li&gt;if&lt;/li&gt;
&lt;li&gt;steps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-h3/5.png&quot; alt=&quot;Combining arrays and objects&quot;&gt;&lt;/h3&gt;
&lt;p&gt;Here is a very small example that contains an object with one key, &lt;code class=&quot;language-text&quot;&gt;jobs&lt;/code&gt;.  That &lt;code class=&quot;language-text&quot;&gt;jobs&lt;/code&gt; object contains one job called &lt;code class=&quot;language-text&quot;&gt;build&lt;/code&gt; that contains a list of &lt;code class=&quot;language-text&quot;&gt;steps&lt;/code&gt;.  Notice the &lt;code class=&quot;language-text&quot;&gt;-&lt;/code&gt; before each step, and how each &lt;code class=&quot;language-text&quot;&gt;step&lt;/code&gt; repeats the same object keys.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest
        &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; step&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;one
          &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; checkout
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; step&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;two
          &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; step&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;three
          &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; package&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;jobs&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;runs-on&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;ubuntu-latest&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;steps&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;step-one&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token property&quot;&gt;&quot;uses&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;checkout&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;step-two&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token property&quot;&gt;&quot;uses&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;test&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;step-three&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token property&quot;&gt;&quot;uses&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;package&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-headers/3.png&quot; alt=&quot;Multiline Strings&quot;&gt;&lt;/h2&gt;
&lt;p&gt;Multiline strings are super important in GitHub actions.  You will likely use the &lt;code class=&quot;language-text&quot;&gt;|&lt;/code&gt; to preserve newlines for shell scripts most commonly but may also have some raw text fields that need to be concatenated without a newline character using the &lt;code class=&quot;language-text&quot;&gt;&amp;gt;&lt;/code&gt; operator.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;| preserves newlines&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;folds newlines&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;preserved&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
    cd my-dir
    ls
    mv public ../&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;folded&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
    This is some long text
    that I do not want on
    one line, but it is
    really a one-liner&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;preserved&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;cd my-dir\nls\nmv public ../\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;folded&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;This is some long text that I do not want on one line&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; but it is  really
   a one-liner&quot;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-headers/4.png&quot; alt=&quot;Anchors are not supported&quot;&gt;&lt;/h2&gt;
&lt;p&gt;YAML has this amazing feature for reducing repetative content called anchors.  You can save part of your configuration as a reusable variable in other sections.  I see this being really cool if you had separate jobs that all needed similar steps.  Look for this improvement in the future, for now just be aware that it is part of the YAML syntax.&lt;/p&gt;
&lt;p&gt;See support ticket 👉 &lt;a href=&quot;https://github.community/t5/GitHub-Actions/Support-for-YAML-anchors/m-p/30336&quot;&gt;Support-for-YAML-anchors&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;secrets&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token important&quot;&gt;&amp;amp;secrets&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;github-pat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; gh&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;pat &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;gmail-pass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; gmail&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;pass &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; step&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;one
          &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; checkout
          &lt;span class=&quot;token key atrule&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token important&quot;&gt;*secrets&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; step&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;two
          &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test
          &lt;span class=&quot;token key atrule&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token important&quot;&gt;*secrets&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; step&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;three
          &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; package
          &lt;span class=&quot;token key atrule&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token important&quot;&gt;*secrets&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice how the nice clean YAML syntax gets exploded with much more data in the JSON format.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;secrets&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;github-pat&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gh-pat }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;gmail-pass&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gmail-pass }}&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;jobs&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;github-pat&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gh-pat }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;gmail-pass&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gmail-pass }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;step-one&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;uses&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;checkout&quot;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;github-pat&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gh-pat }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;gmail-pass&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gmail-pass }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;step-two&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;uses&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;test&quot;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;github-pat&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gh-pat }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;gmail-pass&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${{ gmail-pass }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;step-three&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;uses&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;package&quot;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-headers/5.png&quot; alt=&quot;Writing an Action&quot;&gt;&lt;/h2&gt;
&lt;p&gt;With a basic understanding of YAML you can probably go to your repo and click actions &gt; new workflow &gt; setup my own workflow right from the ui, and create your own.  Or read through the official syntax docs for deeper information &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions&quot;&gt;workflow-syntax-for-github-actions&lt;/a&gt;. Let&apos;s finsh off with a really simple action, the default one from GitHub.&lt;/p&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-h3/6.png&quot; alt=&quot;Important first step&quot;&gt;&lt;/h3&gt;
&lt;p&gt;It is important to know that when running an action you will likely need access to your code in order to lint, test, build, package, whatever you want to do with it.  Your first step for any action requiring code from your repo is to &lt;code class=&quot;language-text&quot;&gt;checkout&lt;/code&gt; your repo.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt; &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;token comment&quot;&gt;# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-syntax-h3/7.png&quot; alt=&quot;Default example&quot;&gt;&lt;/h3&gt;
&lt;p&gt;This example runs a workflow called &lt;code class=&quot;language-text&quot;&gt;CI&lt;/code&gt; on ubuntu on every push or PR to the main branch.  Within the build job it does a checkout of the repo, then runs two shell steps.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# This is a basic workflow to help you get started with Actions&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; CI

&lt;span class=&quot;token comment&quot;&gt;# Controls when the action will run. Triggers the workflow on push or pull request&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# events but only for the main branch&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; main &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; main &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# A workflow run is made up of one or more jobs that can run sequentially or in parallel&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;# This workflow contains a single job called &quot;build&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# The type of runner that the job will run on&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest

    &lt;span class=&quot;token comment&quot;&gt;# Steps represent a sequence of tasks that will be executed as part of the job&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@v2

    &lt;span class=&quot;token comment&quot;&gt;# Runs a single command using the runners shell&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Run a one&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;line script
      &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; echo Hello&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; world&lt;span class=&quot;token tag&quot;&gt;!&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Runs a set of commands using the runners shell&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Run a multi&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;line script
      &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
        echo Add other actions to build,
        echo test, and deploy your project.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/github-actions-syntax.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/github-actions-syntax/.png</cover_image></item><item><title><![CDATA[What Are GitHub Actions]]></title><description><![CDATA[I have been diving deep into Github actions for about a month now and they are wicked good!  They allow you to run any sort of arbitrary…]]></description><link>https://waylonwalker.com/what-are-github-actions/</link><guid isPermaLink="false">https://waylonwalker.com/what-are-github-actions/</guid><pubDate>Mon, 16 Mar 2020 05:00:00 GMT</pubDate><content:encoded>&lt;style&gt;
h2 img { width: 100%; box-shadow: .5rem .5rem 3rem #141F2D, -.5rem -.5rem 3rem rgba(255,255,255,.1);}
img{ max-width: 100% !important;}
&lt;/style&gt;
&lt;p&gt;I have been diving deep into Github actions for about a month now and they are wicked good!  They allow you to run any sort of arbitrary code based on events in your repo, webhooks, or schedules.  They are very reasonably priced.  The interface that GitHub hs developed for them is top-notch!  It&apos;s so good I have done 90% of my editing of them right from github.com.&lt;/p&gt;
&lt;h2&gt;TLDR&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;some interaction to your repository &lt;strong&gt;triggers&lt;/strong&gt; code to run.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-online-editor.png&quot; alt=&quot;Online Editor&quot;&gt;&lt;/h2&gt;
&lt;p&gt;The online editor for actions is pretty amazing.  When creating a new workflow it automatically sets up a new blank workflow or a workflow from the marketplace for you in your &lt;code class=&quot;language-text&quot;&gt;.github/workflows&lt;/code&gt; directory.  This is all it takes to get an action running, a &lt;code class=&quot;language-text&quot;&gt;yaml&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;yml&lt;/code&gt; file in the &lt;code class=&quot;language-text&quot;&gt;.github/workflows&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-editor.png&quot; alt=&quot;github actions online editor&quot; title=&quot;github actions online editor&quot;&gt;&lt;/p&gt;
&lt;p&gt;The editor does a great job of detecting syntax errors, misplaced keys.  It also does a great job at autocompletion.  As you type it will suggest keys that are accepted by the workflow syntax.  There is an embedded side pannel with docs and the marketplace to the right.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-event-triggering.png&quot; alt=&quot;Event Triggering&quot;&gt;&lt;/h2&gt;
&lt;p&gt;see this article from GitHub for a full set of details: &lt;a href=&quot;https://help.github.com/en/actions/reference/events-that-trigger-workflows&quot; title=&quot;https://help.github.com/en/actions/reference/events-that-trigger-workflows&quot;&gt;https://help.github.com/en/actions/reference/events-that-trigger-workflows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can trigger actions to run based on about any interaction with the repo that you can imagine, push, PR, webhooks, follows, create a branch, delete a branch, deployment, fork, wiki, issues, comments, labels, milestones, just check out the GitHub article for the full list.&lt;/p&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-push-pr.png&quot; alt=&quot;push/pr&quot;&gt;&lt;/h3&gt;
&lt;p&gt;The most common and default trigger you will come across is the &lt;code class=&quot;language-text&quot;&gt;on push&lt;/code&gt;.  This means that on every push/pull_request the given action will run.  This is typically at the start of the file and will trigger the workflow for the whole file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Trigger the workflow on push or pull request&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;push&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pull_request&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also filter to only run on specific branches.  You probably only want to run your release workflow on the main branch, but want linting and testing on all branches.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main
&lt;span class=&quot;token key atrule&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-schedule.png&quot; alt=&quot;schedule&quot;&gt;&lt;/h3&gt;
&lt;p&gt;It is also possible to set up your workflows to run on a schedule.  I have set a few of these up myself to do things such as updating/auditing npm dependencies and checking if the site is up.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# * is a special character in YAML so you have to quote this string&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;token string&quot;&gt;&apos;*/15 * * * *&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-watch.png&quot; alt=&quot;watch&quot;&gt;&lt;/h3&gt;
&lt;p&gt;One issue that I have with GitHub actions is that there really isn&apos;t a good way to manually run workflows.  A workaround I found is that you can run a workflow when the repo is starred.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; started &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a public repo with some traction, you might want to avoid this hack, but if you did want to use it on a repo that may potentially get some stars randomly make sure that you filter to only your stars.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; started &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;run-on-star&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest
    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ✨ you starred your own repo
        &lt;span class=&quot;token key atrule&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; github.actor == &apos;WaylonWalker&apos;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-free.png&quot; alt=&quot;Free for public repositories&quot;&gt;&lt;/h2&gt;
&lt;p&gt;GitHub offers quite a generous free tier to get you started.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-free-tier.png&quot; alt=&quot;gh-actions-free-tier&quot; title=&quot;github actions free tier&quot;&gt;&lt;/p&gt;
&lt;p&gt;I think that GitHub&apos;s pricing just shows its commitment to the open-source.  Any public repo has unlimited build minutes!  I believe this goes for not only Linux actions, but  the more expensive windows and mac actions as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-free--for-public.png&quot; alt=&quot;github actions free for public repos&quot; title=&quot;GitHub actions free for public repos&quot;&gt;&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-secrets.png&quot; alt=&quot;Secrets&quot;&gt;&lt;/h2&gt;
&lt;p&gt;You will find that a lot of actions need things such as a GitHub personal access token.  You may even be hitting a third party API such as twitter or Gmail that require an API key.  These are things that need to be kept secret &lt;strong&gt;DO NOT&lt;/strong&gt; put these as raw text inside your action.  The first tutorial I followed to deploy to GitHub pages did this 🤦‍♂️ and I followed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-built-in-secret-store.png&quot; alt=&quot;github built-in secret store&quot; title=&quot;GitHub built-in secret store&quot;&gt;&lt;/p&gt;
&lt;p&gt;GitHub offers a wonderful secrets manager.  From your repository go to settings &gt; secrets.  You can just add settings/secrets to the URL of your repo to get there as well.  From there add a new secret.  Now your secret is accessible by secret key using &lt;code class=&quot;language-text&quot;&gt;${{ secrets.&amp;lt;your-key&amp;gt; }}&lt;/code&gt; from anywhere in your workflows &lt;code class=&quot;language-text&quot;&gt;yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;GitHub has done an amazing job at hiding these secrets.  Anywhere that I have seen try to echo these secrets out into the console or anywhere just shows ***.  I am not sure if you can 100% rely on this, but they appear to have done a good job with it.&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-live-logs.png&quot; alt=&quot;Live Logs&quot;&gt;&lt;/h2&gt;
&lt;p&gt;One great feature of actions is the live logs.  As you are developing them it is likely that you are anxiously watching them with anticipation.  Watching those logs go, and turn green is a great experience.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-live-logs.png&quot; alt=&quot;github actions live logs&quot; title=&quot;github actions live logs&quot;&gt;&lt;/p&gt;
&lt;h2&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-header-marketplace.png&quot; alt=&quot;Marketplace&quot;&gt;&lt;/h2&gt;
&lt;p&gt;As with all things open source, much of the power of actions comes through the community and in actions case the marketplace.  Reusable actions can be deployed to the github marketplace.  Here they can be found from search, starred, and example workflows can be copied in one click.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/gh-actions-marketplace.png&quot; alt=&quot;github actions marketplace&quot; title=&quot;github actions marketplace&quot;&gt;&lt;/p&gt;
&lt;p&gt;I find that many times while I can write all of the code necessary in a shell script to do most of what I need, there is already an action in the marketplace that takes care of everything for me.  In fact there are usually several to choose from.&lt;/p&gt;
&lt;h1&gt;#Discuss&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;What Actions are you excited about?&lt;/li&gt;
&lt;li&gt;Are you using actions today?&lt;/li&gt;
&lt;li&gt;What struggles have you encountered with actions?&lt;/li&gt;
&lt;li&gt;Do you like these silly image headers I used? Do they kill A11y? I attempted to use good alt text to counter.&lt;/li&gt;
&lt;/ul&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/what-are-github-actions.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/what-are-github-actions/.png</cover_image></item><item><title><![CDATA[Today I learned `git diff feature..main`]]></title><description><![CDATA[Today I learned how to diff between two branches. Sometimes we get a little  happy and mistakenly commit something that we just can't figure…]]></description><link>https://waylonwalker.com/git-diff-branches/</link><guid isPermaLink="false">https://waylonwalker.com/git-diff-branches/</guid><pubDate>Tue, 03 Mar 2020 11:58:00 GMT</pubDate><content:encoded>&lt;p&gt;Today I learned how to diff between two branches.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git diff feature..main&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes we get a little &lt;code class=&quot;language-text&quot;&gt;git add . &amp;amp;&amp;amp; git commit -m &amp;quot;WIP&amp;quot;&lt;/code&gt; happy and mistakenly commit something that we just can&apos;t figure out. This is a good way to figure out what the heck has changed on the current branch compared to any other branch.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;Let&apos;s create a new directory, initialize git and toss some content into a readme.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; git-diff
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; init
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello there&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; readme.md
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;hello there&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; readme.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After all of that, we have a git repository on our local machine with a single file &lt;code class=&quot;language-text&quot;&gt;readme.md&lt;/code&gt; that contains the following.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;hello there&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create a branch and ✍ edit&lt;/h2&gt;
&lt;p&gt;Let&apos;s checkout a new branch called Waylon and change the word &lt;code class=&quot;language-text&quot;&gt;there&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;Waylon&lt;/code&gt; in our &lt;code class=&quot;language-text&quot;&gt;readme.md&lt;/code&gt; file, then diff it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; checkout -b Waylon
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello Waylon&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; readme.md
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;hello Waylon&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;diff&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt; hello there
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; hello waylon&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point we have one commit.  Things are really straightforward, and our diff will be the same between the last commit and the main branch since.  Let&apos;s make another commit by adding the date.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello waylon&lt;span class=&quot;token entity&quot; title=&quot;\n&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;token entity&quot; title=&quot;\n&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; readme.md
&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; readme.md
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;diff&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;hello Waylon
&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; Fri 13 Mar 2020 04:23:21 PM DST&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;👆 At this point, our diff doesn&apos;t tell us the whole story between our current state and main, only between our current state and our last commit.  Let&apos;s commit our changes and compare our branch to main.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;add date&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;diff&lt;/span&gt; main&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;diff&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt; hello there
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; hello Waylon
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt; Fri 13 Mar 2020 03:43:21 PM DST&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Git is powerful&lt;/h2&gt;
&lt;p&gt;I learn small tricks like this often with git.  Many times I forget about it and have to come back to re-learn. Sharing my thoughts gives me a better chance of remembering.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/git-diff-branches.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/git-diff-branches/.png</cover_image></item><item><title><![CDATA[Create New Kedro Project]]></title><description><![CDATA[This is a quickstart to getting a new kedro pipeline up and running.  After this article you should be able to understand how to get started…]]></description><link>https://waylonwalker.com/create-new-kedro-project/</link><guid isPermaLink="false">https://waylonwalker.com/create-new-kedro-project/</guid><pubDate>Mon, 02 Mar 2020 12:09:00 GMT</pubDate><content:encoded>&lt;p&gt;This is a quickstart to getting a new &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; pipeline up and running.  After this article you should be able to understand how to get started with &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt;.  You can learn more about this &lt;a href=&quot;https://kedro.readthedocs.io/en/stable/02_getting_started/04_hello_world.html&quot;&gt;Hello World Example&lt;/a&gt; in the &lt;a href=&quot;https://kedro.readthedocs.io/en/stable/02_getting_started/04_hello_world.html&quot;&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;🧹 Install &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;Kedro&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;🛢 Create the Example Pipeline&lt;/p&gt;
&lt;p&gt;💨 Run the example&lt;/p&gt;
&lt;p&gt;📉 Show the pipeline visualization&lt;/p&gt;
&lt;h2&gt;Create a Virtual Environment&lt;/h2&gt;
&lt;p&gt;I use conda to control my virtual environments and will create a new environment called &lt;code class=&quot;language-text&quot;&gt;kedro_iris&lt;/code&gt; with the following command.  &lt;strong&gt;note&lt;/strong&gt; the latest compatible version of python is 3.7.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: as of kedro 0.16.0 kedro supports up to 3.8&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n kedro_iris &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt; -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/conda-create-kedro-iris.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;Options&lt;/p&gt;
&lt;h2&gt;Activate your conda environment&lt;/h2&gt;
&lt;p&gt;I try to keep my base environment as clean as possible.  I have ran into too many issues installing things in the base environment.  Almost always its some dependency that starts causing issues making it even harder to realize where its coming from as I never even installed it in base.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; activate kedro_iris&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Install &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;Kedro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Currently &lt;code class=&quot;language-text&quot;&gt;kedro==0.15.5&lt;/code&gt; is available on pypi and can be pip installed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt; kedro is up to &lt;a href=&quot;https://pypi.org/project/kedro/&quot;&gt;&lt;img src=&quot;https://badge.fury.io/py/kedro.svg&quot; alt=&quot;PyPI version&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Make sure you are in the directory that you want your project in&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /mnt/c/temp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create a new &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;Kedro&lt;/a&gt; project&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro new
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; kedro-iris
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; init
kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/kedro-new-iris.gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Run the pipeline&lt;/h2&gt;
&lt;p&gt;This will tell kedro to run your pipeline.  It will look at all of your nodes and determine the correct execution order for you, then run each one of them.  You can do this from a python script, python terminal session, or from the &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; cli.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;✨ It will look at all of your nodes and determine the correct execution order for you&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lets run from the cli while in the same directory as kedro-iris&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/kedro-new-iris.gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Viz&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; is a priceless feature of &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt;.  It&apos;s like x-ray vision into your pipeline.  I can&apos;t imagine working without it after having it over the past year.  Unlike traditional documentation &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; cannot lie to you.  It will help guarantee your changes line up properly, plan out adding nodes, and identify dependencies of deprecating nodes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike traditional documentation &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; cannot lie to you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Install &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; is also on pypi and can be installed just like any other python package with &lt;code class=&quot;language-text&quot;&gt;pip&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro-viz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Visualize the pipeline&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; is ran from the command line in the same directory as your kedro project.  There are ways to store your pipeline data as json, then load them from outside your project, but we will follow the standard practice for now.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro viz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/kedro-viz-iris.gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;🏗 Docker&lt;/h2&gt;
&lt;p&gt;There is another package that makes creating docker images from kedro projects super simple &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-docker&quot;&gt;kedro-docker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you dont already have docker installed on your machine, feel free to skip this section.&lt;/p&gt;
&lt;h3&gt;install &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-docker&quot;&gt;kedro-docker&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro-docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;build the image&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro docker build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;run the image&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;kedro docker run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Simple Huh&lt;/h2&gt;
&lt;p&gt;Getting up and going with a brand new &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; project is super simple, thanks to the help of the &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; command.  The ability to add an example pipeline from the start makes it that much easier to get going and have a template to follow for your own projects.&lt;/p&gt;
&lt;h2&gt;Recap&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda create -n kedro_iris &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.7&lt;/span&gt; -y
&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; activate kedro_iris
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /mnt/c/temp
kedro new
&lt;span class=&quot;token comment&quot;&gt;# give it a project name Kedro Iris&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# accept default package name kedro_iris&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# addept default directory name kedro-iris&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# yes for an example pipeline&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; kedro-iris
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; init
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;initialized new kedro project&quot;&lt;/span&gt;
kedro &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;
kedro run
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro-viz
kedro viz
pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; kedro-docker
kedro docker build
kedro docker run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Other resources&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://kedro.readthedocs.io/&quot;&gt;kedro docs&lt;/a&gt; have a ton of great resources.  They are searchable, but can be a bit of an overwhelming amount of data.&lt;/p&gt;
&lt;p&gt;I keep adding to my &lt;a href=&quot;https://waylonwalker.com/notes/kedro/&quot;&gt;kedro notes&lt;/a&gt; as I find new and interesting things.&lt;/p&gt;
&lt;p&gt;I tweet out most of those snippets as I add them, you can find them all here &lt;a href=&quot;https://twitter.com/search?q=%23kedrotips&quot;&gt;#kedrotips&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;More to come&lt;/h2&gt;
&lt;p&gt;I am planning to do more articles like this, you can stay up to date with them by following me on &lt;a href=&quot;https://dev.to/waylonwalker&quot;&gt;dev.to&lt;/a&gt;, subscribing to my &lt;a href=&quot;https://waylonwalker.com/rss.xml&quot;&gt;rss feed&lt;/a&gt;, or subscribe to my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/create-new-kedro-project.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/create-new-kedro-project/.png</cover_image></item><item><title><![CDATA[What is YOUR Advice for New Data Scientists]]></title><description><![CDATA[Learn the business Learn Git Your code does not need to be amazing Keep Learning Learn Git You dont have to start out as a git wizard with…]]></description><link>https://waylonwalker.com/data-scientist-advice/</link><guid isPermaLink="false">https://waylonwalker.com/data-scientist-advice/</guid><pubDate>Wed, 26 Feb 2020 12:55:00 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;Learn the business&lt;/li&gt;
&lt;li&gt;Learn Git&lt;/li&gt;
&lt;li&gt;Your code does not need to be amazing&lt;/li&gt;
&lt;li&gt;Keep Learning&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Learn Git&lt;/h1&gt;
&lt;p&gt;You dont have to start out as a git wizard with the cleanest possible commit history.  At first dont let yourself get too wrapped up in it, the most important part is that you make commits.  You will find needs for more advanced stuff later.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;token string&quot;&gt;&quot;FEAT added new function to calculate revenue by product family&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get comfortable with this, then learn how to &lt;code class=&quot;language-text&quot;&gt;branch&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;rebase&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;stash&lt;/code&gt;, etc...&lt;/p&gt;
&lt;h1&gt;Your code does not need to be amazing&lt;/h1&gt;
&lt;p&gt;Get the job done.  Keep it in small bite size pieces.  Make readable function definitions and variable names.  You will thank yourself for naming things well later.  Readability counts more than performance in most cases of data science.  If it gets the job done try not to over worry about things like performance.  A few extra seconds to clean a dataset or build a model is not worth hours of your time.  As you go you will have cases that performance is more critical and you will learn what to do from the start to avoid them.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/data-scientist-advice.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/data-scientist-advice/.png</cover_image></item><item><title><![CDATA[Do You Hoist]]></title><description><![CDATA[I am working through Wes Bos's beginnerjavascript.com/ I just hit module 18 on hoisting.  It's something that I always knew was there, Its…]]></description><link>https://waylonwalker.com/do-you-hoist/</link><guid isPermaLink="false">https://waylonwalker.com/do-you-hoist/</guid><pubDate>Tue, 25 Feb 2020 12:52:00 GMT</pubDate><content:encoded>&lt;p&gt;I am working through Wes Bos&apos;s &lt;a href=&quot;https://beginnerjavascript.com/&quot;&gt;beginnerjavascript.com/&lt;/a&gt; I just hit module 18 on hoisting.  It&apos;s something that I always knew was there, Its not something I typically see used or use myself.&lt;/p&gt;
&lt;h1&gt;Do you Hoist?&lt;/h1&gt;
&lt;p&gt;Do you have any use cases that you use hoising?  Why?  It seems like a really cool feature in any language that uses it, but I dont really notice it in use.&lt;/p&gt;
&lt;h1&gt;What is Hoising&lt;/h1&gt;
&lt;p&gt;There are many articles that cover this in far more depth, but its the idea that variable declarations and functions are defined before they are executed.  This means that it doesnt matter if you call a function before or after it is defined.&lt;/p&gt;
&lt;h1&gt;Hoisting&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Hello &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Waylon&apos;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running this code will log out &quot;Waylon&quot;&lt;/p&gt;
&lt;h1&gt;What about variable hoisting&lt;/h1&gt;
&lt;p&gt;I am most familiar with python which does not variable hoist so this one kinda confused me at first.  It only hoists the variable declaration not the value of the variable.  It defines whether the variable is going to be &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;const&lt;/code&gt; and sets it to undefined.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It only hoists the variable declaration not the value of the variable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name: &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;firstName: &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; firstName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Waylon&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code will log out &lt;code class=&quot;language-text&quot;&gt;name: undefined&lt;/code&gt; followed by an &lt;code class=&quot;language-text&quot;&gt;Uncaught ReferenceError: firstName is not defined&lt;/code&gt; since &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; has been decalared and &lt;code class=&quot;language-text&quot;&gt;firstName&lt;/code&gt; has not been decalred.&lt;/p&gt;
&lt;h1&gt;I don&apos;t Hoist&lt;/h1&gt;
&lt;p&gt;Really it feels weird to call function definitions before using them.  I really dont have a better reason.  It just feels more natural to do so.&lt;/p&gt;
&lt;h1&gt;Is hoisting more readable?&lt;/h1&gt;
&lt;p&gt;I kinda like the idea of putting the 🥩 meat of the file up at the top so that someone reading it will see the good stuff first, then can optionally dig into the weeds if they need to.&lt;/p&gt;
&lt;h1&gt;I started a newsletter&lt;/h1&gt;
&lt;p&gt;I recently started a newsletter, &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;join in&lt;/a&gt; and let me know what you want to hear about.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/do-you-hoist.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/do-you-hoist/.png</cover_image></item><item><title><![CDATA[What is Kedro]]></title><description><![CDATA[kedro is an open-source data pipeline framework.  It provides guardrails to set your project up right from the start without needing to know…]]></description><link>https://waylonwalker.com/what-is-kedro/</link><guid isPermaLink="false">https://waylonwalker.com/what-is-kedro/</guid><pubDate>Mon, 24 Feb 2020 12:48:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; is an open-source data pipeline framework.  It provides guardrails to set your project up right from the start without needing to know deeply how to set up your own python library for data pipelining.  It includes great ways to manipulate &lt;code class=&quot;language-text&quot;&gt;catalogs&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;pipelines&lt;/code&gt;.  This article will cover the 10K view of &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt;, future articles will dive deeper into each one.&lt;/p&gt;
&lt;!-- {% slideshare DAZrqvJmuUUfFF %} --&gt;
&lt;h2&gt;Libraries&lt;/h2&gt;
&lt;p&gt;Currently, &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; is broken down into 3 different libraries.&lt;/p&gt;
&lt;p&gt;💎 &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;📉 &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;🏗 &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-docker&quot;&gt;kedro-docker&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7175616e74756d626c61636b6c6162732f6b6564726f2f6d61737465722f696d672f6b6564726f5f62616e6e65722e6a7067.jpg&quot; alt=&quot;kedro logo&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; is the core of the ecosystem.  It provides the docs, getting started, &lt;code class=&quot;language-text&quot;&gt;kedro new&lt;/code&gt; templates, and the core library including the catalog and pipeline.&lt;/p&gt;
&lt;h3&gt;Catalog&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/trzfj86dbq0ronis26x1.jpg&quot; alt=&quot;catalogs&quot;&gt;&lt;/p&gt;
&lt;p&gt;Inside this core library is a data catalog object.  This allows you to specify attributes about your data, then load and save it without ever writing a single line of read/write code, which can become very cumbersome.  Older versions would load this into the io variable, currently it loads into the catalog.  The power of the catalog is that it allows you to read and write data by just referencing its name.  Typically this is done inside of a YAML file, but can be done in python.&lt;/p&gt;
&lt;p&gt;Here is an example of a CSV dataset stored locally&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Example 1: Loads a local csv file&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;bikes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; CSVLocalDataSet
  &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;data/01_raw/bikes.csv&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This dataset can be loaded by name&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;bikes&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Though it&apos;s not typical practice it is possible to save data to a catalog entry ad-hoc.  Typically the pipeline is used to run functions and save data for you.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
bikes_df &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;bikes_data&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datasets&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bikes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bikes_df&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Pipeline&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/roman-pentin-T5QT2bmiD4E-unsplash.jpg&quot; alt=&quot;building pipelines&quot;&gt;&lt;/p&gt;
&lt;p&gt;The pipeline object is the brains of &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt;.  When working with &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; you simply define functions that take in data as arguments, manipulate it, and return a new dataset.  The pipeline will decide what order to execute these functions ini based on their dependencies.  It will then work with the catalog to load the data from the catalog pass it to your function, the save the returned data in the catalog.&lt;/p&gt;
&lt;p&gt;Here is an example pipeline from the docs.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; np
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Pipeline
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;clean_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cars&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
               boats&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Dict&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cars_df&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;cars&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dropna&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boats_df&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;boats&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dropna&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;halve_dataframe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array_split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;clean_data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
         inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;boats2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
         outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cars_df&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;clean_cars2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                      boats_df&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;clean_boats2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;halve_dataframe&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;token string&quot;&gt;&apos;clean_cars2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;train_cars2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;test_cars2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;halve_dataframe&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;clean_boats2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;train_boats2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;test_boats2017&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

pipeline &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Pipeline&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nodes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; is a priceless component to the &lt;a href=&quot;https://kedro.readthedocs.io&quot;&gt;kedro&lt;/a&gt; ecosystem.  It gives you x-ray vision into your project.  You can see exactly how data flows through your pipeline.  Since it is fully automated it is always up to date and never lies to you.  &lt;a href=&quot;https://github.com/quantumblacklabs/kedro-viz&quot;&gt;kedro-viz&lt;/a&gt; is an integral part of my daily debugging and refactoring toolbelt.&lt;/p&gt;
&lt;p&gt;Starting the viz from the command line is super easy&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; my-kedro-project
kedro viz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/pipeline_visualisation.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro-docker&quot;&gt;kedro-docker&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/quantumblacklabs/kedro-docker&quot;&gt;kedro-docker&lt;/a&gt; is a simple way to set up your project for production.  It provides a few simple cli commands&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; my-kedro-project
kedro docker build
kedro docker run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Other resources&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://kedro.readthedocs.io/&quot;&gt;kedro docs&lt;/a&gt; have a ton of great resources.  They are searchable, but can be a bit of an overwhelming amount of data.&lt;/p&gt;
&lt;p&gt;I keep adding to my &lt;a href=&quot;https://waylonwalker.com/notes/kedro/&quot;&gt;kedro notes&lt;/a&gt; as I find new and interesting things.&lt;/p&gt;
&lt;p&gt;I tweet out most of those snippets as I add them, you can find them all here &lt;a href=&quot;https://twitter.com/search?q=%23kedrotips&quot;&gt;#kedrotips&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;More to come&lt;/h2&gt;
&lt;p&gt;I am planning to do more articles like this, you can stay up to date with them by following me on &lt;a href=&quot;https://dev.to/waylonwalker&quot;&gt;dev.to&lt;/a&gt;, subscribing to my &lt;a href=&quot;https://waylonwalker.com/rss.xml&quot;&gt;rss feed&lt;/a&gt;, or subscribe to my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/what-is-kedro.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/what-is-kedro/.png</cover_image></item><item><title><![CDATA[Custom Scrollbar Design]]></title><description><![CDATA[Inspired by Wes Bos's new uses.tech I wanted a custom scrollbar on my personal site.  I had tried to do it in the past, but gave up after it…]]></description><link>https://waylonwalker.com/custom-scrollbar-design/</link><guid isPermaLink="false">https://waylonwalker.com/custom-scrollbar-design/</guid><pubDate>Fri, 21 Feb 2020 12:11:00 GMT</pubDate><content:encoded>&lt;p&gt;Inspired by Wes Bos&apos;s new &lt;a href=&quot;https://uses.tech&quot;&gt;uses.tech&lt;/a&gt; I wanted a custom scrollbar on my personal site.  I had tried to do it in the past, but gave up after it was not working.&lt;/p&gt;
&lt;h2&gt;Looking at the Source&lt;/h2&gt;
&lt;p&gt;Since &lt;a href=&quot;https://uses.tech&quot;&gt;uses.tech&lt;/a&gt; is open source I jumped on github, searched for scroll and found this &lt;a href=&quot;https://github.com/wesbos/awesome-uses/blob/124bdd64345bc64eb84879929f0e57cbb8752e34/src/components/layout.js#L74&quot;&gt;layout.js&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Copy it to my own component&lt;/h2&gt;
&lt;p&gt;My first step was to take his css and copy it into a styled component for my entire layout, but it failed.  I do not fully understand why.  None of the custom style came through at all.  If you know please leave me a comment.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/why-wont-you-work.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;I suspect for some reason it has to do with attatching to the html element inside of a styled-component.  I think wes was able to get around this by using &lt;code class=&quot;language-text&quot;&gt;createGlobalStyle&lt;/code&gt;.  But I was still using much of the default gatsby template, so I did not have a &lt;code class=&quot;language-text&quot;&gt;createGlobalStyle&lt;/code&gt; element, but I did have a layout.css.&lt;/p&gt;
&lt;h2&gt;scroll.css&lt;/h2&gt;
&lt;p&gt;I added &lt;code class=&quot;language-text&quot;&gt;scroll.css&lt;/code&gt; to my static directory, then imported it into &lt;code class=&quot;language-text&quot;&gt;gatsby-browser.js&lt;/code&gt; in order to get it loaded onto the page.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt; &lt;span class=&quot;token comment&quot;&gt;/* static/scroll.css */&lt;/span&gt;

&lt;span class=&quot;token selector&quot;&gt;body::-webkit-scrollbar&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token selector&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;scroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; smooth&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;scrollbar-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; thin&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;scrollbar-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #5651B7&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token selector&quot;&gt;body::-webkit-scrollbar-track&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #392E3D&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token selector&quot;&gt;body::-webkit-scrollbar-thumb&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #5651B7 &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .5rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;112&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;107&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;208&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;180deg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;112&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;107&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;208&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 0%&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;86&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;81&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;183&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1px solid &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;86&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;81&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;183&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;.5&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// gatsby-browser.js&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &apos;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;scroll&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;css&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;It works&lt;/h2&gt;
&lt;p&gt; It was a bit finicky for me to find the right place to put everything, but this is the final result.  I found out that you can have a gradient on your &lt;code class=&quot;language-text&quot;&gt;scrollbar-thumb&lt;/code&gt;, but the &lt;code class=&quot;language-text&quot;&gt;scrollbar-track&lt;/code&gt; cannot, it also cannot be transparent.  I picked a color that matched my background the best for most use cases, but when the screen gets really narrow a line starts to appear.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../static/custom-scrollbar-with-css.gif&quot; alt=&quot;My final result&quot; title=&quot;my final result, an example give of the final result live on waylonwalker.com&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My final result&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;uses.tech layout.js: &lt;a href=&quot;https://github.com/wesbos/awesome-uses/blob/124bdd64345bc64eb84879929f0e57cbb8752e34/src/components/layout.js#L74&quot;&gt;layout.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;css-trick article: &lt;a href=&quot;https://css-tricks.com/almanac/properties/s/scrollbar/&quot; title=&quot;css tricks scrollbar article&quot;&gt;scrollbar&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/custom-scrollbar-design.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/custom-scrollbar-design/.png</cover_image></item><item><title><![CDATA[Don’t waste your time learning everything]]></title><description><![CDATA["Don’t waste your time learning everything."  Inspired by this linkedIn post I felt that this comment was very powerful. Here are my 2 cents…]]></description><link>https://waylonwalker.com/don-t-waste-your-time-learning-everything/</link><guid isPermaLink="false">https://waylonwalker.com/don-t-waste-your-time-learning-everything/</guid><pubDate>Wed, 19 Feb 2020 06:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;h1&gt;&quot;Don’t waste your time learning everything.&quot;&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/dont-waste-your-time-learning-everythign-post.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Inspired by this &lt;a href=&quot;https://www.linkedin.com/posts/activity-6633818327070326784--Ksl&quot;&gt;linkedIn post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I felt that this comment was very powerful. Here are my 2 cents.&lt;/p&gt;
&lt;h2&gt;Be Productive&lt;/h2&gt;
&lt;p&gt;Stick to what you know, and learn a little bit of something new every day. If what you know is how to use Excel like a boss, don&apos;t fee ashamed that you are missing something. Be proud and use what you know.&lt;/p&gt;
&lt;h2&gt;Don&apos;t Stagnate&lt;/h2&gt;
&lt;p&gt;Take small steps enhance what you know now with something new that you get you closer to where you want to be. If you need something that sci-py offers learn how to load in data and use that part. If your sick of waiting for IT to pull data out of the database so you can use it, learn that.&lt;/p&gt;
&lt;h2&gt;Dont Overwhelm Yourself&lt;/h2&gt;
&lt;p&gt;If you try to drop everything you know now and jump whole hog into these new flashy things its not going to work. Learn what you need to know.  New things crop up very often.  They will come and go.  Some things will get traction, some will never get much traction past an impressive hello world example.&lt;/p&gt;
&lt;h2&gt;Keep your finger on new tech&lt;/h2&gt;
&lt;p&gt;Its important to keep your finger on the state of technology, but dont Overwhelm yourself learning every new thing that comes out.  Make silly hello world examples in these new things and walk away.  When its time to implement something new into a real project you will be ready and understand how to do it.  If that thing dies its good that you didn&apos;t waste a lot of time on it, but chances are it inspired the thing that actually takes off.  Then you will have some understanding of what the next thing is doing ahead of everyone else who missed out on the original.&lt;/p&gt;
&lt;h2&gt;I&apos;ll leave you with this inspirational video by Kitze&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_kVxXV0TQ7M&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/2020-02-16%2009-57-03_Microsoft%20Text%20Input%20Application.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_kVxXV0TQ7M&quot;&gt;Navigating the hype-driven frontend development world without going insane - KITZE&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/don-t-waste-your-time-learning-everything.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/don-t-waste-your-time-learning-everything/.png</cover_image></item><item><title><![CDATA[2020 waylonwalker.com rebrand]]></title><description><![CDATA[Moving into 2020 I have been really leaning on using purple as my theme color everywhere more and more.   Its time for an update to my…]]></description><link>https://waylonwalker.com/2020-rebrand/</link><guid isPermaLink="false">https://waylonwalker.com/2020-rebrand/</guid><pubDate>Mon, 17 Feb 2020 13:02:00 GMT</pubDate><content:encoded>&lt;p&gt;Moving into 2020 I have been really leaning on using purple as my theme color everywhere more and more.   Its time for an update to my personal site, not just because it feels plain, not just because the cover art I am using for dev.to doesn&apos;t fit my current card layout, but because I feel &lt;strong&gt;inspired&lt;/strong&gt; and I &lt;strong&gt;want&lt;/strong&gt; to.&lt;/p&gt;
&lt;h2&gt;Starting point&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../2020-02-10%2012-17-43_Start.png&quot; alt=&quot;This is what we are working with.&quot;&gt;&lt;/p&gt;
&lt;p&gt;This is what we are working with.  It has been my card design for at least a year now.  Its not bad but, its a bit play, doesnt fit my new cover art style, and that date is not working over top of the cover art text.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plain&lt;/li&gt;
&lt;li&gt;cover art does not fit&lt;/li&gt;
&lt;li&gt;I am not digging the date on cover art that also has text&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Colors&lt;/h2&gt;
&lt;p&gt;I have been really into using a deep purple lately.  It is a neutral color that does not get enough respect, i.e. it&apos;s not used as frequently and kinda stands out when used.&lt;/p&gt;
&lt;h3&gt;How I pick colors&lt;/h3&gt;
&lt;p&gt;I am really bad at picking colors that go well together so for this I punt to utilizing others who have a better eye for this.  I commonly used the &lt;a href=&quot;https://instant-eyedropper.com/&quot; title=&quot;instant-eyedropper website&quot;&gt;instant-eyedropper&lt;/a&gt; desktop app to pick colors out of my text editor theme or colors that &lt;a href=&quot;https://canva.com&quot; title=&quot;Canva&quot;&gt;canva&lt;/a&gt; recommends.  Really just find soemthing that seems to match up with your taste, goes well with a color that you want to highlight or anything that inspires you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../how-i-pick-colors.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Tweaking colors&lt;/h3&gt;
&lt;p&gt;Once I get a couple of colors working well together its very common that I need to tweak them slightly.  Generally I hold the hue and change only the saturation and lightness.  It would probably make more sense for me to use hsla, but for some reason I always end up with a messy pallet trying to use numbers.  I typically just google color picker and use the one built into google search.  There are probably ones built into vscode now, but I have been doing this for years now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../how-i-adjust-colors.gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Gradient editor&lt;/h2&gt;
&lt;p&gt;I heavily used &lt;a href=&quot;https://cssgradient.io/&quot; title=&quot;https://cssgradient.io/&quot;&gt;cssgradient.io/&lt;/a&gt; to tweak in all of the very subtle gradients it was very common for me to put the same color on both sides and slightly pulling the color a bit darker or lighter until I liked the look.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../how-i-create-gradients.gif&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Matching Gradients&lt;/h3&gt;
&lt;p&gt;I had a couple of places that needed to but up gradients against each other seemlessly.  I am sure there are better ways to do it.  I would likerally take instant eyedropper, get the color right on the border, then plug that into cssgradient.io.&lt;/p&gt;
&lt;h2&gt;Progress&lt;/h2&gt;
&lt;p&gt;So far I have swapped out my card colors, and some of the text colors.  I also moved the date off of the cover image as I have been putting text on my cover images since starting to cross post to dev.to.  I did not like how they clashed and moved the text.   I also swapped over from gatsby fixed and gatsby fluid to make sure that the cover art always fits the card correctly.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../2020-02-15%2009-36-31_Start.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Feeling Inspired&lt;/h2&gt;
&lt;p&gt;Having gradients everywhere has been becoming very popular again.  Not the heavy highly saturated gradients from 00&apos;s presentation software. Gentle barely noticeable gradients, and soft gradients that flow smoothly from one color to the next.  So many splash screens and logos include these now.&lt;/p&gt;
&lt;p&gt;I have been really inspired by the &lt;strong&gt;sick&lt;/strong&gt; lighting that has been hot on youtube and twitch lately.  As I was gearing up to re-design my cards I saw this post by &lt;a href=&quot;https://twitter.com/chrisbiscardi&quot; title=&quot;@chrisbiscardi on twitter&quot;&gt;@chrisbiscardi&lt;/a&gt; and knew right then that I needed to do a similar lighting effect on my redesign!  This was literally my jumping off point at which I started the re-design.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../inspiration-for-new-post-card-2020-Chris-Biscardi.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Shadows&lt;/h3&gt;
&lt;p&gt;For this step I did not use any tooling, though I found some that could have been helpful later.  I literally just started stacking up different colors of box shadow, pulling a big blur, shifting them around, and adjusting the color opacity until everything looks just right.  Again I went really subtle here, comparing back to Chris&apos;s backdrop I am a bit more subtle than even that.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   -8rem -6rem 8rem -6rem &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;253&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 221&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 88&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   4rem 0 8rem &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;88&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 82&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 185&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   .2rem .2rem 1rem &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Complete format&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../new-post-card-2020.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;A few days too late&lt;/h2&gt;
&lt;p&gt;A few days later I saw this thread of tweets by &lt;a href=&quot;https://twitter.com/sarah_edo&quot;&gt;@sarah_edo&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;@swyx&lt;/a&gt; and realized that this style is called &lt;strong&gt;neomorphism&lt;/strong&gt;.  There are some sweet tools referenced here, check the&lt;img src=&quot;../../static/2020-rebrand-1.png&quot;&gt;m out if you are going for this design style.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/sarah_edo/status/1227694049118679040?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1227694049118679040&amp;#x26;ref_url=http%3A%2F%2F127.0.0.1%3A5500%2Findex.html&quot; title=&quot;neomorphism.io tweet from Sarah Drasner&quot;&gt;&lt;img src=&quot;../../2020-02-15%2011-05-55_Microsoft%20Text%20Input%20Application.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/swyx/status/1227697956587032576&quot; title=&quot;follow up list of resources from Shawn swyx Wang&quot;&gt;&lt;img src=&quot;../../2020-02-15%2011-06-16_Start.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Tool Links&lt;/h1&gt;
&lt;p&gt;Links to all of the tools referenced in this article.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://instant-eyedropper.com/&quot; title=&quot;instant-eyedropper&quot;&gt;https://instant-eyedropper.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cssgradient.io/&quot; title=&quot;https://cssgradient.io/&quot;&gt;cssgradient.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://neumorphism.io/&quot; title=&quot;https://neumorphism.io/&quot;&gt;https://neumorphism.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/sw-yx/spark-joy/blob/master/README.md#pure-css-tricks&quot; title=&quot;https://github.com/sw-yx/spark-joy/blob/master/README.md#pure-css-tricks&quot;&gt;https://github.com/sw-yx/spark-joy/blob/master/README.md#pure-css-tricks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/EFSSIiSrFj?amp=1&quot; title=&quot;https://card.surge.sh/&quot;&gt;card.surge.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/0yyw6wMuGO?amp=1&quot; title=&quot;https://brumm.af/shadows&quot;&gt;brumm.af/shadows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/tQ9NijDzUI?amp=1&quot; title=&quot;https://components.ai/box-shadows&quot;&gt;components.ai/box-shadows&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Shameless 🔌&lt;/h1&gt;
&lt;p&gt;I just started a newsletter &lt;a href=&quot;https://waylonwalker.com/newsletter/&quot; title=&quot;https://waylonwalker.com/newsletter/&quot;&gt;Join Here&lt;/a&gt; and lets start the discussion.  I want to know about my audience and what they want to hear about from me.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/2020-rebrand.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/2020-rebrand/.png</cover_image></item><item><title><![CDATA[I just added react-headroom to my site]]></title><description><![CDATA[It was so easy to get a professional looking navbar with just 3 lines of code.  This package seriously is so usable on mobile it is…]]></description><link>https://waylonwalker.com/react-headroom/</link><guid isPermaLink="false">https://waylonwalker.com/react-headroom/</guid><pubDate>Tue, 11 Feb 2020 12:57:00 GMT</pubDate><content:encoded>&lt;p&gt;It was so easy to get a professional looking navbar with just 3 lines of code.  This package seriously is so usable on mobile it is rediculous.  I found this package from &lt;a href=&quot;https://www.gatsbyjs.org/blog/100days/react-component/?utm_campaign=100%20Days%20of%20Gatsby&amp;#x26;utm_source=hs_email&amp;#x26;utm_medium=email&amp;#x26;utm_content=82376619&amp;#x26;_hsenc=p2ANqtz-_DBh1A1A-GEy2TujddXq_H1de5wGZ_X6jIqB2wv_PE7QgUk40pfi64jbSVHv-S3bfzKZOQywtoTuup2aeO0o_KpeiF8w&amp;#x26;_hsmi=82376619&quot;&gt;day 4&lt;/a&gt; of the 100 days of gatsby challenge.  It is by the wonderful man who brought us gatsbyjs Kyle Mathews, so you know its gotta be good.&lt;/p&gt;
&lt;h2&gt;install react-headroom&lt;/h2&gt;
&lt;p&gt;installation is easy&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; i react-headroom&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Import Headroom&lt;/h2&gt;
&lt;p&gt;There was no instructions for es6 style imports that are common with gatsbyjs sites like mine, but it was intuitive to figure out.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Headroom &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;react-headroom&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Using Headroom&lt;/h2&gt;
&lt;p&gt;Simply wrap your existing content, Nav in my case, with the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;Headroom /&amp;gt;&lt;/code&gt; component and your off to the races.  The content will pop back into view when you scroll past then back up.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Headroom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;--&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;goes&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;here&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Headroom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;See it in action&lt;/h2&gt;
&lt;p&gt;I think this simple package completely changes the ux of your site on mobile.  You can get that sticky nav out of the way, but its still right there with just a little bit of a scroll up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/react-headroom-b.gif&quot; alt=&quot;showing it in action on waylonwalker.com&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here it is on &lt;a href=&quot;https://waylonwalker.com&quot;&gt;waylonwalker.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Configurable&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;react-headroom&lt;/code&gt; is configurable, but I did not find it necessary.  I really like the simplicity that it brought by just adding the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;Headroom\&amp;gt;&lt;/code&gt; component.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/react-headroom-docs.png&quot; alt=&quot;react-headroom docs&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;Check out the relavant links for more details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href=&quot;https://github.com/KyleAMathews/react-headroom&quot;&gt;https://github.com/KyleAMathews/react-headroom&lt;/a&gt;
&lt;strong&gt;Demo Site&lt;/strong&gt;: &lt;a href=&quot;https://kyleamathews.github.io/react-headroom/&quot;&gt;https://kyleamathews.github.io/react-headroom/&lt;/a&gt;
&lt;strong&gt;Docs&lt;/strong&gt;: &lt;a href=&quot;https://kyleamathews.github.io/react-headroom/&quot;&gt;https://kyleamathews.github.io/react-headroom/&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/react-headroom.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/react-headroom/.png</cover_image></item><item><title><![CDATA[Serverless things to investigate]]></title><description><![CDATA[Social Automation Zappier Free only one step is free can take rss to social Automate.io * Form submission https://getform.io/forms Free to…]]></description><link>https://waylonwalker.com/serverless-things-to-investigate/</link><guid isPermaLink="false">https://waylonwalker.com/serverless-things-to-investigate/</guid><pubDate>Mon, 10 Feb 2020 15:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Social Automation&lt;/h2&gt;
&lt;h3&gt;Zappier&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;only one step is free&lt;/li&gt;
&lt;li&gt;can take rss to social&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Automate.io&lt;/h3&gt;
&lt;p&gt;*&lt;/p&gt;
&lt;h2&gt;Form submission&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://getform.io/forms&quot; title=&quot;https://getform.io/forms&quot;&gt;https://getform.io/forms&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Free to get started&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://formkeep.com/pricing&quot; title=&quot;https://formkeep.com/pricing&quot;&gt;https://formkeep.com/pricing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Free 7 day trial $4.99 cheapest after&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/serverless-things-to-investigate.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/serverless-things-to-investigate/.png</cover_image></item><item><title><![CDATA[I finally fixed my Styled-Components in gatsby.js]]></title><description><![CDATA[I am starting a redesign of my website.  I have started cross posting to dev.to more regularly.  With that I have been making more detailed…]]></description><link>https://waylonwalker.com/fix-styled-components-in-gatsby/</link><guid isPermaLink="false">https://waylonwalker.com/fix-styled-components-in-gatsby/</guid><pubDate>Sat, 08 Feb 2020 15:07:00 GMT</pubDate><content:encoded>&lt;p&gt;I am starting a redesign of my website.  I have started cross posting to &lt;a href=&quot;https://dev.to&quot;&gt;dev.to&lt;/a&gt; more regularly.  With that I have been making more detailed cover images at the recommended &lt;code class=&quot;language-text&quot;&gt;1000x420&lt;/code&gt;.  These images get cut off on my own site, which is a bit ridiculous to have my own content not look right on my own site.  But before we start a heavy redesign I have a small issue that has plagued the site for at least a year!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have a small issue that has plagued the site for at least a year!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have been using styled components in my gatsby.js site for about a year now.  And it has been plagued by styled-components not being in the ssr causing some jank in the styles being loaded.  You can see it in the lighthouse performance report below.  It generally loads super quick, and is only caused on first load.  Anything using the gatsby &lt;code class=&quot;language-text&quot;&gt;&amp;lt;Link/&amp;gt;&lt;/code&gt; component typically is fine and unaffected by the issue.&lt;/p&gt;
&lt;h2&gt;The fix&lt;/h2&gt;
&lt;p&gt;The fix was so simple it was only 2 lines total. One to install &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-styled-components&lt;/code&gt; and one to use it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; i gatsby-plugin-styled-components&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
   &apos;gatsby-plugin-styled-components&apos;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Before&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../2020-02-06%2015-27-45_Start.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;After&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../2020-02-07%2017-20-31_Start.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Why did it take so long to Fix?&lt;/h2&gt;
&lt;p&gt;The real issue here was that I really didn&apos;t understand the problem as I described it above until I found the fix. It really did seem random that at odd times the styles would seem to vanish.  Sometimes never fully rehydrating at all.  Well actually I had fixed some production sites at work with it, but had no idea why it worked and therefore could not remember how I had fixed it, and google searched yielded no help.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../the-moment-i-realized-the-true-problem-1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;After re-watching Wes Bos&apos;s Advanced react course where he describes how to fix this issue for &lt;code class=&quot;language-text&quot;&gt;next.js&lt;/code&gt; sites it became clear that the problem was not random at all.  It was that they do not get statically rendered and are only on the page after react is re-hydrated.  The moment I realized the &lt;strong&gt;true&lt;/strong&gt; problem I knew how to google it and quickly found there was a plugin for this.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/fix-styled-components-in-gatsby.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/fix-styled-components-in-gatsby/.png</cover_image></item><item><title><![CDATA[Should I switch to Zeit Now]]></title><description><![CDATA[Netlify I have happily had my personal site waylonwalker.com hosted on netlify for nearly 2 years now.  In fact I have hosted about a dozen…]]></description><link>https://waylonwalker.com/should-i-switch-to-zeit-now/</link><guid isPermaLink="false">https://waylonwalker.com/should-i-switch-to-zeit-now/</guid><pubDate>Thu, 06 Feb 2020 22:38:00 GMT</pubDate><content:encoded>&lt;h1&gt;Netlify&lt;/h1&gt;
&lt;p&gt;I have happily had my personal site &lt;a href=&quot;https://waylonwalker.com&quot;&gt;waylonwalker.com&lt;/a&gt; hosted on netlify for nearly 2 years now.  In fact I have hosted about a dozen different toy projects to play with on there, 4 of which have gone far enough to get a custom domain name.  They are fast to deploy and consistently do so on every &lt;code class=&quot;language-text&quot;&gt;git push&lt;/code&gt; to main.&lt;/p&gt;
&lt;h2&gt;Zeit&lt;/h2&gt;
&lt;p&gt;I have recently started playing with zeit again.  I really like their cli tool, its dead simple and makes sense.  I tried the netlify one early on and dont think I really gave it much of a chance. I was able to backup a site we were modifying by saving everything locally (literally control+s) and running &lt;code class=&quot;language-text&quot;&gt;now&lt;/code&gt; in the command line.&lt;/p&gt;
&lt;p&gt;While I was on the site I realized that when switching to gatsby v2 I had deployed it to now.sh while testing, before cutting over to the updated one on netlify.  It has been building every version since without issue!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It has been building every version since without issue!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;What I am using&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;gatsby&lt;/li&gt;
&lt;li&gt;forestry.io&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am using gatsby to build my site, and I do use forestry.io as a cms to be able to edit/manage posts online.  I think forestry is part of my problem in that it has added extra builds.  Every time I upload an image or save a post, even a draft, it pushes to production.&lt;/p&gt;
&lt;h2&gt;Why Switch&lt;/h2&gt;
&lt;p&gt;This is just a side hobby for me.  I do not make any $$ off of it, and I do not want to pay for anything I do not have to.  As I am stepping up my blogging I have already hit 50% of my build quota only 1 week into the month on netlify.  I really like what netlify is doing for the JAMstack community, but I would rather build everything locally and push to GHPages for this project than have to pay for it.&lt;/p&gt;
&lt;h2&gt;What Are your suggestions&lt;/h2&gt;
&lt;p&gt;Do you use Zeit?&lt;/p&gt;
&lt;p&gt;Where do you host your gatsby.js site?&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/should-i-switch-to-zeit-now.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/should-i-switch-to-zeit-now/.png</cover_image></item><item><title><![CDATA[git push without setting upstream]]></title><description><![CDATA[Finally after years of hand typing out a full  I foudn there is a setting to automatcally push to the current branch. More realisitically I…]]></description><link>https://waylonwalker.com/git-push-without-setting-upstream/</link><guid isPermaLink="false">https://waylonwalker.com/git-push-without-setting-upstream/</guid><pubDate>Tue, 04 Feb 2020 12:18:00 GMT</pubDate><content:encoded>&lt;p&gt;Finally after years of hand typing out a full &lt;code class=&quot;language-text&quot;&gt;git push --upstream my\_really\_long\_and\_descriptive\_branch\_name&lt;/code&gt; I foudn there is a setting to automatcally push to the current branch. More realisitically I just did a &lt;code class=&quot;language-text&quot;&gt;git push&lt;/code&gt; let git yell at me, and copying the suggestion.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global push.default current&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This one setting will now &lt;code class=&quot;language-text&quot;&gt;git push&lt;/code&gt; to the current branch without yelling at you that your upstream does not match your current branch.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/git-push-without-setting-upstream.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/git-push-without-setting-upstream/.png</cover_image></item><item><title><![CDATA[Out of Space]]></title><description><![CDATA[This morning I logged into my machine and was nearly out of space 64GB miniconda3! 5GB conda cache 4GM pip cache 34GB docker Find it Looking…]]></description><link>https://waylonwalker.com/out-of-space/</link><guid isPermaLink="false">https://waylonwalker.com/out-of-space/</guid><pubDate>Sat, 01 Feb 2020 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This morning I logged into my machine and was nearly out of space&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;64GB miniconda3!&lt;/li&gt;
&lt;li&gt;5GB conda cache&lt;/li&gt;
&lt;li&gt;4GM pip cache&lt;/li&gt;
&lt;li&gt;34GB docker&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Find it&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--0LE2KZJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/je7pxcagfs7m23p98kck.jpg&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--0LE2KZJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/je7pxcagfs7m23p98kck.jpg&quot; alt=&quot;Looking for big files when the weeds are too tall&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@simonmigaj?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Simon Migaj&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/find?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These are the commands that I often use to reclaim space.  Its so easy to fill up small vm&apos;s in the cloud, or in my case today let your dev machine go way too long without a good cleanup.&lt;/p&gt;
&lt;h3&gt;Show Remaining Space on Drives&lt;/h3&gt;
&lt;p&gt;This shows us where to start and gives a baseline of how much space we have reclaimed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;df&lt;/span&gt; -h&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;show largest files in current directory&lt;/h3&gt;
&lt;p&gt;Next keep drilling into directories that are big and running this command to see whats big inside of it.  When you find somethign that you are willing to part with &lt;code class=&quot;language-text&quot;&gt;rm -rf &amp;lt;directory&amp;gt;&lt;/code&gt; it and check &lt;code class=&quot;language-text&quot;&gt;df -h&lt;/code&gt; to see if you have enough reclaimed yet.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;du&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; -h --max-depth&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Honestly I rarely bother unless the directory is in the GB&apos;s of space.  A super simple filter for that is to just grep for G.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;du&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; -h --max-depth&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; G&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;conda&lt;/h2&gt;
&lt;h3&gt;How Many?&lt;/h3&gt;
&lt;p&gt;As a first baseline lets see how many enviroments we are starting with. I started with 71. Yeah I have had this machine for 2 years, and dont regularly remove them.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tail&lt;/span&gt; -n +2 &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; -l&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;bash&lt;/p&gt;
&lt;h3&gt;Lets batch it out!&lt;/h3&gt;
&lt;p&gt;We are devs here surely we can automate this issue! The following four lines will generate a list of existing conda environments, edit them with vim, remove the remaining ones, then remove the text file we created to remove from.&lt;/p&gt;
&lt;p&gt;Make sure that you only keep names of environments that you want to &lt;strong&gt;remove&lt;/strong&gt; in &lt;code class=&quot;language-text&quot;&gt;conda_envs_to_remove.txt&lt;/code&gt; and delete the environment names you want to keep.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tail&lt;/span&gt; -n +2 &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&apos; &apos;&lt;/span&gt; -f1 &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; conda_envs_to_remove.txt
&lt;span class=&quot;token function&quot;&gt;vim&lt;/span&gt; conda_envs_to_remove.txt
&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; ~/.conda_envs_remove &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&lt;span class=&quot;token entity&quot; title=&quot;\n&quot;&gt;\n&lt;/span&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&lt;span class=&quot;token entity&quot; title=&quot;\0&quot;&gt;\0&lt;/span&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; -l -0 conda remove --all -y -n
&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; conda_envs_to_remove.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;📝 Side note&lt;/h3&gt;
&lt;p&gt;When I am creating one of these complicated bash pipelines including xargs I generally print out the command first and make sure that it does what I want. The following command will test the above script before doing dangerous things!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; ~/.conda_envs_remove &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&lt;span class=&quot;token entity&quot; title=&quot;\n&quot;&gt;\n&lt;/span&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&lt;span class=&quot;token entity&quot; title=&quot;\0&quot;&gt;\0&lt;/span&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; -l -0 &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;conda remove --all -y -n &quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Cache&lt;/h2&gt;
&lt;p&gt;If your feeling really strained for space, you can &lt;code class=&quot;language-text&quot;&gt;rm -rf ~/.cache&lt;/code&gt;. Personally I like the improved speed of installing everything... obviously I install a lot of new environments.&lt;/p&gt;
&lt;h2&gt;Docker&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--W4NWBxYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/olcef3lh31dtrwa51u7g.jpg&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--W4NWBxYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/olcef3lh31dtrwa51u7g.jpg&quot; alt=&quot;Alt Text&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@henry_be?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Henry Be&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/dark-fire?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For more information read this article, &lt;a href=&quot;https://docs.docker.com/config/pruning/&quot; title=&quot;https://docs.docker.com/config/pruning/&quot;&gt;https://docs.docker.com/config/pruning/&lt;/a&gt;. I have all of the images that I want pushed remotely so I just dumped everything with the following command.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;docker system prune
docker system prune --volumes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running these two sets of commands cleared up about &lt;strong&gt;70GB&lt;/strong&gt; of space for me with very little effort on my behalf. I hope others find the first command helpful to batch remove many conda environments at once.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/out-of-space.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/out-of-space/.png</cover_image></item><item><title><![CDATA[Personal URL shortener with Netlify Redirects]]></title><description><![CDATA[Photo by Ozark Drones on Unsplash I love using URL shorteners to easily share links without hitting character limits, but they loose their…]]></description><link>https://waylonwalker.com/personal-url-shortener/</link><guid isPermaLink="false">https://waylonwalker.com/personal-url-shortener/</guid><pubDate>Wed, 29 Jan 2020 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@ozarkdrones?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Ozark Drones&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/uturn?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I love using URL shorteners to easily share links without hitting character limits, but they loose their meaning. Services like bit.ly will save my links for me so that I can find them, but I would rather them to be easy to remember. &lt;a href=&quot;https://bit.ly/2ruLwQz&quot; title=&quot;https://bit.ly/2ruLwQz&quot;&gt;https://bit.ly/2ruLwQz&lt;/a&gt; does not roll of the tongue so well.&lt;/p&gt;
&lt;h1&gt;301 🤸‍♀️&lt;/h1&gt;
&lt;p&gt;I recently discovered a really cool feature of netlify that I have always looked past, &lt;code class=&quot;language-text&quot;&gt;_redirects&lt;/code&gt;. It is so simple cool and powerful, every netlify site should do this!&lt;/p&gt;
&lt;h1&gt;But how 🤷‍♀️&lt;/h1&gt;
&lt;p&gt;simply add a &lt;code class=&quot;language-text&quot;&gt;_redirects&lt;/code&gt; file to the root of your your published site with the following format. The trick I found with my gatsby site was that it needed to be in my static directory &lt;code class=&quot;language-text&quot;&gt;/static/_redirects&lt;/code&gt;, not root. Next you just put space separated links on separate lines. #&apos;s can be used for comments.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;#&lt;/span&gt; netlify redirects&lt;/span&gt;
&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;#&lt;/span&gt; from_url to_url&lt;/span&gt;

&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;#&lt;/span&gt; Short-Blog&lt;/span&gt;

/blog/scli         /blog/simple-click/
/blog/cmdt         /blog/cmd-exe-tips/
.
.
.


&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;#&lt;/span&gt; splats&lt;/span&gt;

/b&lt;span class=&quot;token italic&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;             /blog/:splat
/n&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;*&lt;/span&gt;&lt;/span&gt;             /notes/:splat


&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;#&lt;/span&gt; External&lt;/span&gt;

/twitter        https://twitter.com/_WaylonWalker
/github         https://github.com/WaylonWalker
/devto          https://dev.to/waylonwalker/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;🙌 Share those short links&lt;/h1&gt;
&lt;p&gt;Now with shorter links we have more space for our content without needing to use a service like bit.ly that makes our links unreadable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../static/URL%20shortener.png&quot; alt=&quot;url shortener&quot;&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/personal-url-shortener.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/personal-url-shortener/.png</cover_image></item><item><title><![CDATA[simple click]]></title><description><![CDATA[cli tools are super handy and easy to add to your python libraries to supercharge them. Even if your library is not a cli tool there are a…]]></description><link>https://waylonwalker.com/simple-click/</link><guid isPermaLink="false">https://waylonwalker.com/simple-click/</guid><pubDate>Wed, 29 Jan 2020 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;cli tools are super handy and easy to add to your python libraries to supercharge them. Even if your library is not a cli tool there are a number of things that a cli can do to your library.&lt;/p&gt;
&lt;h1&gt;Example Ideas&lt;/h1&gt;
&lt;p&gt;Things a cli can do to enhance your library.&lt;/p&gt;
&lt;p&gt;🆚 print version
🕶 print readme
📝 print changelog
📃 print config
✏ change config
👩‍🎓 run a tutorial
🏗 scaffold a project with cookiecutter&lt;/p&gt;
&lt;h1&gt;🖱 &lt;a href=&quot;https://click.palletsprojects.com/&quot;&gt;Click&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://click.palletsprojects.com/&quot;&gt;Click&lt;/a&gt; is the most popular python cli tool framework for python. There are others, some old, some new comers that make take the crown. For now &lt;a href=&quot;https://click.palletsprojects.com/&quot;&gt;Click&lt;/a&gt; is the gold standard if you want to make a powerful cli quickly. If you are dependency conscious and dont need a lot of tooling, use &lt;a href=&quot;https://docs.python.org/3/library/argparse.html&quot;&gt;argparse&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Project Structure&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.
├── setup.py
└── simple_click
    ├── cli.py
    └── __init__.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;❯ cli.py&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;# simple_click/cli.py&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; click

    __version__ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;group&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;pass&lt;/span&gt;

    &lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@cli&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;command&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;prints project version&quot;&quot;&quot;&lt;/span&gt;
        click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;echo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__version__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; __name__ &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;__main__&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        cli&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;✨ &lt;strong&gt;init&lt;/strong&gt;.py&lt;/h1&gt;
&lt;p&gt;For our simple&lt;em&gt;click library &lt;code class=&quot;language-text&quot;&gt;__init__.py__&lt;/code&gt; can be left empty. It is here purely to signify that simple&lt;/em&gt;click is a library. It is likely that you will import other modules here that need to reside at the top level of your library api, your cli does not need to be at the top of of your api.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;# __init__.py&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;🚪 Entry Points&lt;/h1&gt;
&lt;p&gt;Entry points are the magic that make python cli tools available as their own command without having python before it or the file extension.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;# setup.py&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; setuptools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; setup&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; find_packages

    &lt;span class=&quot;token comment&quot;&gt;# this is the 🥩 meat of this snippet&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# simple_click is the command name&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# = simple_click is the library name&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# .cli is the cli.py file&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# :cli is the cli function&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# the second item is a shorthand alias to the main command&lt;/span&gt;

    entry_points &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
       &lt;span class=&quot;token string&quot;&gt;&quot;simple_click = simple_click.cli:cli&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;token string&quot;&gt;&quot;scli         = simple_click.cli:cli&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;


    setup&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;simple_click&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        version&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;1.0.0&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://github.com/mypackage.git&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        packages&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;find_packages&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        entry_points&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;console_scripts&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; entry_points&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;🕶 See it in action&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--RiG3kZsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4zrhvj5yjzyk63np91g9.gif&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--RiG3kZsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4zrhvj5yjzyk63np91g9.gif&quot; alt=&quot;See it in action&quot; title=&quot;See it in action&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;📢 Discuss&lt;/h1&gt;
&lt;p&gt;What do You wish more python libraries included in their cli?  &lt;a href=&quot;https://twitter.com/intent/tweet?text=@_waylonwalker%20More%20libraries%20should%20...%0A%0Awaylonwalker.com/b/scli&quot;&gt;Tweet it @_waylonwalker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://twitter.com/intent/tweet?text=@_waylonwalker%20More%20libraries%20should%20...%0A%0Awaylonwalker.com/b/scli&quot; alt=&quot;Tweet it @_waylonwalker&quot;&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/simple-click.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/simple-click/.png</cover_image></item><item><title><![CDATA[cmd.exe tips]]></title><description><![CDATA[I spend a lot of my time at the terminal for my daily work, mostly in Linux or wsl.  One big reason for using wsl over cmd.exe is the ease…]]></description><link>https://waylonwalker.com/cmd-exe-tips/</link><guid isPermaLink="false">https://waylonwalker.com/cmd-exe-tips/</guid><pubDate>Thu, 23 Jan 2020 15:18:45 GMT</pubDate><content:encoded>&lt;p&gt;I spend a lot of my time at the terminal for my daily work, mostly in Linux or wsl.  One big reason for using wsl over cmd.exe is the ease of walking through history that fzf provides.  This week we had a windows bug in a cli and I was stuck in vanilla cmd.exe 😭&lt;/p&gt;
&lt;h2&gt;&gt; Cmder&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../main.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;First off if you are stuck using cmd.exe, do yourself a favor and get cmder.  It makes life just a bit easier.  It is super confugurable and comes with several power ups that make it a bit more enjoyable than cmd.exe.&lt;/p&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;F7&lt;/strong&gt; - Scroll through history&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;F8&lt;/strong&gt; - Search history based&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../cmd_exe_history_2.gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;.bat&lt;/h2&gt;
&lt;p&gt;The next simple technique is to save your commands into a .bat file. Any valid command ran with cmd.exe can be saved into a bat file and called again later by running it in the terminal.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;save your command&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;use f7/f8 to get your command back add &lt;code class=&quot;language-text&quot;&gt;&amp;gt; filename.bat&lt;/code&gt; at the end, hit the home key and add echo to the front.  &lt;strong&gt;Do not&lt;/strong&gt; wrap with quotes.  This is not bash.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; python cmd_example.py &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; cmd_example.bat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&gt;&gt; append&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; python cmd_example2.py &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; cmd_example.bat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;type not cat&lt;/h2&gt;
&lt;p&gt;To ensure that you got the command right... and didn&apos;t forget that you were in cmd.exe instead of bash and add quotes. you will want to see the file contents. For this reach for &lt;strong&gt;type&lt;/strong&gt; not &lt;strong&gt;cat&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;type&lt;/span&gt; cmd_example.bat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;results&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;python cmd_example.py
python cmd_example2.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Your quick tips&lt;/h2&gt;
&lt;p&gt;let me know what quick cmd.exe tips you have.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=@waylonwalker%20my%20favorite%20cmd.exe%20tip%20is%20...%20https%3A//waylonwalker.com/blog/cmd-exe-tips/&quot; title=&quot;tweet your tip&quot;&gt;&lt;img src=&quot;../../2020-01-27%2006-32-34_Microsoft%20Text%20Input%20Application.png&quot; alt=&quot;tweet your tip&quot; title=&quot;tweet your tip&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/cmd-exe-tips.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/cmd-exe-tips/.png</cover_image></item><item><title><![CDATA[What is something that you recently learned that you wish you would have learned or understood earlier?]]></title><description><![CDATA[Cover Photo I call gaining clarity by David Travis on Unsplash Mine is the python debugger. I was a long holdout thinking that print…]]></description><link>https://waylonwalker.com/learn-early/</link><guid isPermaLink="false">https://waylonwalker.com/learn-early/</guid><pubDate>Fri, 10 Jan 2020 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Cover Photo I call &lt;strong&gt;gaining clarity&lt;/strong&gt; by &lt;a href=&quot;https://unsplash.com/@dtravisphd?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;David Travis&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/clarity?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Mine is the python debugger. I was a long holdout thinking that print statements were sufficient. That was untill I started having errors crop up in functions that took minutes to run. The thing that I most notably wish I would have known about is post_mortem.&lt;/p&gt;
&lt;h1&gt;Example&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[ins] In [4]: def repeater(msg, repeats=1):
         ...:     &amp;quot;repeats messages {repeats} number of times&amp;quot;
         ...:     print(f&amp;#39;{msg}\n&amp;#39; * repeats)

[ins] In [5]: repeater(&amp;#39;hi&amp;#39;, 3)
hi
hi
hi

[ins] In [6]: repeater(&amp;#39;hi&amp;#39;, &amp;#39;a&amp;#39;)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-6-0ec595774c81&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 repeater(&amp;#39;hi&amp;#39;, &amp;#39;a&amp;#39;)

&amp;lt;ipython-input-4-530890de75cd&amp;gt; in repeater(msg, repeats)
      1 def repeater(msg, repeats=1):
      2     &amp;quot;repeats messages {repeats} number of times&amp;quot;
----&amp;gt; 3     print(f&amp;#39;{msg}\n&amp;#39; * repeats)
      4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Debug with iPython/Jupyter&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;%debug&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Vanilla Debug&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import pdb
import sys

pdb.post_mortem(sys.last_traceback)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;More&lt;/h1&gt;
&lt;p&gt;For more information about the debugger checkout the real python article. &lt;a href=&quot;https://realpython.com/python-debugging-pdb/&quot; title=&quot;https://realpython.com/python-debugging-pdb/&quot;&gt;https://realpython.com/python-debugging-pdb/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also keep a bookmark of the table of pdb commands from the article &lt;a href=&quot;https://realpython.com/python-debugging-pdb/#essential-pdb-commands&quot; title=&quot;https://realpython.com/python-debugging-pdb/#essential-pdb-commands&quot;&gt;https://realpython.com/python-debugging-pdb/#essential-pdb-commands&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Debug Session&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--ShQ3NN06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/1tnri6wdwimwk7i83cvg.png&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--ShQ3NN06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/1tnri6wdwimwk7i83cvg.png&quot; alt=&quot;debug session&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/learn-early.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/learn-early/.png</cover_image></item><item><title><![CDATA[Supercharge Zsh Startup]]></title><description><![CDATA[Photo by Max LaRochelle on Unsplash I have been using oh-my-zsh successfully for about 2 years now. But lately my startup time has been…]]></description><link>https://waylonwalker.com/supercharge-zsh-startup/</link><guid isPermaLink="false">https://waylonwalker.com/supercharge-zsh-startup/</guid><pubDate>Fri, 03 Jan 2020 06:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@maxlarochelle?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Max LaRochelle&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/lightning?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have been using oh-my-zsh successfully for about 2 years now. But lately my startup time has been really bothersome. It has grown to the point where it was taking about &lt;strong&gt;5.5s&lt;/strong&gt; to startup a shell!  This is ok if I am going to spend some time in here for awhile and do some work that benefits from all of the autocompletions, plugins, and shortcuts that oh-my-zsh brings.  But to only jump in to run a handful of commands is infuriating.&lt;/p&gt;
&lt;h3&gt;📑 My Setup&lt;/h3&gt;
&lt;p&gt;I believe the real issue is io speed on wsl.  I have some remote servers with similar configs that are 10x faster or more, loading in 100s of milliseconds rather than seconds.  Sourcing all of the individual plugin files are just too much for it.&lt;/p&gt;
&lt;h2&gt;💨 How Fast can it be&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Quick side note: your zsh config is controled by your ~/.zshrc file.  This file can source other files, load plugins, or run literally anything.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Time the &lt;strong&gt;initial&lt;/strong&gt; time&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;zsh&lt;/span&gt; -c &lt;span class=&quot;token builtin class-name&quot;&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Move your &lt;strong&gt;~/.zshrc&lt;/strong&gt; config file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; ~/.zshrc ~/.zshrc-back&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time the fastest startup possible with nothing in your &lt;strong&gt;~/.zshrc&lt;/strong&gt; config file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;zsh&lt;/span&gt; -c &lt;span class=&quot;token builtin class-name&quot;&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Move your &lt;strong&gt;~/.zshrc&lt;/strong&gt; back&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; ~/.zshrc-back ~/.zshrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;🕵️‍♂️Profile your startup time&lt;/h2&gt;
&lt;p&gt;It is possible to profile your zsh startup time by adding &lt;code class=&quot;language-text&quot;&gt;zmodload zsh/zprof&lt;/code&gt; to the start of your &lt;code class=&quot;language-text&quot;&gt;~/.zshrc&lt;/code&gt; file and &lt;code class=&quot;language-text&quot;&gt;zprof&lt;/code&gt; at the end.  This was unsuccessfull for me.  I ended up just backing up &lt;code class=&quot;language-text&quot;&gt;~/.zshrc&lt;/code&gt; file, then deleting half of it to see where the hot spots were.  I found that two places that were really hot for me.  One I was inadvertantly setting git and npm settings everytime that didnt need to be set everytime.  That was an easy 2s gain.  Another easy 3s gain was removing oh-my-zsh.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ~/.zshrc&lt;/span&gt;
zmodload zsh/zprof
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
zprof&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;😭But I really like oh-my-zsh&lt;/h2&gt;
&lt;p&gt;without all the bells and whistle that oh-my-zsh provided zsh became lightning fast to load, but incredibly boring.  It was also very painful to manually type out everything that it autocompleted or aliased all the time.  Next I headed down a path to get all of that functionality back without sacrificing load time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Without oh-my-zsh, zsh became incredibly boring.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;🔌 Plugin Managers&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../static/steve-johnson-ZUabNmumOcA-unsplash.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@steve_j?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Steve Johnson&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/plug?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;oh-my-zsh&lt;/li&gt;
&lt;li&gt;zplugin&lt;/li&gt;
&lt;li&gt;zgen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a number of plugin managers for zsh, I tried each of the ones listed above, but found that as I approached a nice setup that I liked the load time would creep up &lt;strong&gt;above the 2s&lt;/strong&gt; &lt;strong&gt;mark&lt;/strong&gt; each time. I would turn certain plugins on and off, try different plugin managers, before realizing that I had spent enough time on this problem and it was going to be time to settle on fast startup or functionality.&lt;/p&gt;
&lt;h2&gt;⚖ Finding Balance&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Semi-lazy loading&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../static/jeppe-hove-jensen-b3eaH1hguOA-unsplash.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Photo by Jeppe Hove Jensen on &lt;a href=&quot;https://unsplash.com/s/photos/balance?utm_source=unsplash&amp;#x26;utm_medium=referral&amp;#x26;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After struggling to get all of the features I wanted with a fast load time, I decided to only load what I needed upon startup.  Next I created a simple alias that loads in zgen and all of the plugins I want. By doing this I get two main benefits.  Obviously I get a faster starup time by loading less.  I got my startup time down to about 0.25s.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ~/.zshrc&lt;/span&gt;
&lt;span class=&quot;token function-name function&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
zgen load zsh-users/zsh-autosuggestions
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;⚡ Fast Loading&lt;/h3&gt;
&lt;p&gt;I really like the fast startup time, because sometimes I am only loading up zsh to run a handful of commands that dont need much in the way of plugins&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;simple commands that need 💨 blazing start speed&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;any single easy to type command, these are my common commands that I will open a terminal in my editor and just need to run quick.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;git add . &amp;#x26;&amp;#x26; git commit &amp;#x26;&amp;#x26; git push&lt;/li&gt;
&lt;li&gt;sh my_script.sh&lt;/li&gt;
&lt;li&gt;make build&lt;/li&gt;
&lt;li&gt;bake build&lt;/li&gt;
&lt;li&gt;pytest&lt;/li&gt;
&lt;li&gt;gatsby develop&lt;/li&gt;
&lt;li&gt;npm i&lt;/li&gt;
&lt;li&gt;npm update&lt;/li&gt;
&lt;li&gt;pip install&lt;/li&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second benefit was that I can continue typing while plugins are loading.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../static/type-while-loading-plugins.gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;&gt;Prompt&lt;/h2&gt;
&lt;p&gt;After removing oh-my-zsh the first thing that I missed was the themes that it provided.  I went through a number of them and the one that seemed to have the smallest effect on performance and everything I needed was &lt;a href=&quot;https://starship.rs/&quot;&gt;starship&lt;/a&gt;.  It&apos;s a really fast prompt written in rust.  The biggest thing that I needed to have that other prompts were misssing was conda environments.  I live much of my work life running python from various conda environments and it is crutial that I can see what environment I am in at all times.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../static/2020-01-04%2012-36-31_Cortana.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;💰 Bonus&lt;/h2&gt;
&lt;p&gt;I applied the same logic to neovim and achieved similar results.  Again it just had too many plugins loading on startup for simple tasks.  I ended up taking a shortcut and load any heavy plugins upon NerdTreeToggle.  I dont really use NERDTree that much, but when I do its for more than just a quick edit.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ~/.config/nvim/init.vim&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
Plug &lt;span class=&quot;token string&quot;&gt;&apos;valloric/youcompleteme&apos;&lt;/span&gt;, &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;do&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;./install.py&apos;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;on&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;NERDTreeToggle&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/supercharge-zsh-startup.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/supercharge-zsh-startup/.png</cover_image></item><item><title><![CDATA[Keep Location List Closed]]></title><description><![CDATA[Vim's (neovim in my case) location list can provide some very useful information while developing.  Mine gives me information about linting…]]></description><link>https://waylonwalker.com/keep-location-list-closed/</link><guid isPermaLink="false">https://waylonwalker.com/keep-location-list-closed/</guid><pubDate>Wed, 01 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Vim&apos;s (neovim in my case) location list can provide some very useful information while developing.  Mine gives me information about linting and type checking errors with fairly little config.  Generally, it sits nicely at the bottom of the screen and barely affects me.  Other times, especially while zoomed way in during a presentation, it just gets in the way.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://waylonwalker.com/location-list-eats-screen.png&quot; alt=&quot;location list eats the screen&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Location List eating up the screen while I am zoomed in and trying to live code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Toggling the location list&lt;/h2&gt;
&lt;p&gt;Through some google search I found the culprit was syntastic.  It has an &lt;code class=&quot;language-text&quot;&gt;auto_loc_list&lt;/code&gt; feature.  We can turn it off by setting
&lt;code class=&quot;language-text&quot;&gt;syntastic_auto_loc_list=0&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; syntastic_auto_loc_list&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Keybindings&lt;/h2&gt;
&lt;p&gt;I want to keep the location list open automatically most of the time, but when I don&apos;t want it to keep opening it&apos;s generally detrimental.  Trying to live code while the location list keeps taking up the whole screen is not cool.&lt;/p&gt;
&lt;p&gt;First, create a function that will toggle both the location list and syntactic together.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;syntastic_auto_loc_list &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToggleLocationList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;syntastic_auto_loc_list &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;syntastic_auto_loc_list &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; syntastic_auto_loc_list &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lclose&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;syntastic_auto_loc_list &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; syntastic_auto_loc_list &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lopen&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;endfunction&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This binding will allow me to use &lt;code class=&quot;language-text&quot;&gt;gtl&lt;/code&gt; from normal mode to toggle the location list.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;command&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; ToggleLocationList &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;call&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToggleLocationList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
nnoremap &lt;span class=&quot;token builtin&quot;&gt;gtl&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;ToggleLocationList&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I am starting a set of &lt;strong&gt;toggle&lt;/strong&gt; keymaps under the &lt;code class=&quot;language-text&quot;&gt;gt&lt;/code&gt; keybinding, this one is the second one after a keybinding made to toggle paste mode.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/keep-location-list-closed.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/keep-location-list-closed/.png</cover_image></item><item><title><![CDATA[SqlAlchemy Models]]></title><description><![CDATA[Make a connection Make a session Make a Base Class Make your First Model Make your own Base Class to inherit From Use the Custom Base Class]]></description><link>https://waylonwalker.com/sqlalchemy-models/</link><guid isPermaLink="false">https://waylonwalker.com/sqlalchemy-models/</guid><pubDate>Sat, 21 Dec 2019 05:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Make a connection&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; sqlalchemy &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; create_engine
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_engine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; create_engine&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;sqlite:///mode_examples.sqlite&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Make a session&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; sqlalchemy&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;orm &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; sessionmaker
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_session&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    con &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_engine&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    Base&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; con
    Base&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;create_all&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    Session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sessionmaker&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bind&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;con&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Session&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; session&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Make a Base Class&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; sqlalchemy&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;declarative &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; declarative_base
Base &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; declarative_base&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Base&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_engine&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Make your First Model&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Base&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    __tablename__ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;users&quot;&lt;/span&gt;
    username &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Column&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;username&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Text&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    firstname &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Column&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;firstname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Text&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    lastname &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Column&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;lastname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Text&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Make your own Base Class to inherit From&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyBaseHelper&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; k&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; v &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__dict__&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; k&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;_&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;attrs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; attrs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;hasattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;token builtin&quot;&gt;setattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Use the Custom Base Class&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Base&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; MyBaseHelper&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    __tablename__ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;users&quot;&lt;/span&gt;
    username &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Column&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;username&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Text&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    firstname &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Column&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;firstname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Text&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    lastname &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Column&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;lastname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Text&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/sqlalchemy-models.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/sqlalchemy-models/.png</cover_image></item><item><title><![CDATA[Building Cli apps in Python]]></title><description><![CDATA[Packages Click Inputs Click primarily takes two forms of inputs Options and arguments.  I think of options as keyword argument and arguments…]]></description><link>https://waylonwalker.com/building-cli-apps-in-python/</link><guid isPermaLink="false">https://waylonwalker.com/building-cli-apps-in-python/</guid><pubDate>Mon, 11 Nov 2019 06:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Packages&lt;/h2&gt;
&lt;h2&gt;&lt;a href=&quot;https://click.palletsprojects.com/en/7.x/&quot; title=&quot;Click&quot;&gt;Click&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Inputs&lt;/h3&gt;
&lt;p&gt;Click primarily takes two forms of inputs Options and arguments.  I think of options as keyword argument and arguments as regular positional arguments.&lt;/p&gt;
&lt;h4&gt;Option&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;typically aliased with a shorthand (&apos;-v&apos;, &apos;--verbose&apos;)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;**From the &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/options/&quot;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get the Python argument name, the chosen name is converted to lower case, up to two dashes are removed as the prefix, and other dashes are converted to underscores.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;command&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;-s&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;--string-to-echo&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string_to_echo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;echo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string_to_echo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;command&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;-s&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;--string-to-echo&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;string&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    click&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;echo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;Argument&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;positional&lt;/li&gt;
&lt;li&gt;required&lt;/li&gt;
&lt;li&gt;no help text supplied by click&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;https://pypi.org/project/yaspin/&quot; title=&quot;Yaspin&quot;&gt;Yaspin&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://warehouse-camo.cmh1.psfhosted.org/1bf73e6062750b03a63648f4cab5147b82e4be97/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f64656d6f2e676966&quot; alt=&quot;Yaspin Gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/click-contrib/click-help-colors&quot;&gt;Click Help Colors&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/r-m-n/click-help-colors/master/examples/1.png&quot; alt=&quot;Click Help Colors Example&quot;&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/tartley/colorama&quot; title=&quot;colorama&quot;&gt;Colorama&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tartley/colorama/raw/master/screenshots/ubuntu-demo.png&quot;&gt;Colorama Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/click-contrib/click-didyoumean&quot;&gt;Click DidYouMean&lt;/a&gt;&lt;/h3&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/building-cli-apps-in-python.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/building-cli-apps-in-python/.png</cover_image></item><item><title><![CDATA[Kedro]]></title><description><![CDATA[#kedrotips I am tweeting out most of these snippets as I add them, you can find them all here #kedrotips. 🗣 Heads up Below are some quick…]]></description><link>https://waylonwalker.com/kedro/</link><guid isPermaLink="false">https://waylonwalker.com/kedro/</guid><pubDate>Sat, 02 Nov 2019 05:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;&lt;a href=&quot;https://twitter.com/search?q=%23kedrotips&amp;#x26;f=live&quot;&gt;#kedrotips&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I am tweeting out most of these snippets as I add them, you can find them all here &lt;a href=&quot;https://twitter.com/search?q=%23kedrotips&quot;&gt;#kedrotips&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;🗣 Heads up&lt;/h1&gt;
&lt;p&gt;Below are some quick snippets/notes for when using kedro to build data pipelines. So far I am just compiling snippets. Eventually I will create several posts on kedro. These are mostly things that I use In my everyday with kedro. Some are a bit more essoteric. Some are helpful when writing production code, some are useful more usefule for exploration.&lt;/p&gt;
&lt;h2&gt;📚 Catalog&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../jesse-orrico-h6xNSDlgciU-unsplash.jpg&quot; alt=&quot;catalogs&quot;&gt;
&lt;em&gt;Photo by jesse orrico on Unsplash&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;CSVLocalDataSet&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;python&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

data_set &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; CSVLocalDataSet&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;test.csv&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                                 load_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                                 save_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;index&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
reloaded_iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;yaml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;test_data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; CSVLocalDataset
   &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test.csv
   &lt;span class=&quot;token key atrule&quot;&gt;load_args&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; None
   &lt;span class=&quot;token key atrule&quot;&gt;save_args&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;False&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;CSVHTTPDataSet&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;cities &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; CSVHTTPDataSet&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    fileurl&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    auth&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    load_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;cities&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; CSVHTTPDataSet
    &lt;span class=&quot;token key atrule&quot;&gt;fileurl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//people.sc.fsu.edu/~jburkardt/data/csv/cities.csv
    &lt;span class=&quot;token key atrule&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; None
    &lt;span class=&quot;token key atrule&quot;&gt;load_args&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; None&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;HDFLocalDataSet&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; HDFLocalDataSet

iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
iris_data_set &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; HDFLocalDataSet&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;iris.hdf&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                           key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;test_hdf_key&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                           load_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                           save_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
reloaded_iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HDFLocalDataSet
   &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test.hdf
   &lt;span class=&quot;token key atrule&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test_hdf_key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;HDFS3LocalDataSet&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; HDFS3DataSet

iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
iris_data_set &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; HDFS3DataSet&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;iris.hdf&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        bucket_name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;bucket-us-west-1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;test_hdf_key&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        load_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        save_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
reloaded_iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HDFS3DataSet
   &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; cars.hdf
   &lt;span class=&quot;token key atrule&quot;&gt;bucket_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bucket&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;us&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;west&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
   &lt;span class=&quot;token key atrule&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test_hdf_key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;JSONLocalDataSet&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; JSONLocalDataSet

iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
cars &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; JSONLocalDataSet&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filepath&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;iris.json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        load_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        save_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
reloaded_iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; JSONLocalDataSet
   &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; iris.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;ParquetLocalDataSet&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; ParquetLocalDataSet

iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_csv&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

iris_data_set &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ParquetLocalDataSet&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;iris&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                           engine&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;auto&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                           load_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                           save_args&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                           version&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
reloaded_iris &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; iris_data_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; JSONLocalDataSet
   &lt;span class=&quot;token key atrule&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; cars&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PickleS3DataSet&lt;/p&gt;
&lt;p&gt;SQLTableDataSet&lt;/p&gt;
&lt;p&gt;SQLQueryDataSet&lt;/p&gt;
&lt;p&gt;TextLocalDataSet&lt;/p&gt;
&lt;p&gt;ExcelLocalDataSet&lt;/p&gt;
&lt;h2&gt;⏳ Loading Data&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../battlecreek-coffee-roasters-eg6OUchGCsw-unsplash.jpg&quot; alt=&quot;loading data&quot;&gt;
&lt;em&gt;Photo by Battlecreek Coffee Roasters on Unsplash&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Simple Loading&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;df &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;list all datasets&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Saving Data&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cars&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;🔍 Finding data&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;simple keyword search&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;raw&apos;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;data &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; data &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; query &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href=&quot;https://twitter.com/_WaylonWalker/status/1197130980659732480?s=20&quot;&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;multi keyword serch&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;raw sales&apos;&lt;/span&gt;
data_sets &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; word &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; query&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
	data_sets &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
       data
       &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; data &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data_sets
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; query &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data
       &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href=&quot;https://twitter.com/_WaylonWalker/status/1197528461587419139?s=20&quot;&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;🐒 monkey patch it&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;search_terms&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
     data_sets &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; search &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; search_terms&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
         data_sets &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
         data
         &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; data &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data_sets
         &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; search &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data
         &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
     &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; data_sets

catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; query&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;see on [#kedrotips](&lt;a href=&quot;https://twitter.com/&quot;&gt;https://twitter.com/&lt;/a&gt;&lt;/em&gt;WaylonWalker/status/1197855759507300352?s=20)&lt;/p&gt;
&lt;h3&gt;🤙 YOLO&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;You Only Load Once&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;simple&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; d &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
        catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c_pri&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;more refined&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   d&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; d &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c_pri&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;🍷 refined like a fine wine&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; types &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; SimpleNamespace
data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; SimpleNamespace&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   d&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; d &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c_pri&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;🧀 Make it a function&lt;/strong&gt;
&lt;em&gt;getting funcy&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; types &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; SimpleNamespace

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;yolo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;search_terms&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;you only load once
   using query method from previous tip&quot;&quot;&quot;&lt;/span&gt;
   data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; SimpleNamespace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
       d&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; d &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;search_terms&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; data

all_pri &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; yolo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c_pri&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;🐒 monkey patch it&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; functools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; partial

catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;yolo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; yolo
catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;yolo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__doc__ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;you only load once&quot;&lt;/span&gt;

all_pri &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; catalog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;yolo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c_pri&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;adding catalogs together&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; DataCatalog
DataCatalog&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;cat1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__dict__&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;_data_sets&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;cat2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__dict__&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;_data_sets&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;🛢 Building pipelines&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../roman-pentin-T5QT2bmiD4E-unsplash.jpg&quot; alt=&quot;building pipelines&quot;&gt;
&lt;em&gt;Photo by roman pentin on Unsplash&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;📍 Creating Nodes&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node
node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dropna&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw_cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;int_cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; node

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;drop_columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;df&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;columns&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; column &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; columns&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      df &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; df&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;drop&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;columns&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;column&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; df

node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; drop_columns&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;vs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;am&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gear&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;carb&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   inputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;int_cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   outputs&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;pri_cars&apos;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;🛢 Creating a pipeline&lt;/h3&gt;
&lt;h3&gt;Don&apos;t be so verbose&lt;/h3&gt;
&lt;p&gt;Create similar nodes dynamically&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;halve_dataframe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; List&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot; splits a dataframe in half &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array_split&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
datasets &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
   &lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;trucks&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;boats&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;motorcycles&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;planes&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;token string&quot;&gt;&apos;ships&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;busses&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;trains&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;subways&apos;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# creates a pipeline node for every dataset in the datasets list&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; dataset &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; datasets
   nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
       node&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;halve_dataframe&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;e_modin_{dataset}&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;train_{dataset}&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;test_{dataset}&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;🏃‍♂️ Running Pipelines&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../rodion-kutsaev-xNdPWGJ6UCQ-unsplash.jpg&quot; alt=&quot;running pipelines&quot;&gt;
&lt;em&gt;Photo by Rodion Kutsaev on Unsplash&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;🔖 filter by tags&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href=&quot;https://twitter.com/_WaylonWalker/status/1195319044808888321?s=20&quot;&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;filter by node&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;b_int_cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;see on [#kedrotips](&lt;a href=&quot;https://twitter.com/&quot;&gt;https://twitter.com/&lt;/a&gt;&lt;/em&gt;WaylonWalker/status/1196406204479737856?s=20)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;filter nodes like&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;query_string &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;
nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
   node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name
   &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; node &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodes
   &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; query_string &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name
   &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;nodes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href=&quot;https://twitter.com/_WaylonWalker/status/1196813895228428288?s=20&quot;&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;only nodes with tags&lt;/strong&gt; &lt;em&gt;or&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;trains&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;only nodes with tags&lt;/strong&gt; &lt;em&gt;and&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;raw_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
car_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
raw_car_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; raw_nodes &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; car_nodes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;raw_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
   pipeline
   &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;raw&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;add pipelines&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;car_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
train_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;trains&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
transportation_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; car_nodes &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; train_nodes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;ensure nodes are attached&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;cars_attached &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
   pipeline
   &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;only_nodes_with_tags&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cars&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;grouped_nodes
   &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;🎂 Pipeline Decorators&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://kedro.readthedocs.io/en/latest/_modules/kedro/pipeline/decorators.html#log_time&quot;&gt;example - log_time&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; kedro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;decorators &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; log_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mem_profile
pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;decorate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;log_running_time&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Pipeline IO&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pipleine.all_inputs()&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;pipeline.all_outputs()&lt;/code&gt; return sets of pipeline inputs and outputs and you can do set operations on them.  This is particularly useful to find the upper and lower edges of your pipeline or subset of pipeline.  The pipeline object here is any &lt;code class=&quot;language-text&quot;&gt;kedro&lt;/code&gt; pipeline including a filtered subset.&lt;/p&gt;
&lt;h3&gt;Find all raw data&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all_inputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all_outputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Find all final data&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all_outputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all_inputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Find all nodes that do not raw&lt;/h3&gt;
&lt;p&gt;This one is probably one that is pushing the limits of what I would do in a list comprehension that I use in prod or even put into a text editor, but I commonly use ipython for my adhoc work and keeping it all in one line is very handy.  Complex list comprehensions kinda start becoming like regex in a way that they are really easy to write and really hard to read.  I don&apos;t think this one quite hits that point but its getting close.&lt;/p&gt;
&lt;p&gt;I find this one super useful to help me either move data beween environments, or avoid unnecessary database calls.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;raw_inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all_inputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all_outputs&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
raw_nodes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;node &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; node &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; pipeline&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodes &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; raw_inputs &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/kedro.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/kedro/.png</cover_image></item><item><title><![CDATA[Packages to Investigate]]></title><description><![CDATA[jmespath Tabnine Bulwark |-|-|
|github: |https://github.com/zaxr/bulwark| I definitely want to try this out with kedro. Bulwark is a package…]]></description><link>https://waylonwalker.com/packages-to-investigate/</link><guid isPermaLink="false">https://waylonwalker.com/packages-to-investigate/</guid><pubDate>Mon, 14 Oct 2019 05:00:00 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;jmespath&lt;/li&gt;
&lt;li&gt;Tabnine&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Bulwark&lt;/h1&gt;
&lt;p&gt;|-|-|
|github: |&lt;a href=&quot;https://github.com/zaxr/bulwark&quot;&gt;https://github.com/zaxr/bulwark&lt;/a&gt;|&lt;/p&gt;
&lt;p&gt;I definitely want to try this out with kedro.&lt;/p&gt;
&lt;p&gt;Bulwark is a package for convenient property-based testing of pandas dataframes, supported for Python 3.5+.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    import bulwark.decorators as dc

    @dc.IsShape((-1, 10))
    @dc.IsMonotonic(strict=True)
    @dc.HasNoNans()
    def compute(df):
        # complex operations to determine result
        ...
    return result_df&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/packages-to-investigate.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/packages-to-investigate/.png</cover_image></item><item><title><![CDATA[Debugging Python]]></title><description><![CDATA[Using pdb]]></description><link>https://waylonwalker.com/debugging-python/</link><guid isPermaLink="false">https://waylonwalker.com/debugging-python/</guid><pubDate>Tue, 01 Oct 2019 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Using pdb&lt;/h2&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/debugging-python.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/debugging-python/.png</cover_image></item><item><title><![CDATA[Just Use Pathlib]]></title><description><![CDATA[Pathlib is an amazing cross-platform path tool. Import Create path object Current Directory Users Home Directory module directory Others
Let…]]></description><link>https://waylonwalker.com/just-use-pathlib/</link><guid isPermaLink="false">https://waylonwalker.com/just-use-pathlib/</guid><pubDate>Thu, 26 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Pathlib is an amazing cross-platform path tool.&lt;/p&gt;
&lt;h2&gt;Import&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Path&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create path object&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Current Directory&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;cwd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;absolute&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Users Home Directory&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;home &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;home&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;module directory&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;module_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__file__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Others&lt;/strong&gt;
Let&apos;s create a path relative to our current module.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;data_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__file__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;data&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Check if files exist&lt;/h2&gt;
&lt;h2&gt;Make Directories&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;data_path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mkdir&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parents&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; exists_ok&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;rename files&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_path &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;example.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rename&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;real.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;List files&lt;/h2&gt;
&lt;h2&gt;Glob Files&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;data_path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;glob&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;*.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;recursively&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;data_path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rglob&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;*.csv&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Write&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_path &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;meta.txt&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;write_text&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;f&apos;created on &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;datetime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;datetime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;today&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/just-use-pathlib.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/just-use-pathlib/.png</cover_image></item><item><title><![CDATA[Custom Python Exceptions]]></title><description><![CDATA[Custom Exceptions]]></description><link>https://waylonwalker.com/custom-python-exceptions/</link><guid isPermaLink="false">https://waylonwalker.com/custom-python-exceptions/</guid><pubDate>Wed, 25 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Custom Exceptions&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;class ProjectNameError(NameError):
    pass


class UserNameError(NameError):
    pass


class CondaEnvironmentError(RuntimeError):
    pass


class BucketNotDefinedError(NameError):
    pass&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/custom-python-exceptions.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/custom-python-exceptions/.png</cover_image></item><item><title><![CDATA[Filtering Pandas]]></title><description><![CDATA[query Good for method chaining, i.e. adding more methods or filters without assigning a new variable. masking general purpose, this is…]]></description><link>https://waylonwalker.com/filtering-pandas/</link><guid isPermaLink="false">https://waylonwalker.com/filtering-pandas/</guid><pubDate>Tue, 24 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;query&lt;/h2&gt;
&lt;p&gt;Good for method chaining, i.e. adding more methods or filters without assigning a new variable.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# is&lt;/span&gt;
skus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;AVAILABILITY == &quot; AVAILABLE&quot;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# is not&lt;/span&gt;
skus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;AVAILABILITY != &quot; AVAILABLE&quot;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;masking&lt;/h2&gt;
&lt;p&gt;general purpose, this is probably the most common method you see in training/examples&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# is&lt;/span&gt;
skus&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;skus&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;AVAILABILITY&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;AVAILABLE&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# is not&lt;/span&gt;
skus&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;skus&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;AVAILABILITY&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;AVAILABLE&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;isin&lt;/h2&gt;
&lt;p&gt;capable of including multiple strings to include&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# is in
df[df.AVAILABILITY.isin([&amp;#39;AVAILABLE&amp;#39;, &amp;#39;AVL&amp;#39;])]
# is not in
df[~df.AVAILABILITY.isin([&amp;#39;AVAILABLE&amp;#39;, &amp;#39;AVL&amp;#39;])]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;contains&lt;/h2&gt;
&lt;p&gt;Good For partial matches&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# contains
df[df.AVAILABILITY.str.contains(&amp;#39;AVA&amp;#39;)]
# not contains
df[~df.AVAILABILITY.str.contains(&amp;#39;AVA&amp;#39;)]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;MASKS&lt;/h2&gt;
&lt;p&gt;anything that we put inside of square brackets can be set as a variable then passed in.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;service_mask = skus[&amp;#39;AVAILABILITY&amp;#39;] == &amp;#39;AVAILABLE&amp;#39;
name_mask = skus[&amp;#39;NAME&amp;#39;] == &amp;#39;Dell chromebook 11&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Operators&lt;/h3&gt;
&lt;p&gt;&amp;#x26; - and
~ - not
| - or&lt;/p&gt;
&lt;h3&gt;AVAILABLE and NAME&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df[service_mask &amp;amp; name_mask]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;AVAILABLE or NAME&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df[service_mask | name_mask]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;AVAILABLE and not NAME&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df[service_mask &amp;amp; ~name_mask]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/filtering-pandas.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/filtering-pandas/.png</cover_image></item><item><title><![CDATA[Amazon Web Services]]></title><description><![CDATA[I started using aws in March 2019.  Here are some of my notes. aws-cli ec-2 SageMaker S3]]></description><link>https://waylonwalker.com/amazon-web-services/</link><guid isPermaLink="false">https://waylonwalker.com/amazon-web-services/</guid><pubDate>Sun, 22 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I started using aws in March 2019.  Here are some of my notes.&lt;/p&gt;
&lt;h1&gt;aws-cli&lt;/h1&gt;
&lt;h1&gt;ec-2&lt;/h1&gt;
&lt;h1&gt;SageMaker&lt;/h1&gt;
&lt;h1&gt;S3&lt;/h1&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/amazon-web-services.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/amazon-web-services/.png</cover_image></item><item><title><![CDATA[Digital Ocean]]></title><description><![CDATA[I love digital ocean for it's simplicity and its commitment to open source.]]></description><link>https://waylonwalker.com/digital-ocean/</link><guid isPermaLink="false">https://waylonwalker.com/digital-ocean/</guid><pubDate>Sun, 22 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I love digital ocean for it&apos;s &lt;strong&gt;simplicity&lt;/strong&gt; and its commitment to open source.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/digital-ocean.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/digital-ocean/.png</cover_image></item><item><title><![CDATA[Quick Progress Bars in python using TQDM]]></title><description><![CDATA[tqdm is one of my favorite general purpose utility libraries in python.  It allows me to see progress of multipart processes as they happen…]]></description><link>https://waylonwalker.com/quick-progress-bars-in-python-using-tqdm/</link><guid isPermaLink="false">https://waylonwalker.com/quick-progress-bars-in-python-using-tqdm/</guid><pubDate>Wed, 18 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;tqdm is one of my favorite general purpose utility libraries in python.  It allows me to see progress of multipart processes as they happen.  I really like this for when I am developing something that takes some amount of time and I am unsure of performance.  It allows me to be patient when the process is going well and will finish in sufficient time, and allows me to 💥 kill it and find a way to make it perform better if it will not finish in sufficient time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../tqdm2.gif&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;for more gifs like these follow me on twitter
&lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;@waylonwalker&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Add a simple Progress bar!&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; tqdm &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; tqdm
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; time &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; sleep

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tqdm&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
	sleep&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;convenience&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TQDM also has a convenience function called trange that wraps the range function with a tqdm progress bar automatically.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; tqdm &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; trange
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; time &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; sleep

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; trange&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
	sleep&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;notebook support&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is also notebook support.  If you are bouncing between ipython and jupyter I recomend importing from the auto module.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; tqdm&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;auto &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; tqdm
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; time &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; sleep

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; tqdm&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
	sleep&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/autoreload-ipython/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/de227ffcb7da2e5c1170a8434163bec9/630fb/autoreload-ipython-xmas2020.png&quot; alt=&quot;article cover for Autoreload in Ipython&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Autoreload in Ipython&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    Autoreload in python
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are using notebooks you should enable ipython autoreload 👆&lt;/p&gt;
&lt;/blockquote&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/quick-progress-bars-in-python-using-tqdm.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/quick-progress-bars-in-python-using-tqdm/.png</cover_image></item><item><title><![CDATA[Clean up Your Data Science with Named Tuples]]></title><description><![CDATA[If you are a regular listener of TalkPython or PythonBytes you have hear Michael Kennedy talk about Named Tuples many times, but what are…]]></description><link>https://waylonwalker.com/named-tuples-data-science/</link><guid isPermaLink="false">https://waylonwalker.com/named-tuples-data-science/</guid><pubDate>Wed, 11 Sep 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;If you are a regular listener of &lt;a href=&quot;https://talkpython.fm&quot;&gt;TalkPython&lt;/a&gt; or PythonBytes you have hear Michael Kennedy talk about Named Tuples many times, but what are they and how do they fit into my data science workflow.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;As you graduate your scripts into modules and libraries you might start to notice that you need to pass a lot of data around to all of the functions that you have created. For example if you are running some analysis utilizing &lt;code class=&quot;language-text&quot;&gt;sales&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;inventory&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;pricing&lt;/code&gt; data.  You may need to calculate total revenue, inventory on hand.  You may need to pass these data sets into various models to drive production or pricing based on predicted volumes.&lt;/p&gt;
&lt;h2&gt;Load data&lt;/h2&gt;
&lt;p&gt;Here we setup functions that can load data from the sales database.  Assume that we also have similar functions to &lt;code class=&quot;language-text&quot;&gt;get_inventory&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;get_pricing&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_engine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    engine &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; create_engine&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;postgresql://scott:tiger@localhost:5432/mydatabase&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_sales&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&apos;&apos;&apos;
    gets sales history from the sales database
    &apos;&apos;&apos;&lt;/span&gt;
    engine &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_engine&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; engine&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;connect&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; con&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        sql &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&apos;&apos;&apos;select * from sales.history&apos;&apos;&apos;&lt;/span&gt;
        df &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read_sql&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; con&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    engine&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dispose&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; df

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_inventory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_pricing&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Create Metrics&lt;/h3&gt;
&lt;p&gt;Here we create our first function to calculate some metrics.  There are likely many of these functions that repeat a similar pattern.  They use similar data and have their own custom logic for calculations and joins.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate_total_revenue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;calculates the total sales revenue for all of company XYZ&quot;&quot;&quot;&lt;/span&gt;
    sales &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pricing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_index&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; on&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;revenue&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;qty&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;price&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;revenue&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate_inventory_sale_ratio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate_inventory_sale_ratio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Furthermore these functions will need to be called somewhere, this might be in a &lt;code class=&quot;language-text&quot;&gt;make_report()&lt;/code&gt; function that puts this data into an html template to be sent out to stakeholders, or to be served on a website. Notice how we have the same data showing up time and time again.  And sometimes we even ask for it in a different order 😲.It is important to recognize this early in the project before this gets our of hand.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;make_report&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Makes stakeholder report for company XYZ&quot;&quot;&quot;&lt;/span&gt;
    sales &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_sales&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    inventory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_inventory&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    pricing &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_pricing&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    revenue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; calculate_total_revenue&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales_ratio &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inventory_sale_ratio&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    inventory_sale_ratio&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;getting out of hand&lt;/h3&gt;
&lt;p&gt;Along the way our features, models, and out supervisors have all had their own needs and we have added new datasets, and several flags. This is the point at which anxiety starts creeping in.  We start spending a lot of time double checking the order of each call to make sure that we dont make a mistake.  And when someone else touches this model, we know what it looks like and cant help but think, &quot;Oh God I hope they didn&apos;t screw up that horrid module!&quot;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate_total_revenue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    sales &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pricing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_index&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; on&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inventory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_index&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; on&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;revenue&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;qty&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;price&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    sales  &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;price &gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;min_price&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales  &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;sale_date &gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;min_date&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales  &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;sale_date &amp;lt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;end_date&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;revenue&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate_inventory_sale_ratio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate_inventory_sale_ratio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;model_new_prices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;model_production&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;completely_custom_metric_for_steve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sales&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pricing&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inventory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Steve has been here 30 years and doesnt trust our metrics unless he can validate against the old metrics&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It gets even crazier when you start calling all of these functions! Note that we have a common theme of the same data getting passed into&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;make_report&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_for_steve&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Makes stakeholder report for company XYZ&quot;&quot;&quot;&lt;/span&gt;
    sales &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_sales&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    inventory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_inventory&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    pricing &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; get_pricing&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    revenue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; calculate_total_revenue&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales_ratio &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales_ratio &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inventory_sale_ratio&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    inventory_sale_ratio &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inventory_sale_ratio&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    predicted_prices &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model_new_prices&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    predicted_production_rates &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model_production_rate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    completely_custom_metric_for_steve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# render report&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;This code Stinks&lt;/h3&gt;
&lt;p&gt;⌚ &lt;em&gt;Time for refactoring&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While our code started out good it has grown stinky over time.  It will works fine, but it could be better and more enjoyable to work with.  What we have here is a code smell called &lt;code class=&quot;language-text&quot;&gt;data clump&lt;/code&gt;.  This is a group of data that always appears together.  It would be appropriate to formally group this data together.  One way to do this in python is to use nametuples.  It is a very simple technique that allows us to define a data structure that contains a specific set of attributes that we can access using &lt;code class=&quot;language-text&quot;&gt;.attribute_name&lt;/code&gt;.  Replacing this &lt;code class=&quot;language-text&quot;&gt;data clump&lt;/code&gt; with a formal group of data will allow us to reduce the number of arguments in all of our functions. Add new attributes easily. And not rely on positional arguments.  This code will be easier to maintain, read, and write.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What we have here is a code smell called &lt;code class=&quot;language-text&quot;&gt;data clump&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;create a namedtuple&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; collections &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; namedtuple

ModelData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; namedtuple&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;modin_data&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;sales pricing inventory stored_at min_price start_date end_date&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;use the namedtuple&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ModelData&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    sales&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;get_sales&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    pricing&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;get_pricing&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    inventory&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;get_inventory&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;
    min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;
    start_date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; datetime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;today&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; datetime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timedelta&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;days&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    end_date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; datetime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;today&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;refactor functions&lt;/strong&gt;
Now that we have a clean data object how do we use it.  Simple, we pass in one data object, then access each attribute with the dot operator. These functions are now much cleaner to call and read.  Here I have chosen a poor name for our &lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt;, but in a real scenario you may have multple &lt;code class=&quot;language-text&quot;&gt;namedtuples&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate_total_revenue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    sales &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sales
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pricing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_index&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; on&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;inventory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_index&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; on&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;sku&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;revenue&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;qty&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;price&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    sales  &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;price &gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;min_price&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales  &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;sale_date &gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;min_date&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales  &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;sale_date &amp;lt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;end_date&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sales&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;revenue&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;call the function&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that all of the data is store in a single object it is really easy to call each of our functions using one data instance.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;make_report&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;LAX&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-1999&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;01-01-3000&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_for_steve&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;Makes stakeholder report for company XYZ&quot;&quot;&quot;&lt;/span&gt;
    data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ModelData&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stored_at&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;stored_at&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; min_price&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;min_price&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;start_date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end_date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;end_date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    revenue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; calculate_total_revenue&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sales_ratio &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sales_ratio &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inventory_sale_ratio&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    inventory_sale_ratio &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inventory_sale_ratio&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    predicted_prices &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model_new_prices&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    predicted_production_rates &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model_production_rate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    completely_custom_metric_for_steve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# render report&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;🧹 Clean up your data science&lt;/h3&gt;
&lt;p&gt;Named Tuples are a great way to clean up your data science code and reduce &lt;code class=&quot;language-text&quot;&gt;Data Clumps&lt;/code&gt;.  Anytime you have multiple data sets that almost always get used together &lt;code class=&quot;language-text&quot;&gt;namedtuple&lt;/code&gt;s are a great way to clean up your code, make it more readable and more maintainable.  If you find that you also have functions that are tightly coupled to this data you might want to consider using a &lt;code class=&quot;language-text&quot;&gt;class&lt;/code&gt; instead of a &lt;code class=&quot;language-text&quot;&gt;namedtuple&lt;/code&gt;, but that is for another article.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/named-tuples-data-science.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/named-tuples-data-science/.png</cover_image></item><item><title><![CDATA[Background Tasks in Python for Data Science]]></title><description><![CDATA[This post is intended as an extension/update from background tasks in python.  I started using  the week that Kenneth Reitz released it.  It…]]></description><link>https://waylonwalker.com/python-data-science-background/</link><guid isPermaLink="false">https://waylonwalker.com/python-data-science-background/</guid><pubDate>Tue, 10 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This post is intended as an extension/update from &lt;a href=&quot;https://waylonwalker.com/background-1/&quot;&gt;background tasks in python&lt;/a&gt;.  I started using &lt;code class=&quot;language-text&quot;&gt;background&lt;/code&gt; the week that Kenneth Reitz released it.  It takes away so much boilerplate from running background tasks that I use it in more places than I probably should. After taking a look at that post today, I wanted to put a better data science example in here to help folks get started.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I use it in more places than I probably should&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before we get into it, I want to make a shout out to Kenneth Reitz for making this so easy.  Kenneth is a python God for all that he has given to the community in so many ways, especially with his ideas in building stupid simple api&apos;s for very complicated things.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h3&gt;install via pip&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;pip install background&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;install via github&lt;/h3&gt;
&lt;p&gt;I believe one of the later pr&apos;s to the project fixes the way arguments are passed in.  I generally clone the repo or copy the module directly into my project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;clone it&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git clone https://github.com/ParthS007/background.git
cd background
python setup.py install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;copy the module&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;curl https://raw.githubusercontent.com/ParthS007/background/master/background.py &amp;gt; background.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;🐌 The Slow Function&lt;/h2&gt;
&lt;p&gt;Imagine that this function is a big one!  This function is fairly realistic as it takes in some input and returns a DataFrame.  This is what a good half of my fuctions do in data science.  The internals of this function generally will include a sql query, load from s3 or a data catalog, an aggregation from another DataFrame.  In general it should do one simple thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feel Free to copy this &quot;boilerplate&quot;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; background
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; time &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; sleep
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; pd

&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@background&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;task&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;long_func&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
    Simulates fetching data from a service
    and returning a pandas DataFrame.

    &quot;&quot;&quot;&lt;/span&gt;
    sleep&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataFrame&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;number_squared&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Calling the Slow Function&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;it&apos;s the future calling 🤙&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If we were to call this function 10 times it would take 100s.  Not bad for a dumb example, but detrimental when this gets scaled up💥.  We want to utilize all of our available resources to reduce our development time and get moving on our project.&lt;/p&gt;
&lt;p&gt;Calling &lt;code class=&quot;language-text&quot;&gt;long_func&lt;/code&gt; will return a future object.  This object has a number of methods that you can read about in the &lt;a href=&quot;https://docs.python.org/3/library/concurrent.futures.html#future-objects&quot;&gt;cpython docs&lt;/a&gt;.  The main one we are interested in is &lt;code class=&quot;language-text&quot;&gt;result&lt;/code&gt;.  I typically call these functions many times and put them into a list object so that I can track their progress and get their results.  If you needed to map inputs back to the result use a dictionary.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;time futures &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;long_func&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

CPU times&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; user &lt;span class=&quot;token number&quot;&gt;319&lt;/span&gt; µs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sys&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;197&lt;/span&gt; µs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; total&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;516&lt;/span&gt; µs
Wall time&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;212&lt;/span&gt; µs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Do something with those &lt;code class=&quot;language-text&quot;&gt;results()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Simply running the function completes in no time! This is because the future objects that are returned are non blocking and will run in a background task using the &lt;code class=&quot;language-text&quot;&gt;ProcessPoolExecutor&lt;/code&gt;.  To get the result back out we need to call the &lt;code class=&quot;language-text&quot;&gt;result&lt;/code&gt; method on the future object.&lt;code class=&quot;language-text&quot;&gt;result&lt;/code&gt; is a blocking function that will not realease until the function has completed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;time
futures &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;long_func&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
pd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;concat&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;future&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; future &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; futures&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

CPU times&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; user &lt;span class=&quot;token number&quot;&gt;5.38&lt;/span&gt; ms&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sys&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3.53&lt;/span&gt; ms&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; total&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8.9&lt;/span&gt; ms
Wall time&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt; s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this example completed in &lt;code class=&quot;language-text&quot;&gt;10s&lt;/code&gt;, the time it took for only one run, not all 10! 😎&lt;/p&gt;
&lt;h2&gt;n&lt;/h2&gt;
&lt;p&gt;😫 &lt;em&gt;crank it up&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;By default the number of parallel processes wil be equal to the number of cpu threads on your machine. To increase the number of parallel processes (&lt;code class=&quot;language-text&quot;&gt;max_workers&lt;/code&gt;) set increase &lt;code class=&quot;language-text&quot;&gt;background.n&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;background&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;n &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Is it possible to overruse @background.task?&lt;/h1&gt;
&lt;p&gt;I use this essentially anywhere that I cannot vectorize a python operation and push the compute down into those fast 💨 c extended libraries like numpy, and the operation takes more than a few minutes.  Nearly every big network request I make gets broken down into chunks and multithreaded.  Let me know... is is possible to overruse &lt;code class=&quot;language-text&quot;&gt;@background.task&lt;/code&gt;? Let me know your thoughts &lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;@_WaylonWalker&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Repl.It&lt;/h1&gt;
&lt;p&gt;Play with the code here!  Try different values of background.n and n_runs.&lt;/p&gt;
&lt;iframe height=&quot;800px&quot; width=&quot;100%&quot; src=&quot;https://repl.it/@WaylonWalker/TestRepl?lite=true&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; sandbox=&quot;allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals&quot;&gt;&lt;/iframe&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/python-data-science-background.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/python-data-science-background/.png</cover_image></item><item><title><![CDATA[Autoreload in Ipython]]></title><description><![CDATA[Autoreload in Ipython I have used  for several years now with great success and 🔥 rapid reloads.  It allows me to move super fast when…]]></description><link>https://waylonwalker.com/autoreload-ipython/</link><guid isPermaLink="false">https://waylonwalker.com/autoreload-ipython/</guid><pubDate>Sun, 08 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Autoreload in Ipython&lt;/h1&gt;
&lt;p&gt;I have used &lt;code class=&quot;language-text&quot;&gt;%autoreload&lt;/code&gt; for several years now with great success and 🔥 rapid reloads.  It allows me to move super fast when developing libraries and modules.  They have made some great updates this year that allows class modules to be automatically be updated.&lt;/p&gt;
&lt;h2&gt;What I like about autoreload&lt;/h2&gt;
&lt;p&gt;🔥 Blazing Fast&lt;/p&gt;
&lt;p&gt;💥 Keeps me in the comfort of my text editor&lt;/p&gt;
&lt;p&gt;👏 Allows me to use Jupyter when I need&lt;/p&gt;
&lt;p&gt;👟 Extremely Reliable&lt;/p&gt;
&lt;p&gt;One of the biggest benefits that I find is that it shortens the distance between my module/library code and test code inside of a terminal/notebook.  Now I primarily use jupyter notebooks for the presentation aspect.  I develop code from the comfort of my editor with all of the tools I have setup, and run the functions in a notebook to get the output.  From there I might do some aggregations or plots, but the 🥩 meat of development is done outside of jupyter.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now I primarily use jupyter notebooks for the presentation aspect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Enabling Autoreload&lt;/h2&gt;
&lt;p&gt;📐 &lt;em&gt;config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a short script that I use to setup ipython so that it automatically reloads modules.  This allows me to use a separate terminal and editor, and keep data in memory while developing functions.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ipython profile create&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then edit the created file &lt;code class=&quot;language-text&quot;&gt;~/.ipython/profile_default/ipython_config.py&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InteractiveShellApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;extensions &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;autoreload&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InteractiveShellApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exec_lines &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;%autoreload 2&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InteractiveShellApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exec_lines&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;print(&quot;Warning: disable autoreload in ipython_config.py to improve performance.&quot;)&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;According to the docs&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ipython.org/ipython-doc/3/config/extensions/autoreload.html#caveats&quot; title=&quot;IPython caveats&quot;&gt;autoreload caveates&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some of the known remaining caveats are:&lt;/p&gt;
&lt;p&gt;Replacing code objects does not always succeed: changing a @property in a class to an ordinary method or a method to a member variable can cause problems (but in old objects only).
Functions that are removed (eg. via monkey-patching) from a module before it is reloaded are not upgraded.
C extension modules cannot be reloaded, and so cannot be autoreloaded.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;So what can gets updated??&lt;/h2&gt;
&lt;p&gt;🤲 &lt;em&gt;Nearly everything...&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;new/updated functions&lt;/li&gt;
&lt;li&gt;new/updated functions&lt;/li&gt;
&lt;li&gt;new/updated class methods&lt;/li&gt;
&lt;li&gt;new/updated class attributes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What does not get updated&lt;/h2&gt;
&lt;p&gt;🔄 &lt;em&gt;needs restart&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config&lt;/strong&gt; files that are side loaded with modules typically do not get updated in my experience, and I tend to restart the session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;init&lt;/strong&gt; class methods do not get reran, but the session does not need to be reloaded.  The class instance will just need to be re-instanciated.&lt;/p&gt;
&lt;h2&gt;Testing out the capabilities&lt;/h2&gt;
&lt;p&gt;💨 &lt;em&gt;Watch&lt;/em&gt; it go&lt;/p&gt;
&lt;p&gt;Here is a gif of me taking autoreload out for a test drive.  When creating the session test_autoreload.py does not even exist. From there new functions, classes, attributes, and methods are added in the file and all live reload into ipython.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../test_autoreload4.gif&quot;&gt;
&lt;em&gt;for more gifs like these follow me on twitter&lt;/em&gt; &lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;&lt;em&gt;@waylonwalker&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;What About Jupyter Notebooks????&lt;/h2&gt;
&lt;p&gt;💥 &lt;em&gt;Exactly the Same&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Since jupyter uses ipython in be background Jupyter will use the same &lt;code class=&quot;language-text&quot;&gt;ipython_config.py&lt;/code&gt; file to have autoreload enabled by default.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../test_autoreload_jupyter.gif&quot;&gt;
&lt;em&gt;for more gifs like these follow me on twitter&lt;/em&gt; &lt;a href=&quot;https://twitter.com/_WaylonWalker&quot;&gt;&lt;em&gt;@waylonwalker&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Go use it now&lt;/h2&gt;
&lt;p&gt;Take the splash into rapid development of python functions with minimal distance between your modules/library and your ipython/jupyter session.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/autoreload-ipython.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/autoreload-ipython/.png</cover_image></item><item><title><![CDATA[Bash]]></title><description><![CDATA[Bash Notes Bash is super powerful. File System Full Show Remaining Space on Drives show largest files in current directory Move files then…]]></description><link>https://waylonwalker.com/bash/</link><guid isPermaLink="false">https://waylonwalker.com/bash/</guid><pubDate>Sun, 08 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Bash Notes&lt;/h1&gt;
&lt;p&gt;Bash is super powerful.&lt;/p&gt;
&lt;h2&gt;File System Full&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Show Remaining Space on Drives&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;df&lt;/span&gt; -h&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;show largest files in current directory&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;du&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; -h --max-depth&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Move files then symlink them&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; /mnt/mounted_drive
&lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; ~/bigdir /mnt/mounted_drive
&lt;span class=&quot;token function&quot;&gt;ln&lt;/span&gt; -s /mnt/mounted_drive/bigdir ~/bigdir&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Fuzzy One Liners&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;source activate &quot;&lt;span class=&quot;token punctuation&quot;&gt;$(&lt;/span&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &apos;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;print $&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;edit in vim&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;vf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; fzf &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; -r -I % &lt;span class=&quot;token variable&quot;&gt;$EDITOR&lt;/span&gt; % &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;cat a file&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;vf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; fzf &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; -r -I % &lt;span class=&quot;token variable&quot;&gt;$EDITOR&lt;/span&gt; % &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;bash execute&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;bf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;fzf&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;git add&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;gadd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; status -s &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf -m &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print &lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;}&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; status -s&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;git reset&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;greset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; status -s &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;  fzf -m &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print &lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;}&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; status -s&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Kill a process&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;fkill&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;kill &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt; aux &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; fzf &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print(&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;)}&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Finding things&lt;/h2&gt;
&lt;h3&gt;Files&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/sharkdp/fd&quot;&gt;fd-find&lt;/a&gt; is amazing for finding files, it even respects your &lt;code class=&quot;language-text&quot;&gt;.gitignore&lt;/code&gt; file 😲.  Install with &lt;code class=&quot;language-text&quot;&gt;apt install fd-find&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;fd md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ag -g python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; -n &lt;span class=&quot;token string&quot;&gt;&quot;*.md&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Content&lt;/h3&gt;
&lt;p&gt;** show matching text **&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ag python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -iR Python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;** show file names only **&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ag -l python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -iRl python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Recursively Replace text&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;agr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ag -l &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s/&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;/g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;grep -iRl &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s/&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;/g&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Extending&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;**agr**&lt;/code&gt; &lt;strong&gt;or&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;**grepr**&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There are so many options inside of &lt;code class=&quot;language-text&quot;&gt;grep&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ag&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;sed&lt;/code&gt; that you could many an enormous amount of these if you really wanted to, but I like to keep it simple.  These cover 90% of my usage.  If I wanted to change something in the second half I would just paste in this command and edit it. More often though I want to limit the input, say only replace word1 to word2 inside of markdown files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Limited Scope&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;fd md &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; argr python python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; -n &lt;span class=&quot;token string&quot;&gt;&quot;*.md&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; grepr python python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;
&lt;a class=&quot;onelinelink&quot; href=&quot;https://waylonwalker.com/refactor-in-cli/&quot;&gt;
&lt;img style=&quot;float: right;&quot; align=&quot;right&quot; src=&quot;https://waylonwalker.com/static/caee54c45632d974fe802bdbb34f8b54/630fb/refactor-in-cli-xmas2020.png&quot; alt=&quot;article cover for Large Refactor At The Command Line&quot;&gt;
&lt;div class=&quot;right&quot;&gt;
    &lt;h2&gt;Large Refactor At The Command Line&lt;/h2&gt;
    &lt;p class=&quot;description&quot;&gt;
    As projects grow patterns that worked early on break and we need to change things to make the project easier to work wit
    &lt;/p&gt;
    &lt;p class=&quot;url&quot;&gt;
    &lt;span class=&quot;read-more&quot;&gt;read more&lt;/span&gt;  waylonwalker.com
    &lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;I use these replace commands heavily when doing large refactorings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;conditionally configure&lt;/h3&gt;
&lt;p&gt;I like this one when there is not a good cli into config files and I need to replace something like a true to false if the value is in the config and append to the config if its not.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;grepr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# replaces first string with second string inside file from third argument&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# example:&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;#   grepr &quot;allow_conda_downgrades:.*&quot; &quot;allow_conda_downgrades: true&quot; ~/.condarc&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -xq &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$3&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&quot;s|&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;|&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;|g&quot;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$3&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$3&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Watch the time&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;watch&lt;/span&gt; -n &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;date&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;with figlet&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;watch&lt;/span&gt; -n &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt; -c &lt;span class=&quot;token string&quot;&gt;&quot;date | figlet&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;watch a function&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;date&lt;/span&gt;
aws s3 &lt;span class=&quot;token function&quot;&gt;sync&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$BUCKET&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; -f run
&lt;span class=&quot;token function&quot;&gt;watch&lt;/span&gt; -n &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt; run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;if conda environment does not exist create it&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; my_env &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;my_env environment is installed&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; conda create -n my_env &lt;span class=&quot;token assign-left variable&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3.8&lt;/span&gt; -y
&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; activate my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Rename multiple files&lt;/h1&gt;
&lt;p&gt;more info from &lt;a href=&quot;https://linuxize.com/post/how-to-rename-files-in-linux/&quot;&gt;linuxize&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token for-or-select variable&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; *.png&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;${f}&lt;/span&gt; prefix-&lt;span class=&quot;token variable&quot;&gt;${f}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;convert all files in a directory to unix&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;dos2unix **/*&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;recursively remove all whitespace from .py files&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; **/*.py -type f -exec &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;token string&quot;&gt;&apos;s/ *$//&apos;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{}&apos;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;;&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;recursively autopep8&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;find &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;name &lt;span class=&quot;token string&quot;&gt;&apos;*.py&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;exec&lt;/span&gt; autopep8 &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;place &lt;span class=&quot;token string&quot;&gt;&apos;{}&apos;&lt;/span&gt; \&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;make bash script a runnable command&lt;/h2&gt;
&lt;p&gt;include a shebang&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#! /bin/bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;chmod&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; +x /usr/local/bin/my_script&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;accept positional input&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#! /bin/bash&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; input&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Using pyp&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pipx &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pyp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;replacement for cut&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python -m http.server &lt;span class=&quot;token number&quot;&gt;5000&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8574&lt;/span&gt;

✦ ❯ Serving HTTP on &lt;span class=&quot;token number&quot;&gt;0.0&lt;/span&gt;.0.0 port &lt;span class=&quot;token number&quot;&gt;5000&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;http://0.0.0.0:5000/&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.

✦ ❯ &lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt; aux &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;python -m http.server&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -v &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; pyp &lt;span class=&quot;token string&quot;&gt;&apos;line.split()[1]&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;kill&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;  + terminated  python -m http.server &lt;span class=&quot;token number&quot;&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;replacement for wc&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;conda info --envs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; pyp &lt;span class=&quot;token string&quot;&gt;&apos;len(lines) - 3 # account for header and base&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;print contents of shell function&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;declare&lt;/span&gt; -f &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;function-name&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;batch rename files&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token for-or-select variable&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; *.jpeg&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; -- &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$f&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${f&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;.jpeg}&lt;/span&gt;.jpg&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;convert markdown files to reveal.js&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides&quot;&gt;https://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides&lt;/a&gt;
install pandoc&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pandoc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;setup&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://github.com/hakimel/reveal.js/archive/master.tar.gz
&lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; -xzvf master.tar.gz
&lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; reveal.js-master reveal.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;convert&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pandoc -t revealjs -s -o myslides.html myslides.md -V revealjs-url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;https://unpkg.com/reveal.js@3.9.2/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Render Markdown at the command line&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/charmbracelet/glow&quot;&gt;Glow&lt;/a&gt; is a terminal markdown renderer written in go.  There iis a prebuilt binary that can simply be unzipped and executed to render markdow.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://github.com/charmbracelet/glow/releases/download/v0.2.0/glow_0.2.0_linux_x86_64.tar.gz
&lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; -xzf glow_0.2.0_linux_x86_64.tar.gz
&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; +x glow
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; glow /usr/bin

glow &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;filename&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Autocomplete for click applications&lt;/h2&gt;
&lt;p&gt;see the &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/bashcomplete/&quot;&gt;docs&lt;/a&gt; for more details&lt;/p&gt;
&lt;h2&gt;Autocomplete for non click python cli&apos;s&lt;/h2&gt;
&lt;p&gt;shtab &lt;a href=&quot;https://github.com/iterative/shtab&quot; title=&quot;https://github.com/iterative/shtab&quot;&gt;https://github.com/iterative/shtab&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Ensure functions reset context&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;project_log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token assign-left variable&quot;&gt;_dir&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token function-name function&quot;&gt;_project_log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ~/projects/project
      &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
   _project_log &lt;span class=&quot;token variable&quot;&gt;$@&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$_dir&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$_dir&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/bash.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/bash/.png</cover_image></item><item><title><![CDATA[Keyboard Driven VSCode]]></title><description><![CDATA[Throw that mouse Away its time to setup some keyboard shortcuts. These sortcuts were the baseline for switching from tmux/vim to vscode…]]></description><link>https://waylonwalker.com/keyboard-driven-vscode/</link><guid isPermaLink="false">https://waylonwalker.com/keyboard-driven-vscode/</guid><pubDate>Sun, 07 Jul 2019 05:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;Throw that mouse Away its time to setup some keyboard shortcuts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These sortcuts were the baseline for switching from tmux/vim to vscode.  Most folks posts I was able to find gave great tips on replacing vim, but very few have focused on the hackability of tmux.  tmux allows me to rapidly fire up a workspace, create new windows and splits.  Then When I switch tasks I can leave that workspace open and and jump right back in later exactly where I left off.  There is nothing quite like it.  The shortcuts listed here make the transition a bit better. The worst thing I found when using vscode at first was no way to switch between the terminal and editor without the mouse.  This first set of keybindings solve that issue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The worst thing I found when using vscode at first was no way to switch between the terminal and editor without the mouse.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Alt+[hjkl]&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;navigation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;⬅ jump to &lt;strong&gt;left&lt;/strong&gt; split &lt;strong&gt;alt+h&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;⬇ jump to &lt;strong&gt;terminal&lt;/strong&gt; from editor &lt;strong&gt;alt+j&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;⬆ jump to &lt;strong&gt;editor&lt;/strong&gt; from terminal &lt;strong&gt;alt+k&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;➡ jump to &lt;strong&gt;right&lt;/strong&gt; split &lt;strong&gt;alt+l&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is by var the most useful set of keybindings that I use in vscode and is directly replicated from my tmux configuration.  It allows me to quickly jump up, down, left, right.  Do note that if you use vertical splits it does not work as well as tmux 😢.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../alt%20%5Bhjkl%5D.gif&quot; alt=&quot;navigating vscode with keyboard shortcuts&quot; title=&quot;Alt+[hjkl]&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+j&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.focus&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+k&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.focusFirstEditorGroup&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+k&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.focusAboveGroup&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+l&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;-toggleFindInSelection&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+l&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.focusNextGroup&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+h&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.focusPreviousGroup&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+l&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.focusNextPane&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+h&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.focusPreviousPane&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Alt+b&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;toggle bloat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Since closing the sidebar is assigned to &lt;code class=&quot;language-text&quot;&gt;ctrl+b&lt;/code&gt; I thought that it made most sense to simulate the activity bar with &lt;code class=&quot;language-text&quot;&gt;alt+b&lt;/code&gt;.  There are many times when I just want to get as much out of the way as possible and this little bit does help.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../alt%20b.gif&quot; alt=&quot;hiding the activity bar &quot; title=&quot;Alt+b&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+b&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.toggleActivityBarVisibility&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Alt+[svx]&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Split it up&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;🙌 Split hoizontally &lt;strong&gt;alt+s&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🍌 Vertically &lt;strong&gt;alt+v&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;💥 Close &lt;strong&gt;alt+x&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is another one replicated from tmux for quickly creatiting horizontal (s) and vertical (v) splits.  Once I am done with them I can close them with alt+x.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../alt%20%5Bsvx%5D.gif&quot; alt=&quot;Make and destroy splits with ease in vscode.&quot; title=&quot;spliting the editor&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.split&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.splitEditor&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+v&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.splitEditorOrthogonal&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.kill&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.closeActiveEditor&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editorFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Alt+[cnp]&lt;/h2&gt;
&lt;p&gt;🤲 &lt;strong&gt;Create&lt;/strong&gt; new workspace &lt;strong&gt;alt+c&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;⏭ jump to &lt;strong&gt;next&lt;/strong&gt; workspace &lt;strong&gt;alt+n&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;⏮ jump to &lt;strong&gt;previous&lt;/strong&gt; workspace &lt;strong&gt;alt+p&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sometimes the terminal window gets a bit cramped inside of splits and you need to use different panes.  I replicated the cnp pattern from tmux here as well.  I can create (c) new panes, then go to the next (n), or previous (p) without leaving the comfort of my keyboard.&lt;/p&gt;
&lt;p&gt;I am often using this one when I have a process running that I watch like gatsby, and I need to quickly pop into a new pane to run a git command and back in to gatsby before jumping up to my editor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../alt%20%5Bcnp%5D.gif&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+c&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.new&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.focusNext&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+p&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.terminal.focusPrevious&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;terminalFocus&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Alt+z&lt;/h2&gt;
&lt;p&gt;🗻 Zoom into terminal &lt;strong&gt;alt+z&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This last one doesnt work as well as I would like but it sure does get the job done.  It Zooms (z) into the terminal from anywhere in vscode.  I can be in my editor and zoom out of the terminal to make more room, or zoom in to see what happened from my last edit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../alt%20z.gif&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+z&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;workbench.action.toggleMaximizedPanel&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Bonus&lt;/h1&gt;
&lt;h2&gt;Alt+r&lt;/h2&gt;
&lt;p&gt;🖱 right click in place&lt;/p&gt;
&lt;p&gt;I recently found this one, and find it quite useful to quickly do things like revert selected range, or extract variable without leaving the keyboard.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt+r&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;editor.action.showContextMenu&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;../../static/EIIMiJHWwAAqihV.png&quot;&gt;&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/keyboard-driven-vscode.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/keyboard-driven-vscode/.png</cover_image></item><item><title><![CDATA[Realistic Git Workflow]]></title><description><![CDATA[Realistic Git Workflow sometimes things get messy The Clean Path  pull 👉 branch 👉 format 👉 work👉 add 👉 commit 👉 pull 👉 rebase 👉 push…]]></description><link>https://waylonwalker.com/realistic-git-workflow/</link><guid isPermaLink="false">https://waylonwalker.com/realistic-git-workflow/</guid><pubDate>Mon, 27 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;Realistic Git Workflow&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;sometimes things get messy&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;The Clean Path&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../../akira-hojo-652732-unsplash.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pull 👉 branch 👉 format 👉 work👉 add 👉 commit 👉 pull 👉 rebase 👉 push&lt;/strong&gt;&lt;/p&gt;
&lt;iframe src=&apos;./clean&apos; height=400 width=800 frameborder=None, &gt;
&lt;h3&gt;Pull&lt;/h3&gt;
&lt;p&gt;As complicated as that seems it is pretty straight forward.  When you sit down to work the first thing you do is to &lt;strong&gt;pull&lt;/strong&gt; down the teams latest working &quot;develop&quot; branch from git.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git checkout develop
git pull&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Branch&lt;/h3&gt;
&lt;p&gt;Next create a new branch with a name that will remind you of what you are working on.  For your own sanity choose something descriptive. It is easy to get too many similar branches going and forget which branch is which.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git checkout -b ingest_product_id_table&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Format&lt;/h3&gt;
&lt;p&gt;If you know which files in existance that you will be editing before you start work it is a good idea to format them in a commit early on to keep your working commits separate from formatting.  This will make it easier for reviewers to distinguish from your changes and formatting fixes.&lt;/p&gt;
&lt;p&gt;If your team agrees to a consistent formatting logic, sticks to it and always remembers to run the linting/fixing tools you should not have anything to  change.  But thats not what this post is about, its about the real world.  People forget to run linters, some don&apos;t care, some may not even be aware of the teams formatting guidelines.  Talk to your team about these things and get on the same page.&lt;/p&gt;
&lt;p&gt;I care about formatting, we all should.  We want to put out the best work we can in  our craft.  Realistically though I dont really care about nit picky stuff, I just want things consistant so that it makes things easier to read without me taking the time to swap  out quotes, and fix line spacing. I want a tool to do it for me, and when that tool runs I dont want it mixing in the same commit as my work.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;black .
git add .
git commit -m &amp;quot;FIX formatted with black&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Work&lt;/h3&gt;
&lt;p&gt;Make your changes to your code, test them, document them, clean it up, do what you do best.&lt;/p&gt;
&lt;h3&gt;add and commit&lt;/h3&gt;
&lt;p&gt;Next you will need to stage files that have changed for commit, and commit them.  This can be done in stages to make it clear what the progression was to finish the task you were assigned.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;add all files&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    git add .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;add a single file&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git add &amp;quot;path/to/myfile.ext&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;one line commit message&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here make sure that you create clear messages so that others know.  There are whole posts out there showing how to better write clear commit messages and why you should, check out those posts for more information.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git commit -m &amp;quot;FEAT ingested product id table on pipeline&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;multi-line commit message&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want some more information in your commit message run &lt;code class=&quot;language-text&quot;&gt;git commit&lt;/code&gt; without &lt;code class=&quot;language-text&quot;&gt;-m&lt;/code&gt; and it will pop you into your configured git editor, which is vim by default.&lt;/p&gt;
&lt;h3&gt;Super quick vim primer&lt;/h3&gt;
&lt;p&gt;By default when you run &lt;code class=&quot;language-text&quot;&gt;git commit&lt;/code&gt; you will pop into a vim editor and may want to throw your keyboard before you figure out exactly how to get out of the damn thing.  First type &lt;code class=&quot;language-text&quot;&gt;i&lt;/code&gt; to insert text.  Type out your commit message. Then hit &lt;code class=&quot;language-text&quot;&gt;esc&lt;/code&gt; followed by &lt;code class=&quot;language-text&quot;&gt;:x&lt;/code&gt;.  This is the most basic things you need, and will get you through a commit message.  Vim is a whole topic on its own.&lt;/p&gt;
&lt;h3&gt;Integrate your changes&lt;/h3&gt;
&lt;p&gt;Now that you have made your changes and commited them its time to integrate them into the codebase so that everyone else can see them.  It is likely that time has gone by, and others have made changes to the codebase since you have, so you will want to pull those down first then switch back to your branch.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git checkout develop
git pull
git checkout ingest_product_id_table&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you have the latest code changes and your work locally.  I prefer to rebase my work with the develop branch, pretending that I started my work after all of the other changes had occurred.  You can choose to merge, but I prefer not to have the extra merge commits in my PR.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git rebase develop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;push&lt;/h3&gt;
&lt;p&gt;Now its time to push out to the remote repository and create your PR.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git push --set-upstream ingest_product_id_table&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open your repository in your web browser and you should see that you have just pushed to a new branch and a  button to open a Pull Request (PR).&lt;/p&gt;
&lt;h3&gt;Your Not Done yet&lt;/h3&gt;
&lt;p&gt;Opening a PR is not a done deal, it starts the conversation to get your code approved to be merged into the develop or main branch.  Your approver may have an idea to clean it up to make it more readable/maintainable, or something to make it more performant.  Remember that a second set of eyes sometimes has a new set of clarity that you do not as you have seen the work from start to end.  At this point they may request changes, discussion, or choose to accept and merge it in.&lt;/p&gt;
&lt;h2&gt;Realistically&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;We all hit some pitfalls along the way&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../ian-espinosa-177961-unsplash.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Things get dirty, the clean path is not always the path that is taken, but with git we can clean up our mess and make it look that way.&lt;/p&gt;
&lt;h2&gt;I started working from main/develop before branching&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Pitfall #1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is my most common pitfall.  I get really excited to start work and jump right in.  Then when I go to make some commits I see that &lt;code class=&quot;language-text&quot;&gt;main&lt;/code&gt; branch staring me right in the face from my bash prompt.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;stash those changes away&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git stash
git checkout -b feature_branch
git stash pop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;want to see what changes you have stashed away&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git stash list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;I committed to the wrong branch&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Pitfall #2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create a new branch&lt;/strong&gt;
&lt;em&gt;Solution #1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It is common that I just forget to switch from the main/develop branch into my feature branch before starting work. You will first need to look at your &lt;code class=&quot;language-text&quot;&gt;git log&lt;/code&gt; and determine how many commits to go back or a git hash to go back to.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;git reset --hard&lt;/code&gt; will kill changes and you will never get them back if you did not first put them somewhere.  I myself have been burned by this command, there is no recovering from a &lt;strong&gt;hard&lt;/strong&gt; reset.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git log
# note commit hash or ~n to go back to
git branch feature_branch
git reset --hard HEAD ~3
# or
git reset --hard a1b2c4d4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Move to an Existing Branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sometimes when juggling many different features we are in the middle of several branches and forget to switch between them.  If its the case that you already have a &lt;code class=&quot;language-text&quot;&gt;feature_branch&lt;/code&gt; for the feature that you are working on, you can use this solution.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git status
# note current_branch
git checkout feature_branch
git merge current_branch
git reset --hard HEAD ~3
# or
git reset --hard a1b2c4d4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Another feature was complete before mine&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;pitfall #3&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This can be a big matter of preference of how to deal with this just google &lt;code class=&quot;language-text&quot;&gt;merge&lt;/code&gt; vs &lt;code class=&quot;language-text&quot;&gt;rebase&lt;/code&gt;.  For this particular pitfall I prefer to &lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;rebase&lt;/code&gt;&lt;/strong&gt;.  When you look at the git log and commit history it will appear as if you made your changes after everyone else made theirs.  I do this to clean up the PR and make it easier for the approver to read.  There will be less merge commits, and less history to try to understand.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Before pushing to the remote repository&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; fetch --all
&lt;span class=&quot;token comment&quot;&gt;# or&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; checkout develop
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; pull
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; checkout feature_branch
&lt;span class=&quot;token comment&quot;&gt;# then&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase develop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;if its your first rodeo&lt;/strong&gt; or you are unsure how the rebase will go you can create a safty branch.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; branch saftey_feature_branch
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; fetch --all
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; rebase develop
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; branch -D safety_feature_branch &lt;span class=&quot;token comment&quot;&gt;# deletes safety_feature_branch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/realistic-git-workflow.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/realistic-git-workflow/.png</cover_image></item><item><title><![CDATA[Forestry.io]]></title><description><![CDATA[Testing out forestry.io Sorry Netlify CMS I still ♥️ your product dont be forestry is simple I have been playing with the netlify cms for a…]]></description><link>https://waylonwalker.com/forestry-io/</link><guid isPermaLink="false">https://waylonwalker.com/forestry-io/</guid><pubDate>Tue, 23 Apr 2019 08:02:00 GMT</pubDate><content:encoded>&lt;h1&gt;Testing out forestry.io&lt;/h1&gt;
&lt;h2&gt;Sorry Netlify CMS&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I still ♥️ your product dont be&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;forestry is simple&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have been playing with the netlify cms for a while now, and it has been a decent experience, but I &lt;strong&gt;really&lt;/strong&gt; struggle configuring it.   Forestry is so simple to setup.  My favorite part is that I can code up my gatsby.js site, storing all editable text in markdown, and come back later and add the CMS based on existing documents.&lt;/p&gt;
&lt;h2&gt;Configuration is Simple&lt;/h2&gt;
&lt;p&gt;Forestry.io has this amazing feature to create &lt;em&gt;create based on existing document&lt;/em&gt; 🤯.  This is great because it sets up the &lt;code class=&quot;language-text&quot;&gt;.yml&lt;/code&gt; config for me without error.  And If I really want to come back later to customize it more I have that option, too.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../Screenshot_20190503-165248.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By far my favorite feature is &lt;em&gt;create based on existing document&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Multi-File Gallery&lt;/h2&gt;
&lt;p&gt;I have a use case for a photography site where the owner wants to be able to show off sample photos of each type of work she does.  I got it working in the netlify cms, although it was not very user friendly.  Everything was nested in an accordian 😢.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../Screenshot_20190507-144948.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Netlify multi image upload&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next I looked into forestry.io.  I pointed forestry.io at the existing git repo, created a template based on an existing document and &lt;strong&gt;BAM&lt;/strong&gt;💥 a nice image grid appeared.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../Screenshot_20190507-145044.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Forestry multi image gallery&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Editor&lt;/h2&gt;
&lt;p&gt;The forestry.io editor is on point.  I can choose to edit using the WYSIWYG editor and still use markdown syntax!  I can edit in markdown.  I can add images without fat-fingering the path and screwing up the whole post.  Its amazing!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../2019-05-09%2010-40-11_forestry.io.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Images&lt;/h2&gt;
&lt;p&gt;Image upload is on point!  Just click the add image button, it pops you into your media library, choose an image, or upload it, and you&apos;re off to the races 🏇.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../forestry_image_3.gif&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Im Sold 💲&lt;/h2&gt;
&lt;p&gt;At this point, I am sold. This blog is now written from Forestry, and I love it.  It&apos;s great when I am away from my editor to make some progress on the go.  If I decide I dont like it in 6 months, I can move on. All of my content is still in markdown on the git repo.&lt;/p&gt;
&lt;p&gt;Forestry.io is missing the nice side-by-side preview that netlify cms has, but honestly, I have struggled to set that up, too.  If I am being honest, I just play front end developer on the side, and setting up a CMS is not something that I plan on doing every day.  I am perfectly happy having some gui tools, like forestry.io, setup all of the configuration for me with just a few clicks.&lt;/p&gt;
&lt;h2&gt;Bonus&lt;/h2&gt;
&lt;p&gt;Preview is Nice 👌.  Without configuring anything except a bash one-liner, I have a preview that is not quite instant, but does kick out my actual site with updated content quickly.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/forestry-io.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/forestry-io/.png</cover_image></item><item><title><![CDATA[Rewrite History with Git]]></title><description><![CDATA[rebase git commit --amend Unstage rage unstage to wipte out history of staged commit Undo file rage quit git reset HEAD~n  removes…]]></description><link>https://waylonwalker.com/git-rewrite-history/</link><guid isPermaLink="false">https://waylonwalker.com/git-rewrite-history/</guid><pubDate>Tue, 05 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;rebase&lt;/li&gt;
&lt;li&gt;git commit --amend&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Unstage&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset -- &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;rage&lt;/strong&gt; unstage to wipte out history of staged commit&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset --hard &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Undo file&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;rage quit&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git reset HEAD~n &lt;file&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;removes modifications&lt;/li&gt;
&lt;li&gt;keeps hitsory of changes and undoes them&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git checkout HEAD~n -- &lt;file&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;keeps modifications&lt;/li&gt;
&lt;li&gt;removes history&lt;/li&gt;
&lt;li&gt;--SOFT&lt;/li&gt;
&lt;li&gt;--HARD&lt;/li&gt;
&lt;li&gt;--Mixed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;undo n commits back&lt;/h2&gt;
&lt;p&gt;locally before push&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset HEAD~n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;after push&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; revert HEAD~n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;update .gitignore&lt;/h2&gt;
&lt;p&gt;after push&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -r --cached &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -am &lt;span class=&quot;token string&quot;&gt;&quot;Updated .gitignore&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/git-rewrite-history.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/git-rewrite-history/.png</cover_image></item><item><title><![CDATA[Rewrite History with Git]]></title><description><![CDATA[rebase git commit --amend Unstage learning-python-debugger rage unstage to wipte out history of staged commit Undo file rage quit git reset…]]></description><link>https://waylonwalker.com/git-rewrite-history/git-rewrite-history/</link><guid isPermaLink="false">https://waylonwalker.com/git-rewrite-history/git-rewrite-history/</guid><pubDate>Tue, 05 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;rebase&lt;/li&gt;
&lt;li&gt;git commit --amend&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Unstage learning-python-debugger&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset -- &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;rage&lt;/strong&gt; unstage to wipte out history of staged commit&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset --hard &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Undo file&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;rage quit&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git reset HEAD~n &lt;file&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;removes modifications&lt;/li&gt;
&lt;li&gt;keeps hitsory of changes and undoes them&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git checkout HEAD~n -- &lt;file&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;keeps modifications&lt;/li&gt;
&lt;li&gt;removes history&lt;/li&gt;
&lt;li&gt;--SOFT&lt;/li&gt;
&lt;li&gt;--HARD&lt;/li&gt;
&lt;li&gt;--Mixed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;undo n commits back&lt;/h2&gt;
&lt;p&gt;locally before push&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset HEAD~n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;after push&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; revert HEAD~n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;update .gitignore&lt;/h2&gt;
&lt;p&gt;after push&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -r --cached &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit -am &lt;span class=&quot;token string&quot;&gt;&quot;Updated .gitignore&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/git-rewrite-history/git-rewrite-history.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/git-rewrite-history/git-rewrite-history/.png</cover_image></item><item><title><![CDATA[It's not all about winning]]></title><description><![CDATA[This is my story into data science. The Journey Begins I am addicted to the process of learning and improving my skills nearly to a fault…]]></description><link>https://waylonwalker.com/journey/</link><guid isPermaLink="false">https://waylonwalker.com/journey/</guid><pubDate>Sat, 02 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;This is my story into data science.&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;The Journey Begins&lt;/h1&gt;
&lt;p&gt;I am addicted to the process of learning and improving my skills nearly to a fault. The reason I say nearly is because my addiction is fueled with results. I crave the output of my work enhance the work of others. I jump with joy as I see users gain insights they could have never imagined before. My mouth starts watering as I see their boring repetitive data mining activites be completed in a matter of seconds, opening up their mind to focus on their expertise. The day I stop learning will be the day that I start looking for another career path.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&apos;s not all about winning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;~Mom&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This happened to me in 2014. I have a mechanical engineering degree and had a really good position at the time. I owned full engineering control of a small subset of engine components. The problem was that Everything is so proprietary and hardly documented the process of learning did not click with me. I felt like I had learned a lot about the product early on, and was stuck without any more resources to learn more. On the side, I had started learning python and data science techniques to enhance my job.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/a093e6c28214bb9556a4e877f5d128cf77b82bd3/9c5c4/static/eberhard-grossgasteiger-382452-unsplash-6f1eb07825ef1b2165ea1a3805fff023.jpg&quot; alt=&quot;mountains in the fog&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;every time I feel like I have reached the peak of anyone topic the fog clears and I can now see a whole new mountain range that I did not know existed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I was addicted. I felt like there is so much knowledge easily obtained online in my free time, and I was able to take it back to my job and achieve results. Every time I feel like I have reached the peak of anyone&apos;s topic the fog clears and I can now see a whole new mountain range that I did not know existed.&lt;/p&gt;
&lt;h1&gt;Love the Journey&lt;/h1&gt;
&lt;p&gt;By 2017 I was really good at gaining results for our business and decided to make the jump to the data science team. I have achieved great results, and have been recognized as a high contributor to our business. Still, I do not feel like I have won. My goals are always moving and will always be 3-6 months ahead of me. I truly enjoy the process of learning and providing value so much that I will never let myself sit back and think that I have won and its time to reap the rewards of my hard work. I will say that I am winning. Not because of any results, awards, or recognition, but because I am happy. I have found a career path that I really enjoy the journey and I am not just trying to get on the fast track to a destination.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/journey.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/journey/.png</cover_image></item><item><title><![CDATA[Update Git User]]></title><description><![CDATA[This morning I log into my VCS and check activity on my projects to find that someone else has been very active on my projects fo the last…]]></description><link>https://waylonwalker.com/git-update-user/</link><guid isPermaLink="false">https://waylonwalker.com/git-update-user/</guid><pubDate>Mon, 21 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This morning I log into my VCS and check activity on my projects to find that &lt;strong&gt;someone else&lt;/strong&gt; has been &lt;em&gt;very&lt;/em&gt; active on my projects fo the last few weeks. I quicklyhover over the missing avatar to find that &lt;strong&gt;It&apos;s Me&lt;/strong&gt;.  What&apos;s wrong here, why do I look like two different people throughout the day!  upon further investigation I see the issue.  while setting up a new terminal environment I mistyped my email address by &lt;strong&gt;one character&lt;/strong&gt;.  After much searching and a few failed attempts I was able to fix it by following this article &lt;a href=&quot;https://help.github.com/articles/changing-author-info/&quot;&gt;https://help.github.com/articles/changing-author-info/&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Bare Clone&lt;/h2&gt;
&lt;p&gt;Clone the repo, note it must be a &lt;code class=&quot;language-text&quot;&gt;--bare&lt;/code&gt; clone.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone --bare https://github.com/user/repo.git
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; repo.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;git-author-rewrite&lt;/h2&gt;
&lt;p&gt;Curl down the &lt;code class=&quot;language-text&quot;&gt;git-author-rewrite&lt;/code&gt; script and edit the following variables &lt;code class=&quot;language-text&quot;&gt;OLD_EMAIL&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;CORECT_NAME&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;CORRECT_EMAIL&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; https://gist.githubusercontent.com/octocat/0831f3fbd83ac4d46451/raw/c197afe3e9ea2e4218f9fccbc0f36d2b8fd3c1e3/git-author-rewrite.sh &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; git-author-rewrite.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the script, and push the updates.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt; git-author-rewrite.sh
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push --force --tags origin &lt;span class=&quot;token string&quot;&gt;&apos;refs/heads/**&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Cleanup&lt;/h2&gt;
&lt;p&gt;Delete the &lt;code class=&quot;language-text&quot;&gt;--bare&lt;/code&gt; repo from your local machine.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -rf repo.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I hope this helps someone, or future me who needs to fix their information in git.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/git-update-user.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/git-update-user/.png</cover_image></item><item><title><![CDATA[2019 goals]]></title><description><![CDATA[The year of intenionality This is a follow up to my previous post 2018-retrospective professional This year I will become more productive…]]></description><link>https://waylonwalker.com/goals-2019/</link><guid isPermaLink="false">https://waylonwalker.com/goals-2019/</guid><pubDate>Sat, 12 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;!-- cover: &quot;./namroud-gorguis-253765-unsplash.jpg&quot; --&gt;
&lt;style&gt;
strong {
    /* color: goldenrod; */
    /* text-shadow: 0rem 1px 1px goldenrod; */
}
&lt;/style&gt;
&lt;p&gt;&lt;em&gt;The year of intenionality&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a follow up to my previous post &lt;a href=&quot;/blog/2018-retrospective/&quot;&gt;2018-retrospective&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;professional&lt;/h2&gt;
&lt;p&gt;This year I will become more productive, by intensionally working on a well thought out plan, learning the right technologies, and leave behind a positive legacy.&lt;/p&gt;
&lt;h3&gt;Productivity&lt;/h3&gt;
&lt;p&gt;Last year I was able to make some great strides in my productivity and focus.  This year I want to be able to bring it up a notch.  &lt;strong&gt;Intentionality&lt;/strong&gt; plays a big part in this.  Taking some time to sit down and think about the tasks you realistically want to complete for the day, then focusing on those tasks one at a time.&lt;/p&gt;
&lt;p&gt;I started off the year last year using the &lt;strong&gt;pomodoro&lt;/strong&gt; system to focus on one task and one task only for 25 minutes at a time.  This worked really well for me but I quickly fell off of the train and fell into my old trap of reacting to the loudest customer over the items I put &lt;strong&gt;intensionally&lt;/strong&gt; on my todo list.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;kanban&lt;/strong&gt; system is key to keeping it intentional.  I currently use a very simple trello system, with very few cards.  This helps to stay on track during those 25 minutes.  During the pomodoro session I move an item from todo, to doing, work that item, then move it to done when it is ready.  The only other thing that I can do during that time is to add items to the todo list.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pomodoro&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8 pomodori&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Daily session planning&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Back on inbox zero&lt;/li&gt;
&lt;li&gt;todo&apos;s go in kanban not inbox&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;Leave a Legacy&lt;/h3&gt;
&lt;p&gt;I want to leave behind a legacy that I can be proud of. I want to be known for bringing a positive attitude that inspires others to do their best work, enourage others, and work as a team.  It is in my blood to help as many people as I can.  I am in a unique role and have a unique skill set that allows me to do what would take some hours and days in minutes and hours.  I really enjoy helping these folks, but I know many of them are smart enough to do it on their own, they just do not know where to get started.  For this reason I really want to amp up my docs this year.  I want people to be able to answer 80% of their questions right from the docs before needing to come to me to get started.  I want this to be part of the legacy that I leave with my projects for the next person that encounters them.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;better docs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;80% oss questions should be answered&lt;/li&gt;
&lt;li&gt;finish pea course&lt;/li&gt;
&lt;li&gt;all projects have docs page with link by Feb&lt;/li&gt;
&lt;li&gt;consistent docs format&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;bring positivity to the workplace&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blog weekly (52)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lower barier to entry&lt;/li&gt;
&lt;li&gt;consistently work on writing skills&lt;/li&gt;
&lt;li&gt;12 Medium/LinkedIn&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;Educational&lt;/h3&gt;
&lt;p&gt;Last year I made monumental improvements to my web development while continuing to hone my backend skills.  This year I want to amp up my web front end skills even more. I am finding this to be an area that not very many people in my organization have and I can knock out some simple projects really quick and gain a lot of value.  Last year I started using &lt;strong&gt;react&lt;/strong&gt; as a front end framework.  I want to double down learning the intricicies of how it works, and how to effectively layout a react project. I also want to keep upping my design skills.  As I do more layouts I find that they are easier and easier to layout, and as I am able to get them out faster it give me more time to hone in the design. Lastly I want to continue honing in my backend skills.  Working with data pipelines, Linux command line, the cloud, and database architecture.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Advanced React &lt;em&gt;dynamic web applications&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Refactoring UI &lt;em&gt;Rethinking how to layout data in logical ways&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Service Workies&lt;/li&gt;
&lt;li&gt;AWS?? &lt;em&gt;we are moving to the cloud&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Continue Leveling up Linux Command Line&lt;/li&gt;
&lt;li&gt;Data Pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Personal&lt;/h2&gt;
&lt;p&gt;At home I want to continue being a positive person.  Home is much harder to keep up a good attitude.  Mostly because I care more about my family and its harder to walk away and forget about a bad interaction with them.  I want to make sure that we keep up more positive interactions together as that will help everyone keep the positive attitude.  Lastly I would like to keep in touch with family better.  Rhiannon really loves a nice message to boost her day.  I would like to send her a few longer messages per week, and to one other family member at least once per week.  This can be in the form of a text, email, or hard copy letter in the mail.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;be your best&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+3 positives everyday (300+)&lt;/li&gt;
&lt;li&gt;gratitude daily (300+)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;5 languages&lt;/li&gt;
&lt;li&gt;letters to family&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Bring it on 2019&lt;/strong&gt;  I am ready to take it on!&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/goals-2019.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/goals-2019/.png</cover_image></item><item><title><![CDATA[2018 Retrospective]]></title><description><![CDATA[2018 was a year of many ups and downs, and learning to deal with a whole new set of problems professionally and at home.  In 2018 I logged…]]></description><link>https://waylonwalker.com/2018-retrospective/</link><guid isPermaLink="false">https://waylonwalker.com/2018-retrospective/</guid><pubDate>Sat, 05 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;2018 was a year of many ups and downs, and learning to deal with a whole new set of problems professionally and at home.  In 2018 I logged in to my first Linux system, setup my own webserver, data pipelines, database. I learned to use react and d3. Stepped up my python, javascript, and sql.&lt;/p&gt;
&lt;p&gt;At home the doctor appointments keep piling in.  While I am learning to deal with it all there were several times throughout the year that I was very overwhelmed  with everything and broke down.&lt;/p&gt;
&lt;p&gt;Here are the goals I had listed out for 2018 and how I faired at completing them.&lt;/p&gt;
&lt;h3&gt;Positivity&lt;/h3&gt;
&lt;h4&gt;The Good&lt;/h4&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Continue &quot;Favorite Things&quot; with family at dinner time&lt;/li&gt;
&lt;li&gt;Take 2 10min breaks per day clear the mind&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I can say that the kids are fully on board with favorite things and love to tell everyone about how their day went.  This is a time that they are very positive and generally give praise to another family member for helping them through their day.&lt;/p&gt;
&lt;h4&gt;To Be Improved&lt;/h4&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Gratitude journaling every day&lt;/li&gt;
&lt;li&gt;Snooze Less be productive&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I hit 61  gratitude journals in 2018.  I would not say that I met my goal, but I would definitely say that it&apos;s a great start and is something that I plan on improving next year.  I really like how it helps me focus on the positive things that happened throughout the day to find the best gratitude journal subject.  I do think the quick five minute deadline helps in that I have to be semi-prepared, which forces me to think about gratitude throughout the day.&lt;/p&gt;
&lt;h3&gt;Focus&lt;/h3&gt;
&lt;p&gt;Mediocore performance??&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;8 pomodoro&lt;/li&gt;
&lt;li&gt;up to date kanban&lt;/li&gt;
&lt;li&gt;daily/weekly planning session&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;In 2018 I wanted to set out some goals to be more focused with the time that I do have at work.  I did quite a bit of research for the best techniques throughout December, and found a system that works well for me.  I did keep up with the &lt;em&gt;kanban&lt;/em&gt; system througout the year with trello.  I did not live by the board, but i did put things on there and move them.  The big thing that I found with this system is that it really made me &lt;strong&gt;feel&lt;/strong&gt; productive, and gave me motivation to keep going.  While tracking my tasks throughout the day I was able to really see progress at the end of the day, and go home knowing I did some good work rather than feeling &quot;Where did this day go?&quot;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am putting this back in for 2019, and I will learn to concur them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I completely fell off of the pomodoro system.  I really feel like this system works for me and keeps me on task, I really have issues with task jumping.  It is really hard to keep on it when there are so many distractions throughout the day.  I am putting this back in for 2019, and I will learn to concur them.  The biggest challenge is people.  I have a lot of people stop by for a quick answer or to chat about a project.  I really need to set strong boundaries and tell them in X minutes I can talk, right now I am busy.&lt;/p&gt;
&lt;h3&gt;Physical Health&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;active 3 days a week... 🤔&lt;/li&gt;
&lt;li&gt;eat better 👍&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I will admit that I was not very measurable with &quot;eat better&quot;, but I would say that I have done well.  I have really incorporated quite a few more vegetables into my diet, even when everyone else at the table isn&apos;t.  I throw some frozen brocoli in the microwave.  I have even started choosing vegan options at restaurants occasionally.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As different things started taking over my time I was back off the wagon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I started running in the March timeframe, and really enjoyed it.  As different things started taking over my time I was back off the wagon.  Overall I would say that I am still active 3 or so days of the week with the kids.&lt;/p&gt;
&lt;h3&gt;Educational&lt;/h3&gt;
&lt;p&gt;Continuous Learning is something that I am really passionate for.  I truly believe in always learning from experiences, taking classes, watching conferences, listening to podcasts and reading blogs&lt;/p&gt;
&lt;h4&gt;The Good 👍&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;4 official courses completed&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;d3 in 5 days&lt;/li&gt;
&lt;li&gt;flexbox zombies&lt;/li&gt;
&lt;li&gt;cssgrid.io&lt;/li&gt;
&lt;li&gt;datacamp sql&lt;/li&gt;
&lt;li&gt;linux command line (many blogs/youtube... not a course)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I really stepped up my &lt;strong&gt;front end web skills&lt;/strong&gt; this past year. I have started using es6, react, and building interactive web visualizations, laid out with native modern css.  These are things that I loosely understood in the past and really relied on libraries like &lt;code class=&quot;language-text&quot;&gt;bokeh&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;dash&lt;/code&gt; to get them to work right.&lt;/p&gt;
&lt;p&gt;I can also say that I have stopped google searching for every simple sql query that I write, Goal Complete.  I would say that I went beyond my sql goal in that I have learned to do far more than I realized was possible in the database, dramatically improving performance of my products.  I have also become the go to guy for reading/writing more complex queries.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before 2018 I had never experienced the glory of the linux command line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before 2018 I had never experienced the glory of the linux command line.  Around May I was graced with a small on premis red hat virtual machine and my mind was quickly blown.  Many things that I have struggled to get up and working on windows simply worked right out of the box.  Webserver, task scheduling, 100% availability, and a great command line.  By the end of the year I installed Debian (wsl) on my windows machine and have converted all of my command line applications/languages to run from there, as there are far fewer compatability issues..&lt;/p&gt;
&lt;h4&gt;The flop&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;planned coursed not completed&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;R&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Honestly I am not really hurt by not completing this one.  I really feel like I learned a ton of useful skills this year and I feel like neither of these two would have helped me progress.  R is too close to python to need both in my toolbelt without a specific project/need for it.  I did not have any projects with a dire need for ML.  I really hope to start getting some experience with it so I can have a better understanding when I should use it, but it was not a big need in any of my projects this year.&lt;/p&gt;
&lt;p&gt;Overall I am really happy with the progress from this year, and can&apos;t wait to get started next year.  Having the past few weeks off has really given me time for a reset that I didn&apos;t realize I needed.  Looking at these goals reminds me of the things that had started slipping towards the end during that last hard push to the end.&lt;/p&gt;
&lt;p&gt;🎉🎉 Hapy New Year 🎉🎉&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/2018-retrospective.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/2018-retrospective/.png</cover_image></item><item><title><![CDATA[Do More of What Brings You Joy]]></title><description><![CDATA[Today I want to take some time to talk about the things that make me happy in my work environment.  This is completely free-flow off the…]]></description><link>https://waylonwalker.com/happy/</link><guid isPermaLink="false">https://waylonwalker.com/happy/</guid><pubDate>Tue, 01 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Today I want to take some time to talk about the things that make me happy in my work environment.  This is completely free-flow off the cuff, but are things that I do that make me happy, not having them would definitely be a deal breaker for me .&lt;/p&gt;
&lt;h3&gt;Attitude&lt;/h3&gt;
&lt;p&gt;A positive work atmosphere goes a long ways.  We all have enough negativity going on in our lives that is out of our control accepting any negativity in the workplace is a no go for me.  There was a point in which I was suffering a lot of negativity at work.  This began to trickle into every part of life, and it became hard to see positivity anywhere.  My wife not only noticed this, but put a polite request in for change.  It was definitely a low point and she could tell tell that my work life was not helping anything.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/dJGYFScvBjfRabiH7m/giphy.gif&quot; alt=&quot;positive gif&quot;&gt;
Throw out the negativity - courtesy &lt;a href=&quot;https://giphy.com/&quot;&gt;giphy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bring the positivity&lt;/strong&gt; to your workplace.  It is really difficult for folks to tear you down if you are the one that is always up beat and happy.  &lt;strong&gt;People will notice&lt;/strong&gt;. When they do they will bring the good projects your way, Praise you for your hard work, and  Ask for and value your advice.&lt;/p&gt;
&lt;h3&gt;Helping People&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Helping people&lt;/strong&gt; is part of who I am,  I cannot change that.  I rarely turn someone away who comes to me looking for help.  I will give nearly anyone 15 minutes to help them reach thier goals.  I dont care if they are in a completely different part of my organization,  if they will ever return the favor, or how it will look on my performance review.&lt;/p&gt;
&lt;p&gt;Being in the position that I am in I am graced with access to many data sets, that I can query en masse. It&apos;s not uncommon that I have someone come to me that has access to get the data they need but will take them 2 days to mine out the information they need one at a time every quarter.  I can save them these 2 days, increase their data quality, and increase its refresh rate by writing 10 lines of sql in about 5 minutes.  I hear so oftem from people why I do this, It&apos;s just part of who I am.  The benefits are that everytime I do this I build connections with many folks from a very broad range of backgrounds.&lt;/p&gt;
&lt;h3&gt;Learning&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Learning&lt;/strong&gt; is one of the things that drive me to get excited to come to work every single day.  I am always looking for new techniques to improve my workflow, soft skills, and technical skills.  This keeps me confident that if something happens that I need to find another gig I am current with the latest tech and ready to hire in somewhere else.  It&apos;s also very enjoyable to watch my products improve, and be able to pump them out at faster and faster rates.&lt;/p&gt;
&lt;h3&gt;Grind&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/3oEduGi1UWg9Q6nF84/giphy.gif&quot; alt=&quot;laser focus&quot;&gt;
Laser Focus - courtesy &lt;a href=&quot;https://giphy.com/&quot;&gt;giphy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The last thing is that I need is a few hours of undistracted time to grind.  After I help some folks, and keep up with the latest skills I need to focus, &lt;strong&gt;Laser Focus&lt;/strong&gt;.  I have a lot going on outside of work, so in order for me to keep some sort of balance I need to chrun out some quality hours of progress, otherwise I get behind, stressed, anxious, and start to loose my work-life balance as it is important for me to meet the deadlines that I commit to.&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/happy.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/happy/.png</cover_image></item><item><title><![CDATA[FlexBox]]></title><description><![CDATA[Flexbox-zombies I recently finished up the flexbox-zombies course to learn more about flexbox, and to become proficient with it.  I can…]]></description><link>https://waylonwalker.com/flexbox-zombies/</link><guid isPermaLink="false">https://waylonwalker.com/flexbox-zombies/</guid><pubDate>Sun, 22 Apr 2018 00:00:00 GMT</pubDate><content:encoded>&lt;style&gt;
    em {
        color: #ff9966;
    }
    code {
        background: #FF06050A;
        color: #6394C8;
    }
    .item {
        color: #6394C8;
        font-size: 1.5rem;
        padding: 1rem;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100px;
        width: 100px;
        background: #351D57;
        margin: 5px;
        border: 2px solid #A83E75;
        box-shadow: 5px 5px 10px -5px rgba(0, 0, 0, .6);
    }

    .flex_container {
        padding: 1rem;
        box-shadow: 5px 5px 10px -5px rgba(0, 0, 0, .6);
        background: rgba(99, 148, 200, .2);
        animation: animate_container 2s cubic-bezier(.66, -0.0, .28, 1.0) infinite both alternate;
    }

    .flex_container:hover {
        animation: none
    }

    @keyframes animate_container {
        0%{
            width: 95%;
        }

        20% {
            width: 95%;
        }

        80% {
            width: 200px;
        }

        100% {
            width: 200px;
        }
    }

    h3 {
        padding: 1rem;
        margin: 2rem;
        display: block;
        width: 100vw;
        background: white;
        color: white;
        background: #333;
        position: sticky;
        top: 0px;
        box-shadow:  0 0 #333,
                     -100vw 0 #333,
                     100vw 0 #333;
    }
&lt;/style&gt;
&lt;h1&gt;Flexbox-zombies&lt;/h1&gt;
&lt;p&gt;I recently finished up the flexbox-zombies course to learn more about flexbox, and to become proficient with it.  I can truly say that this course has changed the way that I create layouts.  Flexbox is very intuitive now.  What this course does really well at is explaining the concepts and hitting you with a ton of examples that you can work through really quickly.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../7b8e5139c5b080861982081e65baa430/flexbox-zombies-12.gif&quot; alt=&quot;flexbox-zombies&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A clip from the final round against Dave&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Basic Setup&lt;/h2&gt;
&lt;p&gt;Flexbox requires a wrapper container to work  I will refer to this as the  flex container, and the items in that container as items.&lt;/p&gt;
&lt;h3&gt;Markup&lt;/h3&gt;
&lt;p&gt;I will use the following markup throughout the article, each with different css applied.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;  The animated container is inspired by the flexbox-zombies course.  I really like how it allows you to see the responsiveness of each layout.  In the early example the reasoning may not be aparent, but as we go along some of the flexbox parameters will make more sense if we are viewing them on a dynamic layout since flexbox is designed for building responsive design.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;flex_container&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;4&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div id=&quot;c0&quot;&gt;
    &lt;div class=&apos;flex_container&apos;&gt;
        &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Base Style&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;    &lt;span class=&quot;token selector&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #6394C8&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1.5rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #351D57&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2px solid #A83E75&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px 5px 10px -5px &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .6&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px 5px 10px -5px &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .6&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;99&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 148&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 200&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; animate_container 2s &lt;span class=&quot;token function&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;.66&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; -0.0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .28&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1.0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; infinite both alternate&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;/* Animate the .flex_container to show responsiveness */&lt;/span&gt;

    &lt;span class=&quot;token selector&quot;&gt;.flex_container:hover&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;/* But not on hover, let the user pause the annimation*/&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; animate_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 95%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token selector&quot;&gt;20%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 95%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token selector&quot;&gt;80%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 200px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 200px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Basic Technique&lt;/h2&gt;
&lt;h3&gt;1. Turn on the crossbow&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to the flex container&lt;/em&gt;
&lt;code class=&quot;language-text&quot;&gt;display: flex;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Turning on flexbox on the flex container will cause all child elements to align in a row at the top left corner of the parent container.  By defualt they will shrink to the minimum content size, but not automatically grow larger than their specified size.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;    &lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;style&gt;
    .c1 .flex_container {
            display: flex;
            flex-direction: row;
    }
&lt;/style&gt;
&lt;div class=&apos;c1&apos;&gt;
    &lt;div class=&apos;c1 flex_container&apos;&gt;
        &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2. Aim it if necessary&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to the flex container&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This parameter determines the direction that the flexbox container will orient the flex items.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;example&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;flex-direction: row&lt;/code&gt;
&lt;strong&gt;options&lt;/strong&gt; = &lt;code class=&quot;language-text&quot;&gt;(&amp;#39;row&amp;#39;(default), &amp;#39;column&amp;#39;,  &amp;#39;row-reverse&amp;#39;, &amp;#39;column-reverse&amp;#39;)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;row&lt;/h4&gt;
&lt;style&gt;
    .c2a .flex_container {
            display: flex;
            flex-direction: row;
    }
&lt;/style&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; row&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c2a&apos;&gt;
    &lt;div class=&apos;c1 flex_container&apos;&gt;
        &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;column&lt;/h4&gt;
&lt;style&gt;
    .c2b .flex_container {
            display: flex;
            flex-direction: column;
    }
&lt;/style&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c2b&apos;&gt;
    &lt;div class=&apos;c1 flex_container&apos;&gt;
        &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;row-reverse&lt;/h4&gt;
&lt;style&gt;
    .c2c .flex_container {
            display: flex;
            flex-direction: row-reverse;
    }
&lt;/style&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; row-reverse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c2c&apos;&gt;
    &lt;div class=&apos;c1 flex_container&apos;&gt;
        &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;column-reverse&lt;/h4&gt;
&lt;style&gt;
    .c2d .flex_container {
            display: flex;
            flex-direction: column-reverse;
    }
&lt;/style&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column-rerverse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c2d&apos;&gt;
    &lt;div class=&apos;c1 flex_container&apos;&gt;
        &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt;
        &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3. Line them up along the red Justify Laser&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to the flex container&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This parameter determines justification of the flex items within the flex container.  Think spacing or positioning around the flex items.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;example&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;justify-content: flex-end;&lt;/code&gt;
&lt;strong&gt;options&lt;/strong&gt; = &lt;code class=&quot;language-text&quot;&gt;(&amp;#39;flex-start&amp;#39;, &amp;#39;flex-end&amp;#39;, &amp;#39;space-between&amp;#39;, &amp;#39;space-around&amp;#39;, &amp;#39;space-evenly&amp;#39;, &amp;#39;stretch&amp;#39;, &amp;#39;center&amp;#39;, &amp;#39;start&amp;#39;, &amp;#39;end&amp;#39;, &amp;#39;left&amp;#39;, &amp;#39;right&amp;#39;)&lt;/code&gt;&lt;/p&gt;
&lt;style&gt;.c3a .flex_container { display: flex; justify-content: flex-start; }&lt;/style&gt;
&lt;style&gt;.c3b .flex_container { display: flex; justify-content: flex-end; }&lt;/style&gt;
&lt;style&gt;.c3c .flex_container { display: flex; justify-content: space-between; }&lt;/style&gt;
&lt;style&gt;.c3d .flex_container { display: flex; justify-content: space-around; }&lt;/style&gt;
&lt;style&gt;.c3e .flex_container { display: flex; justify-content: space-evenly; }&lt;/style&gt;
&lt;style&gt;.c3f .flex_container { display: flex; justify-content: center; }&lt;/style&gt;
&lt;h4&gt;flex-start&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c3a&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;flex-end&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-end&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c3b&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;space-between&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;space-between&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c3c&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;space-around&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; space-around&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c3d&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;space-evenly&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; space-evenly&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c3e&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;center&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c3f&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h3&gt;3b. Align them along the  blue Alignment Laser&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to the flex container&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;align-items: flex-end;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;options = (&apos;flex-start&apos;, &apos;flex-end&apos;, &apos;normal&apos;, &apos;end&apos;, &apos;self-start&apos;, &apos;self-end&apos;, &apos;center&apos;, &apos;start&apos; &apos;end&apos;)&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;.c4a .flex_container { height: 200px; display: flex; align-items: flex-start; }&lt;/style&gt;
&lt;style&gt;.c4b .flex_container { height: 200px; display: flex; align-items: flex-end; }&lt;/style&gt;
&lt;style&gt;.c4c .flex_container { height: 200px; display: flex; align-items: center; }&lt;/style&gt;
&lt;h4&gt;flex-start&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c4a&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;flex-end&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-end&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c4b&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;center&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c4c&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h3&gt;4. Take care of any one-off alignments&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to items&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;align-self: flex-start;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;options = (&apos;flex-start&apos;, &apos;flex-end&apos;, &apos;normal&apos;, &apos;end&apos;, &apos;self-start&apos;, &apos;self-end&apos;, &apos;center&apos;, &apos;start&apos; &apos;end&apos;)&lt;/p&gt;
&lt;style&gt;
.c5d .flex_container { height: 200px; display: flex; align-items: stretch; }
.c5d .item:nth-of-type(1){ align-self: flex-start  }
.c5d .item:nth-of-type(2){ align-self: center}
.c5d .item:nth-of-type(3){ height: auto; align-self: stretch;}
.c5d .item:nth-of-type(4){ height: auto; align-self: flex-end;}
&lt;/style&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;combine&lt;/h4&gt;
&lt;p&gt;the align-self property is used to take care of one off alignments and is applied to the item itself.  All of the parameters are the same as &lt;code class=&quot;language-text&quot;&gt;align-items&lt;/code&gt;.  In this example we will apply all of the previous example alignment types into one.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(1)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token property&quot;&gt;align-self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-start
     &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(2)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token property&quot;&gt;align-self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center
     &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(3)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;align-self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; stretch&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(4)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;align-self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-end&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c5d&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h3&gt;6. growth along the red Justify Laser&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to items&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;flex-grow: 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;.c6a .flex_container { display: flex; align-items: flex-start; } .c6a .item:nth-of-type(3){background: #B5F685; flex-grow: 1;}&lt;/style&gt;
&lt;style&gt;.c6b .flex_container { display: flex; align-items: flex-start; } .c6b .item:nth-of-type(3){background: #B5F685; flex-grow: 1;} .c6b .item:nth-of-type(1){background: #B5F685; flex-grow: 2;}&lt;/style&gt;
&lt;h4&gt;flex-grow&lt;/h4&gt;
&lt;p&gt;By setting &lt;code class=&quot;language-text&quot;&gt;flex-grow: 1;&lt;/code&gt; on item &lt;code class=&quot;language-text&quot;&gt;3&lt;/code&gt; it will take up any available free space.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(3)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c6a&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;multiple flex-grow&lt;/h4&gt;
&lt;p&gt;By setting &lt;code class=&quot;language-text&quot;&gt;flex-grow: 2;&lt;/code&gt; on item  &lt;code class=&quot;language-text&quot;&gt;1&lt;/code&gt; will take up the available free space 2x faster than &lt;code class=&quot;language-text&quot;&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(3)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(1)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c6b&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h3&gt;7. setting length of items along the red Justify Laser&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to items&lt;/em&gt;
&lt;em&gt;in order of importance&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;min-width&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;max-width&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;flex-basis&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;width&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;8. Out of Order&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to items&lt;/em&gt;
&lt;em&gt;behaves similar to z-index&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;order&lt;/code&gt; - takes an integer value&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;.c8a .flex_container { display: flex;} .c8a .item:nth-of-type(3){background: #B5F685; order: 1;}&lt;/style&gt;
&lt;style&gt;.c8b .flex_container { display: flex;} .c8b .item:nth-of-type(3){background: #B5F685; order: -1;}&lt;/style&gt;
&lt;h4&gt;order 1&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(3)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c8a&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h4&gt;order -1&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.item:nth-of-type(3)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -1
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c8b&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h3&gt;9. Get your own Line&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to the flex container&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;flex-wrap&lt;/code&gt; - options= &lt;code class=&quot;language-text&quot;&gt;(wrap, nowrap(default))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;prefers wrap over shrink&lt;/li&gt;
&lt;li&gt;but will still shrink after fully wraped&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;.c9a .flex_container { display: flex; flex-wrap: wrap;} .c9a {height: 700px;}&lt;/style&gt;
&lt;h4&gt;wrap&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; wrap&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c9a&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h3&gt;10. Aligning wrapped content&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;applied to the flex container&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;align-content&lt;/code&gt; - same specs as align-items but works on wrapped content.&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;.c10a .flex_container { display: flex; flex-wrap: wrap; align-content: center;} .c10a .flex_container{height: 700px;}&lt;/style&gt;
&lt;h4&gt;wrap&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.flex_container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; wrap&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;align-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&apos;c10a&apos;&gt; &lt;div class=&apos;flex_container&apos;&gt; &lt;div class=&apos;item&apos;&gt;1&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;2&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;3&lt;/div&gt; &lt;div class=&apos;item&apos;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;
&lt;h3&gt;11. Shortcuts&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;flex&lt;/strong&gt;
&lt;em&gt;applied to the flex items&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;flex: grow, shrink, basis&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;defaults - &lt;code class=&quot;language-text&quot;&gt;flex: 1 1 0px&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setting &lt;code class=&quot;language-text&quot;&gt;flex: none&lt;/code&gt; is equivalent to &lt;code class=&quot;language-text&quot;&gt;flex: 0 0 auto&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;flex-flow&lt;/strong&gt;
&lt;em&gt;applied to the flex container&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;flex: flex-direction flex-wrap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Chapter 7: In a Perfect World (flex-basis)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;flex-basis&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Starting point, ideal size, hypothetical size&lt;/li&gt;
&lt;li&gt;applied to items&lt;/li&gt;
&lt;li&gt;overrides width&lt;/li&gt;
&lt;li&gt;shinks if necessary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When Shooting Horizontally it controls width&lt;/p&gt;
&lt;p&gt;When Shooting Vertically it controls height&lt;/p&gt;
    ---

    &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td colspan=&quot;5&quot;&gt;
          I have been writing short snippets about my mentality breaking into the tech/data industry in my &lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;newsletter&lt;/a&gt;, 👉 check it out and lets get the conversation started.
        &lt;/td&gt;
        &lt;td colspan=&quot;1&quot;&gt;
          &lt;p&gt;&lt;a href=&quot;https://waylonwalker.com/newsletter&quot;&gt;&lt;img src=&quot;https://waylonwalker.com/waylon-walker-newsletter.png&quot; alt=&quot;Sign up for my Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://twitter.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/twitter.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://instagram.com/_waylonwalker&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/instagram.jpg?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/in/waylonwalker/&quot;&gt;&lt;img width=&apos;30&apos; src=&quot;https://github.com/WaylonWalker/WaylonWalker/blob/main/icon/linkedin.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&apos;https://www.buymeacoffee.com/bBdtMQO&apos;&gt;
          &lt;img src=&apos;https://cdn.buymeacoffee.com/buttons/lato-violet.png&apos; width=&apos;200px&apos; /&gt;
          &lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td colspan=&quot;5&quot; align=center style=&quot;text-align: center&quot;&gt;
          👀 see an issue, edit this post on &lt;a href=&apos;https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages/flexbox-zombies.md&apos; &gt;GitHub&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
  </content:encoded><cover_image>/flexbox-zombies/.png</cover_image></item></channel></rss>