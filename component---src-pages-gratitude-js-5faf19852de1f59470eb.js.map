{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/pages/gratitude.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","DateStyle","styled","div","GratitudePost","node","id","style","background","padding","marginTop","position","frontmatter","title","className","date","year","month","day","dangerouslySetInnerHTML","__html","html","gratitude","render","posts","this","props","data","allMarkdownRemark","edges","map","post","dt","Date","getYear","toLocaleString","getDay","slice","meta","property","name","content","textAlign","maxWidth","margin","Component"],"mappings":"8FAAe,SAASA,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT,mC,sKCMMM,EAAYC,IAAOC,IAAV,0EAAGD,CAAH,ycAiCf,SAASE,EAAT,GAA4C,IAAnBC,EAAkB,EAAlBA,KAAkB,wBACzC,OACE,yBACEC,GAAID,EAAKC,GACTC,MAAO,CACLC,WAAY,sBACZC,QAAS,OACTC,UAAW,OACXC,SAAU,aAGZ,4BAAKN,EAAKO,YAAYC,OACtB,kBAACZ,EAAD,KACE,yBAAKa,UAAU,QAAQT,EAAKU,KAAKC,KAAjC,KACA,yBAAKF,UAAU,SACZT,EAAKU,KAAKE,MADb,IACqBZ,EAAKU,KAAKG,MAGjC,yBAAKC,wBAAyB,CAAEC,OAAQf,EAAKgB,S,IAK9BC,E,kGACnBC,OAAA,WAAU,IAEOC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAYR,OAXAL,EAAMM,KAAI,SAACC,EAAMrC,GACf,IAAMsC,EAAK,IAAIC,KAAKF,EAAK1B,KAAKO,YAAYG,MAO1C,OANAS,EAAM9B,GAAN,UAA2B,GAC3B8B,EAAM9B,GAAN,eAAmCsC,EAAGE,UAAY,KAClDV,EAAM9B,GAAN,gBAAoCsC,EAAGG,eAAe,QAAS,CAC7DlB,MAAO,SAETO,EAAM9B,GAAN,eAAmC,KAAOsC,EAAGI,UAAUC,OAAO,GACvDb,KAIP,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEc,KAAM,CACJ,CAAEC,SAAU,UAAWC,KAAM,UAAWC,QAAS,WACjD,CACEF,SAAU,WACVC,KAAM,WACNC,QAAS,qCAEX,CACEF,SAAU,gBACVC,KAAM,gBACNC,QAAS,qCAEX,CACEF,SAAU,WACVC,KAAM,WACNC,QAAS,8CAEX,CACEF,SAAU,iBACVC,KAAM,iBACNC,QAAS,QAEX,CACEF,SAAU,kBACVC,KAAM,kBACNC,QAAS,OAEX,CACEF,SAAU,SACVC,KAAM,SACNC,QAAS,sCAEX,CACEF,SAAU,cACVC,KAAM,cACNC,QACE,yEAEJ,CACEF,SAAU,iBACVC,KAAM,iBACNC,QACE,yEAEJ,CACEF,SAAU,sBACVC,KAAM,sBACNC,QACE,yEAEJ,CACEF,SAAU,WACVC,KAAM,WACNC,QAAS,sBAEX,CACEF,SAAU,gBACVC,KAAM,gBACNC,QAAS,iDAIf,wBAAIlC,MAAO,CAAEmC,UAAW,WAAxB,aACA,yBAAKnC,MAAO,CAAEoC,SAAU,QAASC,OAAQ,OAAQnC,QAAS,SACvDe,EAAMM,KAAI,SAACC,EAAMrC,GAAP,OACT,kBAACU,EAAD,CAAeC,KAAM0B,EAAK1B,a,GAnFCwC","file":"component---src-pages-gratitude-js-5faf19852de1f59470eb.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { Component } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\n\nconst DateStyle = styled.div`\n  position: absolute;\n  top: 1.5rem\n  width: 200px;\n  right: 1rem;\n\n  .year {\n    position: absolute;\n    font-size: 5rem;\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    font-weight: 900;\n    color: rgba(0,0,0,.1);\n  }\n  .month {\n\n    position: absolute;\n    bottom: -4.8rem;\n    font-family: sans-serif;\n    font-weight: 700;\n    color: rgba(0,0,0,.7);\n  }\n  .day {\n    font-size: 2rem;\n    position: absolute;\n    left: -1rem;\n    font-weight: 700;\n    font-family: sans-serif;\n  }\n\n\n`\n\nfunction GratitudePost({ node, ...props }) {\n  return (\n    <div\n      id={node.id}\n      style={{\n        background: 'rgba(0, 0, 0, 0.05)',\n        padding: '2rem',\n        marginTop: '3rem',\n        position: 'relative',\n      }}\n    >\n      <h3>{node.frontmatter.title}</h3>\n      <DateStyle>\n        <div className=\"year\">{node.date.year} </div>\n        <div className=\"month\">\n          {node.date.month} {node.date.day}\n        </div>\n      </DateStyle>\n      <div dangerouslySetInnerHTML={{ __html: node.html }} />\n    </div>\n  )\n}\n\nexport default class gratitude extends Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n    posts.map((post, i) => {\n      const dt = new Date(post.node.frontmatter.date)\n      posts[i]['node']['date'] = {}\n      posts[i]['node']['date']['year'] = dt.getYear() + 1900\n      posts[i]['node']['date']['month'] = dt.toLocaleString('en-us', {\n        month: 'long',\n      })\n      posts[i]['node']['date']['day'] = ('00' + dt.getDay()).slice(-2)\n      return posts\n    })\n\n    return (\n      <Layout>\n        <Helmet\n          meta={[\n            { property: 'og:type', name: 'og:type', content: 'article' },\n            {\n              property: 'og:title',\n              name: 'og:title',\n              content: \"Waylon Walker's gratitude journal\",\n            },\n            {\n              property: 'twitter:title',\n              name: 'twitter:title',\n              content: \"Waylon Walker's gratitude journal\",\n            },\n            {\n              property: 'og:image',\n              name: 'og:image',\n              content: 'https://waylonwalker.com/waylon-walker.png',\n            },\n            {\n              property: 'og:image:width',\n              name: 'og:image:width',\n              content: '1000',\n            },\n            {\n              property: 'og:image:height',\n              name: 'og:image:height',\n              content: '420',\n            },\n            {\n              property: 'og:url',\n              name: 'og:url',\n              content: 'https://waylonwalker.com/gratitude',\n            },\n            {\n              property: 'description',\n              name: 'description',\n              content:\n                'A series of quick journal entries depicting my gratitude for the day.',\n            },\n            {\n              property: 'og:description',\n              name: 'og:description',\n              content:\n                'A series of quick journal entries depicting my gratitude for the day.',\n            },\n            {\n              property: 'twitter:description',\n              name: 'twitter:description',\n              content:\n                'A series of quick journal entries depicting my gratitude for the day.',\n            },\n            {\n              property: 'keywords',\n              name: 'keywords',\n              content: 'gratitude, journal',\n            },\n            {\n              property: 'twitter:image',\n              name: 'twitter:image',\n              content: 'https://waylonwalker.com/waylon-walker.png',\n            },\n          ]}\n        />\n        <h1 style={{ textAlign: 'center' }}>Gratitude</h1>\n        <div style={{ maxWidth: '800px', margin: 'auto', padding: '1rem' }}>\n          {posts.map((post, i) => (\n            <GratitudePost node={post.node} />\n          ))}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query gratitudeQuery {\n    allMarkdownRemark(\n      filter: { frontmatter: { templateKey: { in: [\"gratitude\"] } } }\n      sort: {\n        fields: [frontmatter___date, fileAbsolutePath]\n        order: [DESC, DESC]\n      }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            templateKey\n            date\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}