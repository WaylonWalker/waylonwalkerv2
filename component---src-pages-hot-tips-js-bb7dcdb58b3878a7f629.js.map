{"version":3,"sources":["webpack:///./src/components/HotTips.js","webpack:///./src/pages/hot-tips.js"],"names":["HotTipsStyle","styled","div","HotTips","props","componentDidMount","a","window","addEventListener","handleScroll","incrementMaxEntries","setState","numPosts","state","incrementBy","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","incrementOffset","pageYOffset","setSearch","search","SearchWithFuse","fuse","Fuse","posts","keys","filteredPosts","map","i","item","render","action","htmlFor","aria-label","type","name","value","this","id","onChange","e","target","className","slice","post","key","node","style","display","Tip","frontmatter","content","plainText","fileAbsolutePath","Component","HotTipsStyles","BlogPage","data","allMarkdownRemark","edges","Helmet","meta","property","React"],"mappings":"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","file":"component---src-pages-hot-tips-js-bb7dcdb58b3878a7f629.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Tip from '../components/Tip'\nimport FlipMove from 'react-flip-move'\nimport Fuse from 'fuse.js'\n\nconst HotTipsStyle = styled.div`\n  display: flex;\n  margin: auto;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  align-items: center;\n  align-content: center;\n  justify-self: center;\n  min-height: 100vh;\n  width: calc(min(1800px, 90vw));\n\n  input {\n    margin-left: 1rem;\n  }\n\n  img {\n    margin: auto;\n  }\n\n  .post-cards {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n\n  .post-wrapper: {\n    display: inline-flex;\n  }\n\n  .robots {\n    display: None;\n    opacity: 0;\n    visibility: hidden;\n  }\n`\n\nclass HotTips extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: props.posts,\n      filteredPosts: props.posts,\n      search: '',\n      numPosts: 3,\n      incrementBy: 9,\n      incrementOffset: 2000,\n    }\n  }\n\n  componentDidMount = async () => {\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  incrementMaxEntries = () => {\n    this.setState({ numPosts: this.state.numPosts + this.state.incrementBy })\n  }\n  handleScroll = () => {\n    const windowHeight =\n      'innerHeight' in window\n        ? window.innerHeight\n        : document.documentElement.offsetHeight\n    const body = document.body\n    const html = document.documentElement\n    const docHeight =\n      Math.max(\n        body.scrollHeight,\n        body.offsetHeight,\n        html.clientHeight,\n        html.scrollHeight,\n        html.offsetHeight\n      ) - this.state.incrementOffset\n    const windowBottom = windowHeight + window.pageYOffset\n    if (windowBottom >= docHeight) {\n      this.incrementMaxEntries()\n    }\n  }\n\n  setSearch = (search) => this.setState({ search }, () => this.SearchWithFuse())\n\n  SearchWithFuse = () => {\n    const fuse = new Fuse(this.state.posts, { keys: ['node.html'] })\n    if (this.state.search === '') {\n      this.setState({ filteredPosts: this.state.posts })\n    } else {\n      this.setState({\n        filteredPosts: fuse.search(this.state.search).map((i) => i.item),\n      })\n    }\n  }\n\n  render() {\n    return (\n      <HotTipsStyle>\n        <form action=\"\">\n          <label htmlFor=\"search\">\n            Search:\n            <input\n              aria-label=\"Search\"\n              type=\"text\"\n              name=\"search\"\n              value={this.state.search}\n              id=\"search\"\n              onChange={(e) => this.setSearch(e.target.value)}\n            />\n          </label>\n        </form>\n        <FlipMove className=\"post-cards\">\n          {this.state.filteredPosts\n            .slice(0, this.state.numPosts)\n            .map((post, i) => {\n              return (\n                <div\n                  key={post.node.id}\n                  className=\"post-wrapper\"\n                  style={{ display: 'inline-flex' }}\n                >\n                  <Tip\n                    key={post.node.id}\n                    frontmatter={post.node.frontmatter}\n                    html={post.node.html}\n                    content={post.node.plainText}\n                    fileAbsolutePath={post.node.fileAbsolutePath}\n                  />\n                </div>\n              )\n            })}\n          {/* < div className=\"robots\">\n            {this.state.posts.map((post, i) => <li><h3 id={`${post.node.frontmatter.title}-robot`}>{post.node.frontmatter.title}</h3><div className=\"description\">{post.node.frontmatter.description}</div><a href={post.node['fields']['slug']} title={post.node.frontmatter.title}>{post.node.frontmatter.title}</a></li>)}\n          </div> */}\n        </FlipMove>\n      </HotTipsStyle>\n    )\n  }\n}\nexport default HotTips\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport HotTips from '../components/HotTips'\nimport Helmet from 'react-helmet'\n\nconst HotTipsStyles = styled.div``\n\nexport default class BlogPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <Layout>\n        <Helmet\n          meta={[\n            { property: 'og:type', name: 'og:type', content: 'website' },\n            {\n              property: 'og:title',\n              name: 'og:title',\n              content: \"Waylon Walker's Feed of Spicy Hot Tips\",\n            },\n            {\n              property: 'twitter:title',\n              name: 'twitter:title',\n              content: \"Waylon Walker's Feed of Spicy Hot Tips\",\n            },\n            {\n              property: 'og:image',\n              name: 'og:image',\n              content: 'https://waylonwalker.com/waylon-walker.png',\n            },\n            {\n              property: 'og:image:width',\n              name: 'og:image:width',\n              content: '1000',\n            },\n            {\n              property: 'og:image:height',\n              name: 'og:image:height',\n              content: '420',\n            },\n            {\n              property: 'og:url',\n              name: 'og:url',\n              content: 'https://waylonwalker.com/hot-tips',\n            },\n            {\n              property: 'description',\n              name: 'description',\n              content: 'Short code tips about served up hot and spicy.',\n            },\n            {\n              property: 'og:description',\n              name: 'og:description',\n              content: 'Short code tips about served up hot and spicy.',\n            },\n            {\n              property: 'twitter:description',\n              name: 'twitter:description',\n              content: 'Short code tips about served up hot and spicy.',\n            },\n            {\n              property: 'keywords',\n              name: 'keywords',\n              content:\n                'python, kedro, datascience, bash, command line, javascript, gatsby',\n            },\n            {\n              property: 'twitter:image',\n              name: 'twitter:image',\n              content: 'https://waylonwalker.com/waylon-walker.png',\n            },\n          ]}\n        />\n        <HotTipsStyles>\n          <h1>Hot Tips</h1>\n          <HotTips posts={posts} />\n        </HotTipsStyles>\n      </Layout>\n    )\n  }\n}\n\nexport const HotTipsQuery = graphql`\n  query HotTipsQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { templateKey: { eq: \"hot-tip\" } } }\n    ) {\n      edges {\n        node {\n          html\n          plainText\n          id\n          fileAbsolutePath\n          frontmatter {\n            date\n            tags\n            afterImage\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}